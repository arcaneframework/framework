name: IFPEN devenv 2021b

on:
  workflow_dispatch:

env:
  # Framework directories
  BUILD_DIR: /__w/framework/framework/build
  INSTALL_DIR: /__w/framework/framework/install
  SOURCE_DIR: /__w/framework/framework/source
  # ccache
  CC_KEY_PREFIX: ifpen-el7-gimkl-2021b
  CCACHE_COMPRESS: true
  CCACHE_COMPRESSLEVEL: 6
  CCACHE_DIR: '/__w/framework/framework/ccache'
  CCACHE_MAXSIZE: 5G
  # CMake
  CM_BUILD_OPTS: "-j2"
  CM_BUILD_TYPE: Release
  CM_CCACHE_OPTS: "-DCMAKE_CXX_COMPILER_LAUNCHER=ccache"
  # CTest
  CT_OPTS: "--timeout 300 --output-on-failure"
  # For intel MPI to fix errors appearing in July 2023
  I_MPI_SHM_LMT: shm

jobs:
  build :
    name: ${{ matrix.config.name }}
    runs-on: ubuntu-latest
    timeout-minutes: 120
    container:
      image: ${{ matrix.config.image }}
      #options: --user root  # Avoid to match github UID in container.
    strategy:
      fail-fast: false
      matrix:
        config:
          - {
            name: "foss/2021b el7",
            image: "ghcr.io/arcaneframework/arcane-ifpen-devenv-foss-2021b:el7",
            ccache_key_prefix: "arcane-ifpen-devenv-foss-2021b_el7",
          }
          - {
            name: "foss/2021b el8",
            image: "ghcr.io/arcaneframework/arcane-ifpen-devenv-foss-2021b:el8",
            ccache_key_prefix: "arcane-ifpen-devenv-foss-2021b_el8",
          }
          - {
            name: "gimkl/2021b el7",
            image: "ghcr.io/arcaneframework/arcane-ifpen-devenv-gimkl-2021b:el7",
            ccache_key_prefix: "arcane-ifpen-devenv-gimkl-2021b_el7",
          }
          - {
            name: "gimkl/2021b el8",
            image: "ghcr.io/arcaneframework/arcane-ifpen-devenv-gimkl-2021b:el8",
            ccache_key_prefix: "arcane-ifpen-devenv-gimkl-2021b_el8",
          }
    steps:

      # ccache

      - name: Get date
        id: get-date
        shell: bash
        run: echo "NOW=$(/bin/date -u '+%Y%m%d%H%M%S')" >> $GITHUB_ENV

      - name: Restore cache
        id: restore-cache
        uses: actions/cache/restore@v3
        with:
          path: ${{ env.CCACHE_DIR }}
          key: ${{ matrix.config.ccache_key_prefix }}-${{ env.CM_BUILD_TYPE }}-${{ env.NOW }}-${{ github.run_number }}
          restore-keys: ${{ matrix.config.ccache_key_prefix }}-${{ env.CM_BUILD_TYPE }}-

      # Installation

      - name: Checkout
        id: checkout
        if: |
          (success() || failure())
        uses: actions/checkout@v3
        with:
          path: ${{ env.SOURCE_DIR }}
          submodules: true

      - name: Configure
        id: configure
        if: |
          (success() || failure()) &&
          steps.checkout.outcome == 'success'
        shell: bash
        run: cmake -S ${{ env.SOURCE_DIR }} -B ${{ env.BUILD_DIR }} -DCMAKE_INSTALL_PREFIX=${{ env.INSTALL_DIR }} ${{ env.CM_CCACHE_OPTS }} -DARCANE_WANT_CHECK=ON -DARCANE_BUILD_TYPE=${{ env.CM_BUILD_TYPE }} -DARCCORE_BUILD_MODE=Check -DREMOVE_UID_ON_DETACH=ON -DUSE_GTEST_DEATH_TEST=ON -DCMAKE_DISABLE_FIND_PACKAGE_Papi=ON -DALIEN_BUILD_COMPONENT=all

      - name: Build
        id: build
        if: |
          (success() || failure()) &&
          steps.configure.outcome == 'success'
        shell: bash
        run: cmake --build ${{ env.BUILD_DIR }} ${{ env.CM_BUILD_OPTS }}

      - name: Install
        id: install
        if: |
          (success() || failure()) &&
          steps.build.outcome == 'success'
        shell: bash
        run: cmake --install ${{ env.BUILD_DIR }}

      - name: Test
        id: test
        if: |
          (success() || failure()) &&
          steps.build.outcome == 'success'
        shell: bash
        run: ctest --test-dir ${{ env.BUILD_DIR }} ${{ env.CT_OPTS }} -E '^hydro5_4proc_3sd_4proc$'

      - name: Upload test artifact
        id: upload-test-artifact
        uses: actions/upload-artifact@v3
        if: |
          (success() || failure()) &&
          steps.test.outcome == 'failure'
        with:
          name: test-artifact
          path: ${{ env.BUILD_DIR }}/Testing
          retention-days: 1

      - name: Save cache
        id: save-cache
        if: |
          (success() || failure()) &&
          steps.build.outcome == 'success'
        uses: actions/cache/save@v3
        with:
          path: ${{ env.CCACHE_DIR }}
          key:  ${{ steps.restore-cache.outputs.cache-primary-key }}
