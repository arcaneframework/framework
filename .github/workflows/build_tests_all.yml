name: '[All] Build/Install/Test Arcane Framework (Ubuntu 20.04-22.04-24.04 / GCC 12-14 / CLang 16-17-18 / CUDA 12.5 / Minimal-Full / Release-Debug)'
# Attention : GitHub limite à 20 tests à la fois.

on:
  schedule:
    - cron: '23 1 * * *'
  workflow_dispatch:

jobs:
  build-install-test:
    strategy:
      fail-fast: false
      matrix:
        image:
          - short: 'U22_G12'
            long: 'ubuntu-2204'
            compilo_name: 'gcc'
            compilo_version: '12'
            date: '20240717'
            args: '-DARCCORE_CXX_STANDARD=23'
            cuda: 'false'
            acpp: false
            execute_tests: true

          - short: 'U22_C16'
            long: 'ubuntu-2204'
            compilo_name: 'clang'
            compilo_version: '16'
            date: '20240717'
            args: '-DARCCORE_CXX_STANDARD=23'
            cuda: 'false'
            acpp: false
            execute_tests: true

          - short: 'U24_G14'
            long: 'ubuntu-2404'
            compilo_name: 'gcc'
            compilo_version: '14'
            date: '20240717'
            args: '-DARCCORE_CXX_STANDARD=23'
            cuda: 'false'
            acpp: false
            execute_tests: true

          - short: 'U24_C18'
            long: 'ubuntu-2404'
            compilo_name: 'clang'
            compilo_version: '18'
            date: '20240717'
            args: '-DARCCORE_CXX_STANDARD=23'
            cuda: 'false'
            acpp: false
            execute_tests: true

          - short: 'U24_G13_CU125'
            long: 'ubuntu-2404'
            compilo_name: 'gcc'
            compilo_version: '13'
            date: '20240717'
            # Disable googletest with CUDA because it requires a GPU driver
            args: '-DARCCORE_CXX_STANDARD=20 -DARCANE_EXECUTE_ACCELERATOR_GOOGLETEST=OFF'
            cuda: 'cuda-125'
            acpp: false
            execute_tests: false

          - short: 'U24_C17_CU125'
            long: 'ubuntu-2404'
            compilo_name: 'clang'
            compilo_version: '17'
            date: '20240717'
            # Disable googletest with CUDA because it requires a GPU driver
            args: '-DARCCORE_CXX_STANDARD=20 -DARCANE_EXECUTE_ACCELERATOR_GOOGLETEST=OFF'
            cuda: 'cuda-125'
            acpp: false
            execute_tests: false

          - short: 'U24_ACPP'
            long: 'ubuntu-2404'
            compilo_name: 'clang'
            compilo_version: '18'
            date: '20240717'
            args: '-DARCCORE_CXX_STANDARD=23'
            cuda: 'false'
            acpp: true
            execute_tests: false

        version:
          - short: 'M'
            long: 'minimal'
            args: '-DARCANE_DISABLE_PERFCOUNTER_TESTS=ON'

          - short: 'F'
            long: 'full'
            args: '-DARCANE_DISABLE_PERFCOUNTER_TESTS=ON
              -DARCANE_DEFAULT_PARTITIONER=Metis
              -DPTScotch_INCLUDE_DIR="/usr/include/scotch"'

        config:
          - type: 'Release'
            excluded_tests: ''
            excluded_tests_with_labels: 'LARGE_HYBRID'
            ctest_args: '-j4 --timeout 1200'

          - type: 'Debug'
            excluded_tests: ''
            excluded_tests_with_labels: 'LARGE_HYBRID'
            ctest_args: '-j4 --timeout 1200'

        mpi:
          - implementation: 'OMPI'
          - implementation: 'MPICH'

        exclude:
          - { version: { short: 'F' }, mpi: { implementation: 'MPICH' } }
          - { version: { short: 'M' }, image: { short: 'U24_G13_CU125' } }
          - { version: { short: 'M' }, image: { short: 'U24_C17_CU125' } }
          - { version: { short: 'M' }, image: { short: 'U24_ACPP' } }
          - { config: { type: 'Debug' }, image: { short: 'U24_ACPP' } }

    name: '[${{matrix.image.short}}_${{matrix.version.short}}]_${{matrix.mpi.implementation}}_${{matrix.config.type}}'
    # La partie 'uses' est déterminée à la compilation, donc on ne peut pas mettre de variable ${{}}.
    uses: 'arcaneframework/gh_actions/.github/workflows/reusable_test_framework.yml@v2'
    with:
      image: ghcr.io/arcaneframework/${{matrix.image.long}}:${{matrix.image.compilo_name}}-${{matrix.image.compilo_version}}_${{matrix.version.long}}_${{matrix.image.date}}
      compilo_name: ${{ matrix.image.compilo_name }}
      compilo_version: ${{ matrix.image.compilo_version }}
      mpi: ${{ matrix.mpi.implementation }}
      cuda: ${{ matrix.image.cuda }}
      use_acpp: ${{ matrix.image.acpp }}
      type_build: ${{ matrix.config.type }}
      cmake_additionnal_args: '${{ matrix.image.args }} ${{ matrix.version.args }}'
      verbose: true
      with_samples: true
      execute_tests: ${{ matrix.image.execute_tests }}
      excluded_tests: ${{ matrix.config.excluded_tests }}
      excluded_tests_with_labels: ${{ matrix.config.excluded_tests_with_labels }}
      ctest_additionnal_args: ${{ matrix.config.ctest_args }}
      use_cache: false
