<?xml version="1.0" encoding="ISO-8859-1"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema">

    <xs:import namespace="http://www.w3.org/XML/1998/namespace" />

    <!-- Classe de base ...................................................... -->
    <!-- Séquence de 3 éléments: name, userclass et description .............. -->

    <xs:complexType name="Base">
        <xs:sequence>
            <xs:element ref="name" minOccurs="0" maxOccurs="unbounded" />
            <xs:element name="userclass" type="xs:string" minOccurs="0" maxOccurs="1" />
            <xs:element ref="description" minOccurs="0" maxOccurs="1" />
        </xs:sequence>
        <xs:attribute name="name" type="xs:string" use="required"/>
     </xs:complexType>

    <!-- Classe de base pour toutes les options .............................. -->

    <xs:complexType name="Option" abstract="true">
        <xs:complexContent>
            <xs:extension base="Base">
                <!--xs:attribute name="name" type="xs:string" use="required" /-->
                <xs:attribute name="optional" type="xs:boolean" use="optional" />
            	<xs:attribute name="default" type="xs:string" use="optional" />
                <xs:attribute name="minOccurs" type="xs:string" default="1" />
                <xs:attribute name="maxOccurs" type="xs:string" default="1" />
                <xs:attribute name="allow-null" type="xs:boolean" use="optional" />
                <xs:attribute name="interface" type="xs:string" use="optional" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

     <xs:complexType name="Simple">
       <xs:complexContent>
            <xs:extension base="Option">
           		<xs:attribute name="type" use="optional">
                	<xs:simpleType>
                		<xs:restriction base="xs:string">
           					<xs:enumeration value="ustring" />
           					<xs:enumeration value="string" />
       	    				<xs:enumeration value="real" />
   	        				<xs:enumeration value="bool" />
    	       				<xs:enumeration value="integer" />
        	   				<xs:enumeration value="int32" />
           					<xs:enumeration value="int64" />
           					<xs:enumeration value="real2" />
           					<xs:enumeration value="real3" />
           					<xs:enumeration value="real2x2" />
	           				<xs:enumeration value="real3x3" />
    	       				<xs:enumeration value="string[]" />
        	   				<xs:enumeration value="bool[]" />
           					<xs:enumeration value="real[]" />
           					<xs:enumeration value="real2[]" />
           					<xs:enumeration value="real3[]" />
	           				<xs:enumeration value="real2x2[]" />
    	       				<xs:enumeration value="real3x3[]" />
        	   				<xs:enumeration value="integer[]" />
           					<xs:enumeration value="int32[]" />
           					<xs:enumeration value="int64[]" />
           				</xs:restriction>
          			</xs:simpleType>
          		</xs:attribute>
          		<xs:attribute name="unit" type="xs:string" use="optional" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
 
    <xs:complexType name="ExtendedType">
        <xs:complexContent>
            <xs:extension base="Option">
                <xs:attribute name="type" type="xs:string" use="required" />
            </xs:extension>
		</xs:complexContent>	   	     
    </xs:complexType>
       
	<xs:complexType name="Script">
       <xs:complexContent>
            <xs:extension base="Option">
                <xs:attribute name="type" type="xs:string" use="optional" />
                <xs:attribute name="langage" type="xs:string" use="optional" />    
                <xs:attribute name="fonction" type="xs:string" use="optional" />   
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    
    <xs:complexType name="ServiceInstance">
        <xs:complexContent>
            <xs:extension base="Option">
            	<xs:attribute name="type" type="xs:string" use="optional" />
 			</xs:extension>
        </xs:complexContent>
    </xs:complexType>
    
    <xs:complexType name="Enumeration">
        <xs:complexContent>
            <xs:extension base="Option">
                <xs:sequence minOccurs="1" maxOccurs="unbounded">
                    <xs:element name="enumvalue" type="EnumValue" />
                </xs:sequence>
              	<xs:attribute name="type" type="xs:string" use="optional" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- Element enumvalue de l'option enumeration ........................... -->
    <xs:complexType name="EnumValue">
        <xs:complexContent>
            <xs:extension base="Base">
                <xs:attribute name="genvalue" type="xs:string" use="required" />
                <!--xs:attribute name="name" type="xs:string" use="required" /-->
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- Option de type complex: definition. ................................. -->
    <xs:complexType name="Complex">
        <xs:complexContent>
           <xs:extension base="Option">
	            <xs:sequence minOccurs="0" maxOccurs="unbounded">
	            	<xs:choice>
					        <xs:element name="complex" type="Complex"/>
					        <xs:element name="enumeration" type="Enumeration"/>
					        <xs:element name="service-instance" type="ServiceInstance"/>
					        <xs:element name="script" type="Script"/>
						    <xs:element name="extended" type="ExtendedType"/> 
					        <xs:element name="simple" type="Simple"/>
					        <xs:element name="attribute" type="Attribute" />
	            	</xs:choice>
	            </xs:sequence>
              <xs:attribute name="interface" type="xs:string" use="optional" />
              <xs:attribute name="ref" type="xs:string" use="optional" />
              <xs:attribute name="type" type="xs:string" use="optional" />
           </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:attributeGroup name="createdAttrGroup">
      <xs:attribute ref="xml:space"/>
    </xs:attributeGroup>
    
    <!-- Elément module ...................................................... -->
   <xs:element name="module" type="Module"  />

	<xs:complexType name="Module">
		<xs:complexContent>
	    	<xs:extension base="Base">
	        	<xs:sequence>
	        		<xs:element ref="variables" minOccurs="0" />
	        		<xs:element ref="entry-points" minOccurs="0" />
	        		<xs:element ref="options" minOccurs="0" />
	        	</xs:sequence>
	        	<xs:attribute name="type" type="xs:string" use="optional" />
	        	<xs:attribute name="version" use="optional">
                 	<xs:simpleType>
                		<xs:restriction base="xs:string">
                			<xs:enumeration value="1.0" />
                		</xs:restriction>
                	</xs:simpleType>
                </xs:attribute><xs:attribute name="namespace-macro-name" type="xs:string" use="optional" />
	        	<xs:attribute name="namespace-name" type="xs:string" use="optional" />
	        	<xs:attribute name="parent-name" type="xs:string" use="optional" />
	        	<xs:attribute name="autoload" type="xs:boolean" default="false" />
	        	<xs:attributeGroup ref="createdAttrGroup" />
	        </xs:extension>
		</xs:complexContent>
	</xs:complexType>

    <!-- Elément service ...................................................... -->
    <xs:element name="service" type="Service" />  
    
    <xs:complexType name="Service">
    	<xs:complexContent>
             <xs:extension base="Base">
                 <xs:sequence>
                     <xs:element ref="interface" minOccurs="0" maxOccurs="unbounded" />
                     <xs:element ref="variables" minOccurs="0" />
                     <xs:element ref="options" minOccurs="0" />
                     <xs:element ref="tests" minOccurs="0" />
                 </xs:sequence>
                 <xs:attribute name="version" use="optional">
                 	<xs:simpleType>
                		<xs:restriction base="xs:string">
                			<xs:enumeration value="1.0" />
                		</xs:restriction>
                	</xs:simpleType>
                </xs:attribute>
                 <xs:attribute name="namespace-macro-name" type="xs:string" use="optional" />
                 <xs:attribute name="namespace-name" type="xs:string" use="optional" />
                 <xs:attribute name="parent-name" type="xs:string" use="optional" />
                 <xs:attribute name="type" type="ServiceTypeList" default="caseoption" />
                 <xs:attributeGroup ref="createdAttrGroup" />
             </xs:extension>
         </xs:complexContent>
    </xs:complexType>

    <!-- Elements souvent references ........................................ -->

    <!-- Element name avec attribut lang ..................................... -->
    <xs:element name="name">
        <xs:complexType>
            <xs:simpleContent>
                <xs:extension base="xs:string">
                    <xs:attribute name="lang" type="xs:string" use="required" />
                </xs:extension>
            </xs:simpleContent>
        </xs:complexType>
    </xs:element>

    <!-- Element interface ............................... -->
    <xs:element name="interface">
        <xs:complexType>
            <xs:simpleContent>
                <xs:extension base="xs:string">
                    <xs:attribute name="name" type="xs:string" use="required" />
                    <xs:attribute name="inherited" type="xs:boolean" use="optional" />
                </xs:extension>
            </xs:simpleContent>
        </xs:complexType>
    </xs:element>

    <!-- Element description avec contenu HTML ............................... -->
    <xs:element name="description">
        <xs:complexType mixed="true">
            <xs:sequence>
                <xs:any minOccurs="0" maxOccurs="unbounded" processContents="skip" />
            </xs:sequence>
        </xs:complexType>
    </xs:element>

    <!-- Liste des options ................................................... -->
    <xs:element name="options">
        <xs:complexType>
            <xs:sequence minOccurs="0" maxOccurs="unbounded">
            	<xs:choice>
				    <xs:element name="complex" type="Complex"/>
				    <xs:element name="enumeration" type="Enumeration"/>
				    <xs:element name="service-instance" type="ServiceInstance"/>
				    <xs:element name="script" type="Script"/>
					<xs:element name="extended" type="ExtendedType"/> 
				    <xs:element name="simple" type="Simple"/>
            	</xs:choice>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    
    <!-- Tests unitaires  ................................................... -->
    <xs:element name="tests">
        <xs:complexType>
            <xs:sequence minOccurs="1" maxOccurs="unbounded">
            	<xs:element name="test">
            	  <xs:complexType>
				    <xs:attribute name="name" type="xs:string" use="required" />
				    <xs:attribute name="method-name" type="xs:string" use="required" />
            	  </xs:complexType>
            	</xs:element>  
            </xs:sequence>
            <xs:attribute name="class-set-up" type="xs:string" use="required" />
            <xs:attribute name="test-set-up" type="xs:string" use="required" />
            <xs:attribute name="class-tear-down" type="xs:string" use="required" />
            <xs:attribute name="test-tear-down" type="xs:string" use="required" />
        </xs:complexType>
    </xs:element>
    
    <!-- Dimension d'une variable: 0, 1 ou 2 .................................. -->
    <xs:simpleType name="Dimension">
        <xs:restriction base="xs:integer">
            <xs:minInclusive value="0" />
            <xs:maxInclusive value="2" />
        </xs:restriction>
    </xs:simpleType>
    
    <!-- Flow d'une variable: in, out, inout ................................. -->
    <xs:simpleType name="Flow">
        <xs:restriction base="xs:string">
            <xs:enumeration value="inout" />
            <xs:enumeration value="in" />
            <xs:enumeration value="out" />
        </xs:restriction>
    </xs:simpleType>
   	
    <!-- Type de service possible ................................. -->
    <xs:simpleType name="ServiceTypeList">
        <xs:restriction base="xs:string">
        	<xs:enumeration value="caseoption" />
            <xs:enumeration value="application" />
            <xs:enumeration value="session" />
            <xs:enumeration value="subdomain" />
        </xs:restriction>
    </xs:simpleType>
   	
    <!-- DataType base sur Arcane::eDataType ................................. -->
    <xs:simpleType name="DataType">
        <xs:restriction base="xs:string">
            <xs:enumeration value="real" />
            <xs:enumeration value="integer" />
            <xs:enumeration value="int32" />
            <xs:enumeration value="int64" />
            <xs:enumeration value="string" />
            <xs:enumeration value="real2" />
            <xs:enumeration value="real2x2" />
            <xs:enumeration value="real3" />
            <xs:enumeration value="real3x3" />
            <xs:enumeration value="bool" />
            <xs:enumeration value="ustring" />
        </xs:restriction>
    </xs:simpleType>
    
    <!-- ItemKind base sur Arcane::eItemKind ................................. -->
    <xs:simpleType name="ItemKind">
        <xs:restriction base="xs:string">
            <xs:enumeration value="none" />
            <xs:enumeration value="node" />
            <xs:enumeration value="edge" />
            <xs:enumeration value="face" />
            <xs:enumeration value="cell" />
            <xs:enumeration value="dualnode" />
            <xs:enumeration value="link" />
        </xs:restriction>
    </xs:simpleType>
    
    <!-- Type Where: endroit ou est appele un point d'entree ................. -->
    <xs:simpleType name="Where">
        <xs:restriction base="xs:string">
            <xs:enumeration value="compute-loop" />
            <xs:enumeration value="on-mesh-changed" />
            <xs:enumeration value="on-mesh-refinement" />
            <xs:enumeration value="init" />
            <xs:enumeration value="continue-init" />
            <xs:enumeration value="start-init" />
            <xs:enumeration value="restore" />
            <xs:enumeration value="build" />
            <xs:enumeration value="exit" />
        </xs:restriction>
    </xs:simpleType>
    
    <!-- Type pour un extended ................. --> 
    <xs:simpleType name="ExtendedTypeList">
        <xs:restriction base="xs:string">
          	<xs:enumeration value="Arcane::ItemGroup" />
            <xs:enumeration value="Arcane::FaceGroup" />
            <xs:enumeration value="Arcane::NodeGroup" />
            <xs:enumeration value="Arcane::CellGroup" />
          </xs:restriction>
    </xs:simpleType>    
     
    <!-- Type Property: propriete d'un point d'entree ........................ -->
    <xs:simpleType name="Property">
        <xs:restriction base="xs:string">
            <xs:enumeration value="none" />
            <xs:enumeration value="auto-load-begin" />
            <xs:enumeration value="auto-load-end" />
        </xs:restriction>
    </xs:simpleType>

    <!-- Liste des variables ................................................. -->
    <xs:element name="variables">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="variable" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:attribute name="field-name" type="xs:string" use="required" />
                        <xs:attribute name="name" type="xs:string" use="required" />
                        <xs:attribute name="data-type" type="DataType" use="required" />
                        <xs:attribute name="item-kind" type="ItemKind" use="required" />
                        <xs:attribute name="dim" type="Dimension" use="required" />
                        <xs:attribute name="flow" type="Flow" default="inout" />
                        <xs:attribute name="dump" type="xs:boolean" use="optional" />
                        <xs:attribute name="no-restore" type="xs:boolean" use="optional" />
                        <xs:attribute name="execution-depend" type="xs:boolean" use="optional" />
                        <xs:attribute name="sub-domain-depend" type="xs:boolean" use="optional" />
                        <xs:attribute name="sub-domain-private" type="xs:boolean" use="optional" />
                        <xs:attribute name="need-sync" type="xs:boolean" use="optional" />
                    </xs:complexType>
                </xs:element>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    
    <!-- Liste des points d'entree ........................................... -->
    <xs:element name="entry-points">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="entry-point" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:attribute name="method-name" type="xs:string" use="required" />
                        <xs:attribute name="name" type="xs:string" use="required" />
                        <xs:attribute name="where" type="Where" use="required" />
                        <xs:attribute name="property" type="Property" use="required" />
                    </xs:complexType>
                </xs:element>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    
    <xs:complexType name="Attribute">
     	<xs:complexContent>
       		<xs:extension base="Option">
	   			<!--xs:attribute name="name" type="xs:string" use="required" /-->
   				<xs:attribute name="type" type="xs:string" use="optional" default="string" />
       		</xs:extension>
       	</xs:complexContent>	
    </xs:complexType>

</xs:schema>

