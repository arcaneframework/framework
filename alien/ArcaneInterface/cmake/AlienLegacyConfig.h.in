/*
 * ALIENConfig.h file, automatically generated by CMAKE.
 * 
 * 
 */

#ifndef ALIENLEGACYCONFIG_H
#define ALIENLEGACYCONFIG_H

#define ALIEN_LEGACY_VERSION "@PROJECT_VERSION@"
#define ALIEN_LEGACY_VERSION_MAJOR @PROJECT_VERSION_MAJOR@
#define ALIEN_LEGACY_VERSION_MINOR @PROJECT_VERSION_MINOR@
#define ALIEN_LEGACY_VERSION_PATCH @PROJECT_VERSION_PATCH@

/* Defines that depends on compiler */
//Tag var as a voluntary unused variable.
//Works with any compiler but might be improved by using attribute.
#define ALIEN_UNUSED(var) do { (void)(var) ; } while(0)
#ifndef ALIEN_UNUSED_PARAM
//#define ALIEN_UNUSED_PARAM  __attribute__((unused))
#define ALIEN_UNUSED_PARAM
#endif

/* Conditional compilation */

// ARCANE
#cmakedefine ALIEN_USE_ARCANE
#ifdef ALIEN_USE_ARCANE
  #define ALIEN_USE_ARCGEOSIM
#endif // ALIEN_USE_ARCANE

// LibXml2
#cmakedefine ALIEN_USE_LIBXML2

// MPI
#cmakedefine ALIEN_USE_MPI

// Metis
#cmakedefine ALIEN_USE_METIS

// MKL
#cmakedefine ALIEN_USE_MKL

// Eigen3
#cmakedefine ALIEN_USE_EIGEN3

// UMFPACK
#cmakedefine ALIEN_USE_UMFPACK

// HDF5
#cmakedefine ALIEN_USE_HDF5

// MCGSOLVER
#cmakedefine ALIEN_USE_MCGSOLVER

// Hypre
#cmakedefine ALIEN_USE_HYPRE

// PETSc
#cmakedefine ALIEN_USE_PETSC
#ifdef ALIEN_USE_PETSC
  #cmakedefine PETSC_DESTROY_NEW
  #cmakedefine PETSC_KSPSETPCSIDE_NEW
  #cmakedefine PETSC_KSPSETOPERATORS_NEW
  #cmakedefine PETSC_KSPDESTROY_NEW
  #cmakedefine PETSC_MATDESTROY_NEW
  #cmakedefine PETSC_HAVE_MATVALID
  #cmakedefine PETSC_VIEWERDESTROY_NEW
  #cmakedefine PETSC_HAVE_KSPRICHARDSONSETSELFSCALE
  #cmakedefine PETSC_GETPCTYPE_NEW
  #cmakedefine PETSC_HAVE_KSPSETNULLSPACE
  #cmakedefine PETSC_KSPMONITORTRUERESIDUALNORM_OLD
  #cmakedefine PETSC_OPTIONSSETVALUE_OLD
#endif // ALIEN_USE_PETSC


// SLEPc
#cmakedefine ALIEN_USE_SLEPC

// MTL
#cmakedefine ALIEN_USE_MTL4
#ifdef ALIEN_USE_MTL4
  #cmakedefine MTL_4_0_9555
  #define ALIEN_USE_MTL
#endif // ALIEN_USE_MTL4

// SUPERLU
#cmakedefine ALIEN_USE_SUPERLU
#ifdef ALIEN_USE_SUPERLU
  #define Add_ // ?
#endif // ALIEN_USE_SUPERLU

// ARPACK
#cmakedefine ALIEN_USE_ARPACK

// Cuda
#cmakedefine ALIEN_USE_CUDA

// NVAMG
#cmakedefine ALIEN_USE_NVAMG

// NUMA
#cmakedefine ALIEN_USE_NUMA
#ifdef ALIEN_USE_NUMA
  #define NUMA_VERSION1_COMPATIBILITY
#endif // ALIEN_USE_NUMA

// HWLOC
#cmakedefine ALIEN_USE_HWLOC

// TBB
#cmakedefine ALIEN_USE_TBB

// HARTS
#cmakedefine ALIEN_USE_HARTS

// HTSSOLVER
#cmakedefine ALIEN_USE_HTSSOLVER

// TRILINOS
#cmakedefine ALIEN_USE_TRILINOS

// PAPI
#cmakedefine ALIEN_USE_PAPI

// IFPSolver
#cmakedefine ALIEN_USE_IFPSOLVER

// HPDDM
#cmakedefine ALIEN_USE_HPDDM

#ifndef ALIEN_USE_ARCANE
#include "alien/ServiceOptions.h"
#endif

#include <arccore/base/String.h>

// Fix for options
namespace Arccore {
    template<typename... T>
    String format(const T&... t) { return String::format(t...); }
}

#endif // ALIENLEGACYCONFIG_H
