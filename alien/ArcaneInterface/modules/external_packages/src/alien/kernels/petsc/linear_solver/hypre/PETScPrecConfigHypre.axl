<?xml version="1.0" encoding="ISO-8859-1" ?>
<!-- Author : havep at Tue Jul 29 18:45:26 2008 -->
<!-- Generated by createNew -->

<service name="PETScPrecConfigHypre" version="1.0" type="caseoption">
  <description>Service Pr√©conditionneur Hypre de PETSc
  
  HYPRE preconditioner options
  -pc_hypre_type boomeramg (choose one of) pilut parasails boomeramg ams (PCHYPRESetType)
HYPRE BoomerAMG Options
  -pc_hypre_boomeramg_cycle_type V (choose one of) V W (None)
  -pc_hypre_boomeramg_max_levels 25: Number of levels (of grids) allowed (None)
  -pc_hypre_boomeramg_max_iter 1: Maximum iterations used PER hypre call (None)
  -pc_hypre_boomeramg_tol 0.: Convergence tolerance PER hypre call (0.0 = use a fixed number of iterations) (None)
  -pc_hypre_boomeramg_truncfactor 0.: Truncation factor for interpolation (0=no truncation) (None)
  -pc_hypre_boomeramg_P_max 0: Max elements per row for interpolation operator (0=unlimited) (None)
  -pc_hypre_boomeramg_agg_nl 0: Number of levels of aggressive coarsening (None)
  -pc_hypre_boomeramg_agg_num_paths 1: Number of paths for aggressive coarsening (None)
  -pc_hypre_boomeramg_strong_threshold 0.25: Threshold for being strongly connected (None)
  -pc_hypre_boomeramg_max_row_sum 0.9: Maximum row sum (None)
  -pc_hypre_boomeramg_grid_sweeps_all 1: Number of sweeps for the up and down grid levels (None)
  -pc_hypre_boomeramg_nodal_coarsen 0: Use a nodal based coarsening 1-6 (HYPRE_BoomerAMGSetNodal)
  -pc_hypre_boomeramg_vec_interp_variant 0: Variant of algorithm 1-3 (HYPRE_BoomerAMGSetInterpVecVariant)
  -pc_hypre_boomeramg_grid_sweeps_down 1: Number of sweeps for the down cycles (None)
  -pc_hypre_boomeramg_grid_sweeps_up 1: Number of sweeps for the up cycles (None)
  -pc_hypre_boomeramg_grid_sweeps_coarse 1: Number of sweeps for the coarse level (None)
  -pc_hypre_boomeramg_smooth_type Schwarz-smoothers (choose one of) Schwarz-smoothers Pilut ParaSails Euclid (None)
  -pc_hypre_boomeramg_smooth_num_levels 25: Number of levels on which more complex smoothers are used (None)
  -pc_hypre_boomeramg_eu_level 0: Number of levels for ILU(k) in Euclid smoother (None)
  -pc_hypre_boomeramg_eu_droptolerance 0.: Drop tolerance for ILU(k) in Euclid smoother (None)
  -pc_hypre_boomeramg_eu_bj: FALSE Use Block Jacobi for ILU in Euclid smoother? (None)
  -pc_hypre_boomeramg_relax_type_all symmetric-SOR/Jacobi (choose one of) Jacobi sequential-Gauss-Seidel seqboundary-Gauss-Seidel SOR/Jacobi backward-SOR/Jacobi  symmetric-SOR/Jacobi  l1scaled-SOR/Jacobi Gaussian-elimination      CG Chebyshev FCF-Jacobi l1scaled-Jacobi (None)
  -pc_hypre_boomeramg_relax_type_down symmetric-SOR/Jacobi (choose one of) Jacobi sequential-Gauss-Seidel seqboundary-Gauss-Seidel SOR/Jacobi backward-SOR/Jacobi  symmetric-SOR/Jacobi  l1scaled-SOR/Jacobi Gaussian-elimination      CG Chebyshev FCF-Jacobi l1scaled-Jacobi (None)
  -pc_hypre_boomeramg_relax_type_up symmetric-SOR/Jacobi (choose one of) Jacobi sequential-Gauss-Seidel seqboundary-Gauss-Seidel SOR/Jacobi backward-SOR/Jacobi  symmetric-SOR/Jacobi  l1scaled-SOR/Jacobi Gaussian-elimination      CG Chebyshev FCF-Jacobi l1scaled-Jacobi (None)
  -pc_hypre_boomeramg_relax_type_coarse Gaussian-elimination (choose one of) Jacobi sequential-Gauss-Seidel seqboundary-Gauss-Seidel SOR/Jacobi backward-SOR/Jacobi  symmetric-SOR/Jacobi  l1scaled-SOR/Jacobi Gaussian-elimination      CG Chebyshev FCF-Jacobi l1scaled-Jacobi (None)
  -pc_hypre_boomeramg_relax_weight_all 1.: Relaxation weight for all levels (0 = hypre estimates, -k = determined with k CG steps) (None)
  -pc_hypre_boomeramg_relax_weight_level 1.: Set the relaxation weight for a particular level (weight,level) (None)
  -pc_hypre_boomeramg_outer_relax_weight_all 1.: Outer relaxation weight for all levels (-k = determined with k CG steps) (None)
  -pc_hypre_boomeramg_outer_relax_weight_level 1.: Set the outer relaxation weight for a particular level (weight,level) (None)
  -pc_hypre_boomeramg_no_CF: FALSE Do not use CF-relaxation (None)
  -pc_hypre_boomeramg_measure_type local (choose one of) local global (None)
  -pc_hypre_boomeramg_coarsen_type Falgout (choose one of) CLJP Ruge-Stueben  modifiedRuge-Stueben   Falgout  PMIS  HMIS (None)
  -pc_hypre_boomeramg_interp_type classical (choose one of) classical   direct multipass multipass-wts ext+i ext+i-cc standard standard-wts   FF FF1 (None)
  -pc_hypre_boomeramg_print_statistics: Print statistics (None)
  -pc_hypre_boomeramg_print_statistics 3: Print statistics (None)
  -pc_hypre_boomeramg_print_debug: Print debug information (None)
  -pc_hypre_boomeramg_nodal_relaxation: FALSE Nodal relaxation via Schwarz (None)
  </description>
  <interface name="Alien::IPETScPC" />

  <!-- Eviter l'utilisation de variable gloable dans un service -->
  <variables/>

  <options>
    <simple name="field-split-mode" type="bool" default="false">
      <description>Work around problem if Hypre is used inside a FieldSplit preconditioner</description>
    </simple>
    
    <simple name="nearnull-space-opt" type="bool" default="false">
      <description>activate nearnull space option</description>
    </simple>
    
    <simple name="coarsen-type" type="string" default="Falgout">
      <description>
      Coarsen alg type: 
      - CLJP 
      - Ruge-Stueben
      - modifiedRuge-Stueben
      - Falgout 
      - PMIS 
      - HMIS
      </description>
    </simple>
    
    <simple name="interp-type" type="string" default="classical">
      <description>
      Interpolation type :
        - classical   
        - direct 
        - multipass 
        - multipass-wts 
        - ext+i 
        - ext+i-cc 
        - standard 
        - standard-wts   
        - FF 
        - FF1 
      </description>
    </simple>
    
    <simple name="relax-type" type="string" default="SOR/Jacobi">
      <description>
      Relax type :
        - Jacobi 
        - sequential-Gauss-Seidel 
        - seqboundary-Gauss-Seidel 
        - SOR/Jacobi 
        - backward-SOR/Jacobi  
        - symmetric-SOR/Jacobi  
        - l1scaled-SOR/Jacobi 
        - Gaussian-elimination      
        - CG 
        - Chebyshev 
        - FCF-Jacobi 
        - l1scaled-Jacobi
      </description>
    </simple>
    
    <simple name="nodal-coarsen" type="integer" default="1">
      <description>
      Nodal coarsen alg :
      
    1 : Frobenius norm
    2 : sum of absolute values of elements in each block
    3 : largest element in each block (not absolute value)
    4 : row-sum norm
    6 : sum of all values in each block
      </description>
    </simple>
    
    <simple name="vec-interp-variant" type="integer" default="2">
      <description>
       Vec Interpolation Variant Algo :
    1 : GM approach 1
    2 : GM approach 2 (to be preferred over 1)
    3 : LN approach
      
      </description>
    </simple>
    
    <enumeration name="type" type="PETScPrecConfigHypreOptions::eType">
      <description>Preconditionment type</description>
      <enumvalue name="pilut" genvalue="PETScPrecConfigHypreOptions::PILUT">
        <description>Parallel ILUt preconditioner (options specialization must be done as PETSc preconditioners)</description>
      </enumvalue>
      <enumvalue name="AMG" genvalue="PETScPrecConfigHypreOptions::AMG">
        <description>AMG preconditioner (options specialization must be done as PETSc preconditioners)</description>
      </enumvalue>
      <enumvalue name="AMGN" genvalue="PETScPrecConfigHypreOptions::AMGN">
        <description>AMG preconditioner (options specialization must be done as PETSc preconditioners)</description>
      </enumvalue>
      <enumvalue name="ParaSails" genvalue="PETScPrecConfigHypreOptions::ParaSails">
        <description>SPAI preconditioner (options specialization must be done as PETSc preconditioners)</description>
      </enumvalue>
      <enumvalue name="Euclid" genvalue="PETScPrecConfigHypreOptions::Euclid">
        <description>Parallel ILU preconditioner (options specialization must be done as PETSc preconditioners)</description>
      </enumvalue>
    </enumeration>
  </options>
</service>
