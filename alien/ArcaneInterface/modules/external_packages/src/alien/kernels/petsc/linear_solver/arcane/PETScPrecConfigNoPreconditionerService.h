/* Author : havep at Fri Jun 27 21:39:25 2008
 * Generated by createNew
 */
#ifndef PETSCPRECCONFIGNOPRECONDITIONNERSERVICE_H
#define PETSCPRECCONFIGNOPRECONDITIONNERSERVICE_H

#include <alien/kernels/petsc/PETScPrecomp.h>
#include <alien/AlienExternalPackagesPrecomp.h>

#include <alien/kernels/petsc/linear_solver/IPETScPC.h>
#include <alien/kernels/petsc/linear_solver/PETScConfig.h>
#include <ALIEN/axl/PETScPrecConfigNoPreconditioner_axl.h>

/*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*/

// using namespace Arcane;

namespace Alien {

/*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*/

class ALIEN_EXTERNAL_PACKAGES_EXPORT PETScPrecConfigNoPreconditionerService
    : public ArcanePETScPrecConfigNoPreconditionerObject,
      public PETScConfig
{
 public:
/** Constructeur de la classe */
#ifdef ALIEN_USE_ARCANE
  PETScPrecConfigNoPreconditionerService(const Arcane::ServiceBuildInfo& sbi);
#endif
  PETScPrecConfigNoPreconditionerService(
      Arccore::MessagePassing::IMessagePassingMng* parallel_mng,
      std::shared_ptr<IOptionsPETScPrecConfigNoPreconditioner> options);

  /** Destructeur de la classe */
  virtual ~PETScPrecConfigNoPreconditionerService() {}

 public:
  //! Initialisation
  void configure(PC& pc, const ISpace& space, const MatrixDistribution& distribution);
  //! Check need of KSPSetUp before calling this PC configure
  virtual bool needPrematureKSPSetUp() const;
};

/*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*/

} // namespace Alien

#endif // PETSCPRECCONFIGNOPRECONDITIONNERSERVICE_H
/*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*/
