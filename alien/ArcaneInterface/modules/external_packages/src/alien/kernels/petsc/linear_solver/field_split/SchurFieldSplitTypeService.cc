// -*- C++ -*-
/* Author : havep at Tue Aug 21 10:46:30 2012
 * Generated by createNew
 */

#include <alien/kernels/petsc/linear_solver/field_split/SchurFieldSplitTypeService.h>

#include <arccore/message_passing/IMessagePassingMng.h>

/*---------------------------------------------------------------------------*/
#if ((PETSC_VERSION_MAJOR == 3 && PETSC_VERSION_MINOR >= 3) || (PETSC_VERSION_MAJOR > 3))

#include <ALIEN/axl/SchurFieldSplitType_StrongOptions.h>
/*---------------------------------------------------------------------------*/

namespace Alien {

/*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*/

/** Constructeur de la classe */
#ifdef ALIEN_USE_ARCANE
SchurFieldSplitTypeService::SchurFieldSplitTypeService(
    const Arcane::ServiceBuildInfo& sbi)
: ArcaneSchurFieldSplitTypeObject(sbi)
, PETScConfig(sbi.subDomain()->parallelMng()->isParallel())
{
}
#endif

SchurFieldSplitTypeService::SchurFieldSplitTypeService(
    Arccore::MessagePassing::IMessagePassingMng* parallel_mng,
    std::shared_ptr<IOptionsSchurFieldSplitType> options)
: ArcaneSchurFieldSplitTypeObject(options)
, PETScConfig(parallel_mng->commSize() > 1)
{
}

//! Configure FieldSplit type
Arccore::Integer
SchurFieldSplitTypeService::configure(PC& pc, const Arccore::Integer nbField)
{
  if (nbField != 2) {
    alien_fatal([&] {
      cout() << "FieldSplit Schur decomposition can be applied only on 2 blocks "
                "decompositions";
    });
  }
  Arccore::Integer code = 0;
  code += PCFieldSplitSetType(pc, PC_COMPOSITE_SCHUR);
#if ((PETSC_VERSION_MAJOR == 3 && PETSC_VERSION_MINOR >= 3) || (PETSC_VERSION_MAJOR > 3))
  code += PCFieldSplitSetSchurFactType(pc, options()->offDiagonalApproximation());
#endif
  return code;
}

/*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*/

ARCANE_REGISTER_SERVICE_SCHURFIELDSPLITTYPE(Schur, SchurFieldSplitTypeService);

/*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*/

} // namespace Alien

REGISTER_STRONG_OPTIONS_SCHURFIELDSPLITTYPE();

/*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*/

/*---------------------------------------------------------------------------*/
#endif /* PETSC_VERSION */
/*---------------------------------------------------------------------------*/
