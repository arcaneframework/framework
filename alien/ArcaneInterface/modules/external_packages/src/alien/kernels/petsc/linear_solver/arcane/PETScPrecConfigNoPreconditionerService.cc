/* Author : havep at Fri Jun 27 21:39:25 2008
 * Generated by createNew
 */

#include <alien/kernels/petsc/linear_solver/arcane/PETScPrecConfigNoPreconditionerService.h>
#include <ALIEN/axl/PETScPrecConfigNoPreconditioner_StrongOptions.h>

#include <arccore/message_passing/IMessagePassingMng.h>

/*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*/

namespace Alien {

/*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*/
/** Constructeur de la classe */

#ifdef ALIEN_USE_ARCANE
PETScPrecConfigNoPreconditionerService::PETScPrecConfigNoPreconditionerService(
    const Arcane::ServiceBuildInfo& sbi)
: ArcanePETScPrecConfigNoPreconditionerObject(sbi)
, PETScConfig(sbi.subDomain()->parallelMng()->isParallel())
{
  ;
}
#endif

PETScPrecConfigNoPreconditionerService::PETScPrecConfigNoPreconditionerService(
    Arccore::MessagePassing::IMessagePassingMng* parallel_mng,
    std::shared_ptr<IOptionsPETScPrecConfigNoPreconditioner> options)
: ArcanePETScPrecConfigNoPreconditionerObject(options)
, PETScConfig(parallel_mng->commSize() > 1)
{
  ;
}

//! Initialisation
void
PETScPrecConfigNoPreconditionerService::configure(
    PC& pc, const ISpace& space, const MatrixDistribution& distribution)
{
  alien_debug([&] { cout() << "configure PETSc none preconditioner"; });
  checkError("Set preconditioner", PCSetType(pc, PCNONE));
}
//! Check need of KSPSetUp before calling this PC configure
bool
PETScPrecConfigNoPreconditionerService::needPrematureKSPSetUp() const
{
  return false;
}

/*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*/

ARCANE_REGISTER_SERVICE_PETSCPRECCONFIGNOPRECONDITIONER(
    NoPreconditioner, PETScPrecConfigNoPreconditionerService);
ARCANE_REGISTER_SERVICE_PETSCPRECCONFIGNOPRECONDITIONER(
    NoPrec, PETScPrecConfigNoPreconditionerService);

/*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*/

} // namespace Alien

REGISTER_STRONG_OPTIONS_PETSCPRECCONFIGNOPRECONDITIONER();

/*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*/
