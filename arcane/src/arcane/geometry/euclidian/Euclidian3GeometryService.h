// -*- tab-width: 2; indent-tabs-mode: nil; coding: utf-8-with-signature -*-
//-----------------------------------------------------------------------------
// Copyright 2000-2022 CEA (www.cea.fr) IFPEN (www.ifpenergiesnouvelles.com)
// See the top-level COPYRIGHT file for details.
// SPDX-License-Identifier: Apache-2.0
//-----------------------------------------------------------------------------
#ifndef ARCGEOSIM_GEOMETRY_EUCLIDIAN3GEOMETRYSERVICE_H
#define ARCGEOSIM_GEOMETRY_EUCLIDIAN3GEOMETRYSERVICE_H
/* Author : havep at Wed Nov 14 13:55:36 2007
 * Generated by createNew
 */

#include <arcane/geometry/IGeometryMng.h>
#include <arcane/geometry/euclidian/Euclidian3Geometry.h>

namespace Arcane { }
using namespace Arcane;

#include "arcane/geometry/euclidian/Euclidian3Geometry_axl.h"
#include "arcane/geometry/impl/GeometryServiceBase.h"

ARCANE_BEGIN_NAMESPACE
NUMERICS_BEGIN_NAMESPACE

class Euclidian3GeometryService :
  public ArcaneEuclidian3GeometryObject,
  public GeometryServiceBase
{
public:
  /** Constructeur de la classe */
  Euclidian3GeometryService(const Arcane::ServiceBuildInfo & sbi);
  
  /** Destructeur de la classe */
  virtual ~Euclidian3GeometryService();
  
public:
    //! Initialisation
  void init();

  //@{ @name property management by group

  //! Update property values for an ItemGroup
  void update(ItemGroup group);

  //! Reset property for an ItemGroup
  void reset(ItemGroup group);
  
  //@}

  //! Get underlying geometry
  IGeometry * geometry();

 public:
  //@{ Extended interface for GeometryServiceBase

  //! Access to traceMng
  ITraceMng* traceMng() { return ArcaneEuclidian3GeometryObject::traceMng(); }

  //! Access to Mesh
  IMesh* mesh() { return ArcaneEuclidian3GeometryObject::subDomain()->defaultMesh(); }

  //! Name of instancied class
  const char* className() const { return "Euclidian3Geometry"; }

  //@}

 private: 
  Euclidian3Geometry * m_geometry;
};

NUMERICS_END_NAMESPACE
ARCANE_END_NAMESPACE

#endif /* ARCGEOSIM_GEOMETRY_EUCLIDIAN3GEOMETRYSERVICE_H */
