// -*- tab-width: 2; indent-tabs-mode: nil; coding: utf-8-with-signature -*-
//-----------------------------------------------------------------------------
// Copyright 2000-2022 CEA (www.cea.fr) IFPEN (www.ifpenergiesnouvelles.com)
// See the top-level COPYRIGHT file for details.
// SPDX-License-Identifier: Apache-2.0
//-----------------------------------------------------------------------------
#ifndef ARCGEOSIM_SURFACEUTILS_GEOMETRYKERNELSURFACETOOLS_GEOMETRYKERNELSURFACEIMPL_H
#define ARCGEOSIM_SURFACEUTILS_GEOMETRYKERNELSURFACETOOLS_GEOMETRYKERNELSURFACEIMPL_H
/* Author : havep at Wed Aug 27 16:19:54 2008
 * Generated by createNew
 */

#include <arcane/corefinement/surfaceutils/ISurface.h>

#include <arcane/Item.h>
#include <arcane/utils/Array.h>
#include <arcane/utils/Real3.h>

#include <GeometryKernel/datamodel/micro/surface/triangulation-data-structure.h>
namespace GK = GeometryKernel;

ARCANE_BEGIN_NAMESPACE
NUMERICS_BEGIN_NAMESPACE
using namespace Arcane;


class GeometryKernelSurfaceImpl
  : public ISurface
{
public:
  /** Constructeur de la classe */
  GeometryKernelSurfaceImpl();
  
  /** Destructeur de la classe */
  virtual ~GeometryKernelSurfaceImpl();

public:
  GK::TriangulationDataStructurePtr m_triangulation;
  UniqueArray<Node> m_node_array; //! Noeuds originaux de la triangulation 
  UniqueArray<Face> m_face_array; //! Faces originales de la triangulation 
  UniqueArray<bool> m_face_reorient; //! Flag d'orientation des faces de la triangulation (true => orientation != originale)
  Real3 m_mean_normal; //! Normale locale à la surface (sur isOwn part)
};

NUMERICS_END_NAMESPACE
ARCANE_END_NAMESPACE

#endif /* ARCGEOSIM_SURFACEUTILS_GEOMETRYKERNELSURFACETOOLS_GEOMETRYKERNELSURFACEIMPL_H */
