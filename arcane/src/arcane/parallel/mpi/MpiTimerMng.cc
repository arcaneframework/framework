// -*- tab-width: 2; indent-tabs-mode: nil; coding: utf-8-with-signature -*-
//-----------------------------------------------------------------------------
// Copyright 2000-2022 CEA (www.cea.fr) IFPEN (www.ifpenergiesnouvelles.com)
// See the top-level COPYRIGHT file for details.
// SPDX-License-Identifier: Apache-2.0
//-----------------------------------------------------------------------------
/*---------------------------------------------------------------------------*/
/* MpiTimerMng.cc                                              (C) 2000-2005 */
/*                                                                           */
/* Gestionnaire de timer utilisant MPI_Wtime.                                */
/*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*/


#include "arcane/utils/ArcanePrecomp.h"

#include "arcane/parallel/mpi/MpiTimerMng.h"
#include "arcane/parallel/mpi/ArcaneMpi.h"

/*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*/

ARCANE_BEGIN_NAMESPACE

/*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*/

extern "C++" ITimerMng*
createMpiTimerMng(ITraceMng* trace)
{
  return new MpiTimerMng(trace);
}

/*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*/

MpiTimerMng::
MpiTimerMng(ITraceMng* trace)
: TimerMng(trace)
{
}

/*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*/

MpiTimerMng::
~MpiTimerMng()
{
}

/*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*/

void MpiTimerMng::
_setRealTime()
{
  // Pour initialisation
  ::MPI_Wtime();
}

Real MpiTimerMng::
_getRealTime()
{
  return ::MPI_Wtime();
}

/*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*/

ARCANE_END_NAMESPACE

/*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*/

