// -*- tab-width: 2; indent-tabs-mode: nil; coding: utf-8-with-signature -*-
//-----------------------------------------------------------------------------
// Copyright 2000-2022 CEA (www.cea.fr) IFPEN (www.ifpenergiesnouvelles.com)
// See the top-level COPYRIGHT file for details.
// SPDX-License-Identifier: Apache-2.0
//-----------------------------------------------------------------------------
/*---------------------------------------------------------------------------*/
/* OStringStream.cc                                            (C) 2000-2018 */
/*                                                                           */
/* Flux de sortie dans une chaîne de caractères.                             */
/*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*/

#include "arcane/utils/ArcanePrecomp.h"

#include "arcane/utils/OStringStream.h"
#include "arcane/utils/Iostream.h"
#include "arcane/utils/FatalErrorException.h"

/*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*/

ARCANE_BEGIN_NAMESPACE

/*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*/

/*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*/

class OStringStreamPrivate
{
 public:
  std::ostringstream m_stream;
};

/*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*/

OStringStream::
OStringStream()
: m_p(new OStringStreamPrivate)
{
}

/*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*/

OStringStream::
OStringStream(Integer bufsize)
: m_p(new OStringStreamPrivate)
{
  ARCANE_UNUSED(bufsize);
}

/*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*/

OStringStream::
~OStringStream()
{
  delete m_p;
}

/*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*/

std::ostream& OStringStream::
operator()()
{
  return m_p->m_stream;
}

std::ostream& OStringStream::
stream()
{
  return m_p->m_stream;
}

String OStringStream::
str()
{
  return String(m_p->m_stream.str());
}

void OStringStream::
reset()
{
  m_p->m_stream.str(std::string());
}

/*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*/

ARCANE_END_NAMESPACE

/*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*/
