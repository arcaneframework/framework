// -*- tab-width: 2; indent-tabs-mode: nil; coding: utf-8-with-signature -*-
//-----------------------------------------------------------------------------
// Copyright 2000-2022 CEA (www.cea.fr) IFPEN (www.ifpenergiesnouvelles.com)
// See the top-level COPYRIGHT file for details.
// SPDX-License-Identifier: Apache-2.0
//-----------------------------------------------------------------------------
/*---------------------------------------------------------------------------*/
/* ISO88591Transcoder.cc                                       (C) 2000-2007 */
/*                                                                           */
/* Convertisseur ISO-8859-1 depuis/vers UTF-16.                              */
/*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*/

#include "arcane/utils/ArcanePrecomp.h"

#include "arcane/utils/ISO88591Transcoder.h"
#include "arcane/utils/Iostream.h"

/*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*/

/*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*/

ARCANE_BEGIN_NAMESPACE

/*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*/

ISO88591Transcoder::
~ISO88591Transcoder()
{
}

/*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*/

void ISO88591Transcoder::
build()
{
}

/*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*/

void ISO88591Transcoder::
transcodeToUtf16(const Byte* src,Integer src_len,UChar* out)
{
  const Byte* src_current = src;
  const Byte* src_end = src + src_len;
  while (src_current < src_end)
    *out++ = *src_current++;
}

/*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*/

void ISO88591Transcoder::
transcodeFromUtf16(const UChar* src,Integer src_len,Byte* out)
{
  const UChar* src_current = src;
  const UChar* src_end = src + src_len;
  bool has_error = false;
  while (src_current < src_end){
    if (*src_current < 256){
      *out++ = Byte(*src_current);
    }
    else{
      // Conversion impossible. Remplace par un caractère blanc
      has_error = true;
      *out++ = 0x1A;
    }
    ++src_current;
  }
  if (has_error){
    cerr << "ARCANE: Bad transcoding from UTF16 to ISO88591\n";
  }
}

/*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*/

ARCANE_END_NAMESPACE

/*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*/

