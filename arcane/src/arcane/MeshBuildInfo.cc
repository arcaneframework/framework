// -*- tab-width: 2; indent-tabs-mode: nil; coding: utf-8-with-signature -*-
//-----------------------------------------------------------------------------
// Copyright 2000-2022 CEA (www.cea.fr) IFPEN (www.ifpenergiesnouvelles.com)
// See the top-level COPYRIGHT file for details.
// SPDX-License-Identifier: Apache-2.0
//-----------------------------------------------------------------------------
/*---------------------------------------------------------------------------*/
/* MeshBuildInfo.cc                                            (C) 2000-2020 */
/*                                                                           */
/* Informations pour construire un maillage.                                 */
/*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*/

#include "arcane/MeshBuildInfo.h"

/*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*/

namespace Arcane
{

/*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*/

MeshBuildInfo::
MeshBuildInfo(const String& name)
: m_name(name)
{
  // TODO: vérifier la validité du nom
}

/*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*/

MeshBuildInfo& MeshBuildInfo::
addFactoryName(const String& factory_name)
{
  m_factory_name = factory_name;
  return (*this);
}

/*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*/

MeshBuildInfo& MeshBuildInfo::
addParallelMng(Ref<IParallelMng> pm)
{
  m_parallel_mng = pm;
  return (*this);
}

/*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*/

MeshBuildInfo& MeshBuildInfo::
addParentGroup(const ItemGroup& parent_group)
{
  m_parent_group = parent_group;
  return (*this);
}

/*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*/

MeshBuildInfo& MeshBuildInfo::
addNeedPartitioning(bool v)
{
  m_is_need_partitioning  = v;
  return (*this);
}

/*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*/

} // End namespace Arcane

/*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*/
