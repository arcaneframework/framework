// -*- tab-width: 2; indent-tabs-mode: nil; coding: utf-8-with-signature -*-
//-----------------------------------------------------------------------------
// Copyright 2000-2022 CEA (www.cea.fr) IFPEN (www.ifpenergiesnouvelles.com)
// See the top-level COPYRIGHT file for details.
// SPDX-License-Identifier: Apache-2.0
//-----------------------------------------------------------------------------
/*---------------------------------------------------------------------------*/
/* ItemRefinementPattern.cc                                    (C) 2000-2020 */
/*                                                                           */
/* Fonctions utilitaires pour AMR.                                           */
/*---------------------------------------------------------------------------*/

#include "arcane/ItemRefinementPattern.h"

/*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*/

namespace Arcane
{

const Real Quad4RefinementPattern4Quad::
_refine_matrix[4][4][4] =
  { /* const */
    // matrice pour l'enfant 0
    {
      // 0 1 2 3
      {1.0, 0.0, 0.0, 0.0}, // 0
      {0.5, 0.5, 0.0, 0.0}, // 1
      {.25, .25, .25, .25}, // 2
      {0.5, 0.0, 0.0, 0.5} // 3
    },
    // matrice pour l'enfant 1
    {
      // 0 1 2 3
      {0.5, 0.5, 0.0, 0.0}, // 0
      {0.0, 1.0, 0.0, 0.0}, // 1
      {0.0, 0.5, 0.5, 0.0}, // 2
      {.25, .25, .25, .25} // 3
    },
    // matrice pour l'enfant 2
    {
      // 0 1 2 3
      {0.5, 0.0, 0.0, 0.5}, // 0
      {.25, .25, .25, .25}, // 1
      {0.0, 0.0, 0.5, 0.5}, // 2
      {0.0, 0.0, 0.0, 1.0} // 3
    },
    // matrice pour l'enfant 3
    {
      // 0 1 2 3
      {.25, .25, .25, .25}, // 0
      {0.0, 0.5, 0.5, 0.0}, // 1
      {0.0, 0.0, 1.0, 0.0}, // 2
      {0.0, 0.0, 0.5, 0.5} // 3
    }
  };

// TODO: à vérifier car non testé
const Integer Quad4RefinementPattern4Quad::
_face_mapping[4][4] =
  {
    //  0  1  2  3
    {0, 1, 2, 3},
    {0, 1, 2, 3},
    {0, 1, 2, 3},
    {0, 1, 2, 3}
  };

const Integer Quad4RefinementPattern4Quad::
_face_mapping_topo[4][4] =
  {
    //  0  1  2  3
    {1, 0, 0, 1 },
    {1, 1, 0, 0 },
    {0, 1, 1, 0 },
    {0, 0, 1, 1 }
  };

/*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*/

const Real HexRefinementPattern8Hex ::_refine_matrix[8][8][8] = { /* const */
		// Les 8 enfants de type Hexa peuvent être considérés comme étant associé
		// aux 8 sommets du Hexa.  Certains des enfants sont numérotés comme
		// leur sommet correspondant, alors que les autres ne le sont pas.
		// Les enfants qui sont numérotés différemment ont été marqués avec **
		// dans les commentaires ci-dessous.

		// refine_matrix pour l'enfant 0 (l'enfant 0 is associé au noeud 0)
		{
				//  0     1     2     3     4     5     6     7
				{ 1.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0}, // 0
				{ 0.5,  0.5,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0}, // 1
				{ .25,  .25,  .25,  .25,  0.0,  0.0,  0.0,  0.0}, // 2
				{ 0.5,  0.0,  0.0,  0.5,  0.0,  0.0,  0.0,  0.0}, // 3
				{ 0.5,  0.0,  0.0,  0.0,  0.5,  0.0,  0.0,  0.0}, // 4
				{ .25,  .25,  0.0,  0.0,  .25,  .25,  0.0,  0.0}, // 5
				{.125, .125, .125, .125, .125, .125, .125, .125}, // 6
				{ .25,  0.0,  0.0,  .25,  .25,  0.0,  0.0,  .25}  // 7
		},

		// refine_matrix pour l'enfant 1 (enfant 1 est associé au noeud 1)
		{
				//  0     1     2     3     4     5     6     7
				{ 0.5,  0.5,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0}, // 0
				{ 0.0,  1.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0}, // 1
				{ 0.0,  0.5,  0.5,  0.0,  0.0,  0.0,  0.0,  0.0}, // 2
				{ .25,  .25,  .25,  .25,  0.0,  0.0,  0.0,  0.0}, // 3
				{ .25,  .25,  0.0,  0.0,  .25,  .25,  0.0,  0.0}, // 4
				{ 0.0,  0.5,  0.0,  0.0,  0.0,  0.5,  0.0,  0.0}, // 5
				{ 0.0,  .25,  .25,  0.0,  0.0,  .25,  .25,  0.0}, // 6
				{.125, .125, .125, .125, .125, .125, .125, .125}  // 7
		},

		// refine_matrix pour l'enfant 2 (enfant 2 est associé au noeud 3**)
		{
				//  0      1    2     3     4     5     6     7
				{ 0.5,  0.0,  0.0,  0.5,  0.0,  0.0,  0.0,  0.0}, // 0
				{ .25,  .25,  .25,  .25,  0.0,  0.0,  0.0,  0.0}, // 1
				{ 0.0,  0.0,  0.5,  0.5,  0.0,  0.0,  0.0,  0.0}, // 2
				{ 0.0,  0.0,  0.0,  1.0,  0.0,  0.0,  0.0,  0.0}, // 3
				{ .25,  0.0,  0.0,  .25,  .25,  0.0,  0.0,  .25}, // 4
				{.125, .125, .125, .125, .125, .125, .125, .125}, // 5
				{ 0.0,  0.0,  .25,  .25,  0.0,  0.0,  .25,  .25}, // 6
				{ 0.0,  0.0,  0.0,  0.5,  0.0,  0.0,  0.0,  0.5}  // 7
		},

		// refine_matrix pour l'enfant 3 (enfant 3 est associé au noeud 2**)
		{
				//  0      1    2     3     4     5     6     7
				{ .25,  .25,  .25,  .25,  0.0,  0.0,  0.0,  0.0}, // 0
				{ 0.0,  0.5,  0.5,  0.0,  0.0,  0.0,  0.0,  0.0}, // 1
				{ 0.0,  0.0,  1.0,  0.0,  0.0,  0.0,  0.0,  0.0}, // 2
				{ 0.0,  0.0,  0.5,  0.5,  0.0,  0.0,  0.0,  0.0}, // 3
				{.125, .125, .125, .125, .125, .125, .125, .125}, // 4
				{ 0.0,  .25,  .25,  0.0,  0.0,  .25,  .25,  0.0}, // 5
				{ 0.0,  0.0,  0.5,  0.0,  0.0,  0.0,  0.5,  0.0}, // 6
				{ 0.0,  0.0,  .25,  .25,  0.0,  0.0,  .25,  .25}  // 7
		},

		// refine_matrix pour enfant 4 (enfant 4 est associé au neoud 4)
		{
				//  0      1    2     3     4     5     6     7
				{ 0.5,  0.0,  0.0,  0.0,  0.5,  0.0,  0.0,  0.0}, // 0
				{ .25,  .25,  0.0,  0.0,  .25,  .25,  0.0,  0.0}, // 1
				{.125, .125, .125, .125, .125, .125, .125, .125}, // 2
				{ .25,  0.0,  0.0,  .25,  .25,  0.0,  0.0,  .25}, // 3
				{ 0.0,  0.0,  0.0,  0.0,  1.0,  0.0,  0.0,  0.0}, // 4
				{ 0.0,  0.0,  0.0,  0.0,  0.5,  0.5,  0.0,  0.0}, // 5
				{ 0.0,  0.0,  0.0,  0.0,  .25,  .25,  .25,  .25}, // 6
				{ 0.0,  0.0,  0.0,  0.0,  0.5,  0.0,  0.0,  0.5}  // 7
		},

		// refine_matrix pour enfant 5 (enfant 5 est associé au noeud 5)
		{
				//  0      1    2     3     4     5     6     7
				{ .25,  .25,  0.0,  0.0,  .25,  .25,  0.0,  0.0}, // 0
				{ 0.0,  0.5,  0.0,  0.0,  0.0,  0.5,  0.0,  0.0}, // 1
				{ 0.0,  .25,  .25,  0.0,  0.0,  .25,  .25,  0.0}, // 2
				{.125, .125, .125, .125, .125, .125, .125, .125}, // 3
				{ 0.0,  0.0,  0.0,  0.0,  0.5,  0.5,  0.0,  0.0}, // 4
				{ 0.0,  0.0,  0.0,  0.0,  0.0,  1.0,  0.0,  0.0}, // 5
				{ 0.0,  0.0,  0.0,  0.0,  0.0,  0.5,  0.5,  0.0}, // 6
				{ 0.0,  0.0,  0.0,  0.0,  .25,  .25,  .25,  .25}  // 7
		},

		// refine_matrix pour enfant 6 (enfant 6 est associé au noeud 7**)
		{
				//  0      1    2     3     4     5     6     7
				{ .25,  0.0,  0.0,  .25,  .25,  0.0,  0.0,  .25}, // 0
				{.125, .125, .125, .125, .125, .125, .125, .125}, // 1
				{ 0.0,  0.0,  .25,  .25,  0.0,  0.0,  .25,  .25}, // 2
				{ 0.0,  0.0,  0.0,  0.5,  0.0,  0.0,  0.0,  0.5}, // 3
				{ 0.0,  0.0,  0.0,  0.0,  0.5,  0.0,  0.0,  0.5}, // 4
				{ 0.0,  0.0,  0.0,  0.0,  .25,  .25,  .25,  .25}, // 5
				{ 0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.5,  0.5}, // 6
				{ 0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  1.0}  // 7
		},

		// refine_matrix pour l'enfant 7 (enfant 7 est associé au noeud 6**)
		{
				//  0      1    2     3     4     5     6     7
				{.125, .125, .125, .125, .125, .125, .125, .125}, // 0
				{ 0.0,  .25,  .25,  0.0,  0.0,  .25,  .25,  0.0}, // 1
				{ 0.0,  0.0,  0.5,  0.0,  0.0,  0.0,  0.5,  0.0}, // 2
				{ 0.0,  0.0,  .25,  .25,  0.0,  0.0,  .25,  .25}, // 3
				{ 0.0,  0.0,  0.0,  0.0,  .25,  .25,  .25,  .25}, // 4
				{ 0.0,  0.0,  0.0,  0.0,  0.0,  0.5,  0.5,  0.0}, // 5
				{ 0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  1.0,  0.0}, // 6
				{ 0.0,  0.0,  0.0,  0.0,  0.0,  0.0,  0.5,  0.5}  // 7
		}
};
const Integer HexRefinementPattern8Hex ::_face_mapping[8][6] = {
                             //  0  1  2  3  4  5
                                {0, 1, 2, 3, 4, 5},
                                {0, 1, 2, 3, 4, 5},
                                {0, 1, 2, 3, 4, 5},
                                {0, 1, 2, 3, 4, 5},
                                {0, 1, 2, 3, 4, 5},
                                {0, 1, 2, 3, 4, 5},
                                {0, 1, 2, 3, 4, 5},
                                {0, 1, 2, 3, 4, 5},
};
const Integer HexRefinementPattern8Hex ::_face_mapping_topo[8][6] = {
                             //  0  1  2  3  4  5
                                {1, 1, 1, 0, 0, 0},
                                {1, 0, 1, 0, 1, 0},
                                {1, 1, 0, 0, 0, 1},
                                {1, 0, 0, 0, 1, 1},
                                {0, 1, 1, 1, 0, 0},
                                {0, 0, 1, 1, 1, 0},
                                {0, 1, 0, 1, 0, 1},
                                {0, 0, 0, 1, 1, 1},
};
/*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*/

/*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*/

const double HexRefinementPattern27Hex ::_refine_matrix_1[27][8][8] = { /* const */
		// refine_matrix pour l'enfant 1
		{
			{ 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 }, // 0
			{ 0.666, 0.333, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 }, // 8
			{ 0.444, 0.222, 0.111, 0.222, 0.0, 0.0, 0.0, 0.0 }, // 16
			{ 0.666, 0.0, 0.0, 0.333, 0.0, 0.0, 0.0, 0.0 }, // 14
			{ 0.666, 0.0, 0.0, 0.0, 0.333, 0.0, 0.0, 0.0 }, // 32
			{ 0.444, 0.222, 0.0, 0.0, 0.222, 0.111, 0.0, 0.0  }, //  40
			{ 0.296, 0.148, 0.074, 0.148, 0.148, 0.074, 0.037, 0.074}, // 48
			{ 0.444, 0.0, 0.0, 0.222, 0.222, 0.0, 0.0, 0.111}, // 46
		},
		// refine_matrix pour l'enfant 2
		{
			{ 0.666, 0.333, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 }, // 8
			{ 0.333, 0.666, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 }, // 9
			{ 0.222, 0.444, 0.222, 0.111, 0.0, 0.0, 0.0, 0.0 }, // 17
			{ 0.444, 0.222, 0.111, 0.222, 0.0, 0.0, 0.0, 0.0 }, // 16
			{ 0.444, 0.222, 0.0, 0.0, 0.222, 0.111, 0.0, 0.0 }, //  40
			{ 0.222, 0.444, 0.0, 0.0, 0.111, 0.222, 0.0, 0.0 }, // 41
			{ 0.148, 0.296, 0.148, 0.074, 0.074, 0.148, 0.074, 0.037}, // 49
			{ 0.296, 0.148, 0.074, 0.148, 0.148, 0.074, 0.037, 0.074}, // 48
		},
		// refine_matrix pour l'enfant 3
		{
			{ 0.333, 0.666, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 }, // 9
			{ 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 }, // 1
			{ 0.0, 0.666, 0.333, 0.0, 0.0, 0.0, 0.0, 0.0 }, // 10
			{ 0.222, 0.444, 0.222, 0.111, 0.0, 0.0, 0.0, 0.0 }, // 17
			{ 0.222, 0.444, 0.0, 0.0, 0.111, 0.222, 0.0, 0.0  }, // 41
			{ 0.0, 0.666, 0.0, 0.0, 0.0, 0.333, 0.0, 0.0 }, // 34
			{ 0.0, 0.444, 0.222, 0.0, 0.0, 0.222, 0.111, 0.0 }, //  42
			{ 0.148, 0.296, 0.148, 0.074, 0.074, 0.148, 0.074, 0.037}, // 49
		},
		// refine_matrix pour l'enfant 4
		{
			{ 0.666, 0.0, 0.0, 0.333, 0.0, 0.0, 0.0, 0.0 }, // 14
			{ 0.444, 0.222, 0.111, 0.222, 0.0, 0.0, 0.0, 0.0 }, // 16
			{ 0.222, 0.111, 0.222, 0.444, 0.0, 0.0, 0.0, 0.0 }, // 18
			{ 0.333, 0.0, 0.0, 0.666, 0.0, 0.0, 0.0, 0.0 }, // 15
			{ 0.444, 0.0, 0.0, 0.222, 0.222, 0.0, 0.0, 0.111}, // 46
			{ 0.296, 0.148, 0.074, 0.148, 0.148, 0.074, 0.037, 0.074}, // 48
			{ 0.148, 0.074, 0.148, 0.296, 0.074, 0.037, 0.074, 0.148}, // 50
			{ 0.222, 0.0, 0.0, 0.444, 0.111, 0.0, 0.0, 0.222}, // 47
		},
		// refine_matrix pour l'enfant 5
		{
			{ 0.444, 0.222, 0.111, 0.222, 0.0, 0.0, 0.0, 0.0 }, // 16
			{ 0.222, 0.444, 0.222, 0.111, 0.0, 0.0, 0.0, 0.0 }, // 17
			{ 0.111, 0.222, 0.444, 0.222, 0.0, 0.0, 0.0, 0.0 }, // 19
			{ 0.222, 0.111, 0.222, 0.444, 0.0, 0.0, 0.0, 0.0 }, // 18
			{ 0.296, 0.148, 0.074, 0.148, 0.148, 0.074, 0.037, 0.074}, // 48
			{ 0.148, 0.296, 0.148, 0.074, 0.074, 0.148, 0.074, 0.037}, // 49
			{ 0.074, 0.148, 0.296, 0.148, 0.037, 0.074, 0.148, 0.074}, // 51
			{ 0.148, 0.074, 0.148, 0.296, 0.074, 0.037, 0.074, 0.148}, // 50
		},
		// refine_matrix pour l'enfant 6
		{
			{ 0.222, 0.444, 0.222, 0.111, 0.0, 0.0, 0.0, 0.0 }, // 17
			{ 0.0, 0.666, 0.333, 0.0, 0.0, 0.0, 0.0, 0.0 }, // 10
			{ 0.0, 0.333, 0.666, 0.0, 0.0, 0.0, 0.0, 0.0 }, // 11
			{ 0.111, 0.222, 0.444, 0.222, 0.0, 0.0, 0.0, 0.0 }, // 19
			{ 0.148, 0.296, 0.148, 0.074, 0.074, 0.148, 0.074, 0.037}, // 49
			{ 0.0, 0.444, 0.222, 0.0, 0.0, 0.222, 0.111, 0.0 }, //  42
			{ 0.0, 0.222, 0.444, 0.0, 0.0, 0.111, 0.222, 0.0 }, // 43
			{ 0.074, 0.148, 0.296, 0.148, 0.037, 0.074, 0.148, 0.074}, // 51
		},
		// refine_matrix pour l'enfant 7
		{
			{ 0.333, 0.0, 0.0, 0.666, 0.0, 0.0, 0.0, 0.0 }, // 15
			{ 0.222, 0.111, 0.222, 0.444, 0.0, 0.0, 0.0, 0.0 }, // 18
			{ 0.0, 0.0, 0.333, 0.666, 0.0, 0.0, 0.0, 0.0 }, // 13
			{ 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0 }, //  3
			{ 0.222, 0.0, 0.0, 0.444, 0.111, 0.0, 0.0, 0.222}, // 47
			{ 0.148, 0.074, 0.148, 0.296, 0.074, 0.037, 0.074, 0.148}, // 50
			{ 0.0, 0.0, 0.222, 0.444, 0.0, 0.0, 0.111, 0.222}, // 45
			{ 0.0, 0.0, 0.0, 0.666, 0.0, 0.0, 0.0,	 0.333 }, // 36
		},
		// refine_matrix pour l'enfant 8
		{
			{ 0.222, 0.111, 0.222, 0.444, 0.0, 0.0, 0.0, 0.0 }, // 18
			{ 0.111, 0.222, 0.444, 0.222, 0.0, 0.0, 0.0, 0.0 }, // 19
			{ 0.0, 0.0, 0.666, 0.333, 0.0, 0.0, 0.0, 0.0 }, // 12
			{ 0.0, 0.0, 0.333, 0.666, 0.0, 0.0, 0.0, 0.0 }, // 13
			{ 0.148, 0.074, 0.148, 0.296, 0.074, 0.037, 0.074, 0.148}, // 50
			{ 0.074, 0.148, 0.296, 0.148, 0.037, 0.074, 0.148, 0.074}, // 51
			{ 0.0, 0.0, 0.444, 0.222, 0.0, 0.0, 0.222, 0.111}, //  44
			{ 0.0, 0.0, 0.222, 0.444, 0.0, 0.0, 0.111, 0.222}, // 45
		},
		// refine_matrix pour l'enfant 9
		{
			{ 0.111, 0.222, 0.444, 0.222, 0.0, 0.0, 0.0, 0.0 }, // 19
			{ 0.0, 0.333, 0.666, 0.0, 0.0, 0.0, 0.0, 0.0 }, // 11
			{ 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0 }, // 2
			{ 0.0, 0.0, 0.666, 0.333, 0.0, 0.0, 0.0, 0.0 }, // 12
			{ 0.074, 0.148, 0.296, 0.148, 0.037, 0.074, 0.148, 0.074}, // 51
			{ 0.0, 0.222, 0.444, 0.0, 0.0, 0.111, 0.222, 0.0 }, // 43
			{ 0.0, 0.0, 0.666, 0.0, 0.0, 0.0, 0.333, 0.0    }, // 38
			{ 0.0, 0.0, 0.444, 0.222, 0.0, 0.0, 0.222, 0.111}, //  44
		},
		// refine_matrix pour l'enfant 10
		{
			{ 0.666, 0.0, 0.0, 0.0, 0.333, 0.0, 0.0, 0.0 }, // 32
			{ 0.444, 0.222, 0.0, 0.0, 0.222, 0.111, 0.0, 0.0  }, //  40
			{ 0.296, 0.148, 0.074, 0.148, 0.148, 0.074, 0.037, 0.074}, // 48
			{ 0.444, 0.0, 0.0, 0.222, 0.222, 0.0, 0.0, 0.111}, // 46
			{ 0.333, 0.0, 0.0, 0.0, 0.666, 0.0, 0.0, 0.0 }, // 33
			{ 0.222, 0.111, 0.0, 0.0, 0.444, 0.222, 0.0, 0.0}, // 52
			{ 0.148, 0.074, 0.037, 0.074, 0.296, 0.148, 0.074, 0.148}, // 60
			{ 0.222, 0.0, 0.0, 0.111, 0.444, 0.0, 0.0, 0.222}, // 58
		},
		// refine_matrix pour l'enfant 11
		{
			{ 0.444, 0.222, 0.0, 0.0, 0.222, 0.111, 0.0, 0.0  }, //  40
			{ 0.222, 0.444, 0.0, 0.0, 0.111, 0.222, 0.0, 0.0  }, // 41
			{ 0.148, 0.296, 0.148, 0.074, 0.074, 0.148, 0.074, 0.037}, // 49
			{ 0.296, 0.148, 0.074, 0.148, 0.148, 0.074, 0.037, 0.074}, // 48
			{ 0.222, 0.111, 0.0, 0.0, 0.444, 0.222, 0.0, 0.0}, // 52
			{ 0.111, 0.222, 0.0, 0.0, 0.222, 0.444, 0.0, 0.0}, // 53
			{ 0.074, 0.148, 0.074, 0.037, 0.148, 0.296, 0.148, 0.074}, // 61
			{ 0.148, 0.074, 0.037, 0.074, 0.296, 0.148, 0.074, 0.148}, // 60
		},
		// refine_matrix pour l'enfant 12
		{
			{ 0.222, 0.444, 0.0, 0.0, 0.111, 0.222, 0.0, 0.0  }, // 41
			{ 0.0, 0.666, 0.0, 0.0, 0.0, 0.333, 0.0, 0.0 }, // 34
			{ 0.0, 0.444, 0.222, 0.0, 0.0, 0.222, 0.111, 0.0 }, //  42
			{ 0.148, 0.296, 0.148, 0.074, 0.074, 0.148, 0.074, 0.037}, // 49
			{ 0.111, 0.222, 0.0, 0.0, 0.222, 0.444, 0.0, 0.0}, // 53
			{ 0.0, 0.333, 0.0, 0.0, 0.0, 0.666, 0.0, 0.0 }, // 35
			{ 0.0, 0.222, 0.111, 0.0, 0.0, 0.444, 0.222, 0.0}, // 54
			{ 0.074, 0.148, 0.074, 0.037, 0.148, 0.296, 0.148, 0.074}, // 61
		},
		// refine_matrix pour l'enfant 13
		{
			{ 0.444, 0.0, 0.0, 0.222, 0.222, 0.0, 0.0, 0.111}, // 46
			{ 0.296, 0.148, 0.074, 0.148, 0.148, 0.074, 0.037, 0.074}, // 48
			{ 0.148, 0.074, 0.148, 0.296, 0.074, 0.037, 0.074, 0.148}, // 50
			{ 0.222, 0.0, 0.0, 0.444, 0.111, 0.0, 0.0, 0.222}, // 47
			{ 0.222, 0.0, 0.0, 0.111, 0.444, 0.0, 0.0, 0.222}, // 58
			{ 0.148, 0.074, 0.037, 0.074, 0.296, 0.148, 0.074, 0.148}, // 60
			{ 0.074, 0.037, 0.074, 0.148, 0.148, 0.074, 0.148, 0.296}, // 62
			{ 0.111, 0.0, 0.0, 0.222, 0.222, 0.0, 0.0, 0.444}, // 59
		},
		// refine_matrix pour l'enfant 14
		{
			{ 0.296, 0.148, 0.074, 0.148, 0.148, 0.074, 0.037, 0.074}, // 48
			{ 0.148, 0.296, 0.148, 0.074, 0.074, 0.148, 0.074, 0.037}, // 49
			{ 0.074, 0.148, 0.296, 0.148, 0.037, 0.074, 0.148, 0.074}, // 51
			{ 0.148, 0.074, 0.148, 0.296, 0.074, 0.037, 0.074, 0.148}, // 50
			{ 0.148, 0.074, 0.037, 0.074, 0.296, 0.148, 0.074, 0.148}, // 60
			{ 0.074, 0.148, 0.074, 0.037, 0.148, 0.296, 0.148, 0.074}, // 61
			{ 0.037, 0.074, 0.148, 0.074, 0.074, 0.148, 0.296, 0.148}, // 63
			{ 0.074, 0.037, 0.074, 0.148, 0.148, 0.074, 0.148, 0.296}, // 62
		},
		// refine_matrix pour l'enfant 15
		{
			{ 0.148, 0.296, 0.148, 0.074, 0.074, 0.148, 0.074, 0.037}, // 49
			{ 0.0, 0.444, 0.222, 0.0, 0.0, 0.222, 0.111, 0.0 }, //  42
			{ 0.0, 0.222, 0.444, 0.0, 0.0, 0.111, 0.222, 0.0 }, // 43
			{ 0.074, 0.148, 0.296, 0.148, 0.037, 0.074, 0.148, 0.074}, // 51
			{ 0.074, 0.148, 0.074, 0.037, 0.148, 0.296, 0.148, 0.074}, // 61
			{ 0.0, 0.222, 0.111, 0.0, 0.0, 0.444, 0.222, 0.0}, // 54
			{ 0.0, 0.111, 0.222, 0.0, 0.0, 0.222, 0.444, 0.0}, // 55
			{ 0.037, 0.074, 0.148, 0.074, 0.074, 0.148, 0.296, 0.148}, // 63
		},
		// refine_matrix pour l'enfant 16
		{
			{ 0.222, 0.0, 0.0, 0.444, 0.111, 0.0, 0.0, 0.222}, // 47
			{ 0.148, 0.074, 0.148, 0.296, 0.074, 0.037, 0.074, 0.148}, // 50
			{ 0.0, 0.0, 0.222, 0.444, 0.0, 0.0, 0.111, 0.222}, // 45
			{ 0.0, 0.0, 0.0, 0.666, 0.0, 0.0, 0.0,	 0.333 }, // 36
			{ 0.111, 0.0, 0.0, 0.222, 0.222, 0.0, 0.0, 0.444}, // 59
			{ 0.074, 0.037, 0.074, 0.148, 0.148, 0.074, 0.148, 0.296}, // 62
			{ 0.0, 0.0, 0.111, 0.222, 0.0, 0.0, 0.222, 0.444}, // 57
			{ 0.0, 0.0, 0.0, 0.333, 0.0, 0.0, 0.0, 0.666 }, // 37
		},
		// refine_matrix pour l'enfant 17
		{
			{ 0.148, 0.074, 0.148, 0.296, 0.074, 0.037, 0.074, 0.148}, // 50
			{ 0.074, 0.148, 0.296, 0.148, 0.037, 0.074, 0.148, 0.074}, // 51
			{ 0.0, 0.0, 0.444, 0.222, 0.0, 0.0, 0.222, 0.111}, //  44
			{ 0.0, 0.0, 0.222, 0.444, 0.0, 0.0, 0.111, 0.222}, // 45
			{ 0.074, 0.037, 0.074, 0.148, 0.148, 0.074, 0.148, 0.296}, // 62
			{ 0.037, 0.074, 0.148, 0.074, 0.074, 0.148, 0.296, 0.148}, // 63
			{ 0.0, 0.0, 0.222, 0.111, 0.0, 0.0, 0.444, 0.222}, // 56
			{ 0.0, 0.0, 0.111, 0.222, 0.0, 0.0, 0.222, 0.444}, // 57
		},
		// refine_matrix pour l'enfant 18
		{
			{ 0.074, 0.148, 0.296, 0.148, 0.037, 0.074, 0.148, 0.074}, // 51
			{ 0.0, 0.222, 0.444, 0.0, 0.0, 0.111, 0.222, 0.0 }, // 43
			{ 0.0, 0.0, 0.666, 0.0, 0.0, 0.0, 0.333, 0.0    }, // 38
			{ 0.0, 0.0, 0.444, 0.222, 0.0, 0.0, 0.222, 0.111}, //  44
			{ 0.037, 0.074, 0.148, 0.074, 0.074, 0.148, 0.296, 0.148}, // 63
			{ 0.0, 0.111, 0.222, 0.0, 0.0, 0.222, 0.444, 0.0}, // 55
			{ 0.0, 0.0, 0.333, 0.0, 0.0, 0.0, 0.666, 0.0    }, // 39
			{ 0.0, 0.0, 0.222, 0.111, 0.0, 0.0, 0.444, 0.222}, // 56
		},
		// refine_matrix pour l'enfant 19
		{
			{ 0.333, 0.0, 0.0, 0.0, 0.666, 0.0, 0.0, 0.0 }, // 33
			{ 0.222, 0.111, 0.0, 0.0, 0.444, 0.222, 0.0, 0.0}, // 52
			{ 0.148, 0.074, 0.037, 0.074, 0.296, 0.148, 0.074, 0.148}, // 60
			{ 0.222, 0.0, 0.0, 0.111, 0.444, 0.0, 0.0, 0.222}, // 58
			{ 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0 }, //  4
			{ 0.0, 0.0, 0.0, 0.0, 0.666, 0.333, 0.0, 0.0 }, // 20
			{ 0.0, 0.0, 0.0, 0.0, 0.444, 0.222, 0.111, 0.222  }, //  28
			{ 0.0, 0.0, 0.0, 0.0, 0.666, 0.0, 0.0, 0.333 }, //  26
		},
		// refine_matrix pour l'enfant 20
		{
			{ 0.222, 0.111, 0.0, 0.0, 0.444, 0.222, 0.0, 0.0}, // 52
			{ 0.111, 0.222, 0.0, 0.0, 0.222, 0.444, 0.0, 0.0}, // 53
			{ 0.074, 0.148, 0.074, 0.037, 0.148, 0.296, 0.148, 0.074}, // 61
			{ 0.148, 0.074, 0.037, 0.074, 0.296, 0.148, 0.074, 0.148}, // 60
			{ 0.0, 0.0, 0.0, 0.0, 0.666, 0.333, 0.0, 0.0 }, // 20
			{ 0.0, 0.0, 0.0, 0.0, 0.333, 0.666, 0.0, 0.0 }, // 21
			{ 0.0, 0.0, 0.0, 0.0, 0.222, 0.444, 0.222, 0.111 }, // 29
			{ 0.0, 0.0, 0.0, 0.0, 0.444, 0.222, 0.111, 0.222  }, //  28
		},
		// refine_matrix pour l'enfant 21
		{
			{ 0.111, 0.222, 0.0, 0.0, 0.222, 0.444, 0.0, 0.0}, // 53
			{ 0.0, 0.333, 0.0, 0.0, 0.0, 0.666, 0.0, 0.0 }, // 35
			{ 0.0, 0.222, 0.111, 0.0, 0.0, 0.444, 0.222, 0.0}, // 54
			{ 0.074, 0.148, 0.074, 0.037, 0.148, 0.296, 0.148, 0.074}, // 61
			{ 0.0, 0.0, 0.0, 0.0, 0.333, 0.666, 0.0, 0.0 }, // 21
			{ 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0 }, //  5
			{ 0.0, 0.0, 0.0, 0.0, 0.0, 0.666, 0.333, 0.0 }, // 22
			{ 0.0, 0.0, 0.0, 0.0, 0.222, 0.444, 0.222, 0.111 }, // 29
		},
		// refine_matrix pour l'enfant 22
		{
			{ 0.222, 0.0, 0.0, 0.111, 0.444, 0.0, 0.0, 0.222}, // 58
			{ 0.148, 0.074, 0.037, 0.074, 0.296, 0.148, 0.074, 0.148}, // 60
			{ 0.074, 0.037, 0.074, 0.148, 0.148, 0.074, 0.148, 0.296}, // 62
			{ 0.111, 0.0, 0.0, 0.222, 0.222, 0.0, 0.0, 0.444}, // 59
			{ 0.0, 0.0, 0.0, 0.0, 0.666, 0.0, 0.0, 0.333 }, //  26
			{ 0.0, 0.0, 0.0, 0.0, 0.444, 0.222, 0.111, 0.222  }, //  28
			{ 0.0, 0.0, 0.0, 0.0, 0.222, 0.111, 0.222, 0.444}, //  30
			{ 0.0, 0.0, 0.0, 0.0, 0.333, 0.0, 0.0, 0.666  }, // 27
		},
		// refine_matrix pour l'enfant 23
		{
			{ 0.148, 0.074, 0.037, 0.074, 0.296, 0.148, 0.074, 0.148}, // 60
			{ 0.074, 0.148, 0.074, 0.037, 0.148, 0.296, 0.148, 0.074}, // 61
			{ 0.037, 0.074, 0.148, 0.074, 0.074, 0.148, 0.296, 0.148}, // 63
			{ 0.074, 0.037, 0.074, 0.148, 0.148, 0.074, 0.148, 0.296}, // 62
			{ 0.0, 0.0, 0.0, 0.0, 0.444, 0.222, 0.111, 0.222  }, //  28
			{ 0.0, 0.0, 0.0, 0.0, 0.222, 0.444, 0.222, 0.111 }, // 29
			{ 0.0, 0.0, 0.0, 0.0, 0.111, 0.222, 0.444, 0.222}, // 31
			{ 0.0, 0.0, 0.0, 0.0, 0.222, 0.111, 0.222, 0.444}, //  30
		},
		// refine_matrix pour l'enfant 24
		{
			{ 0.074, 0.148, 0.074, 0.037, 0.148, 0.296, 0.148, 0.074}, // 61
			{ 0.0, 0.222, 0.111, 0.0, 0.0, 0.444, 0.222, 0.0}, // 54
			{ 0.0, 0.111, 0.222, 0.0, 0.0, 0.222, 0.444, 0.0}, // 55
			{ 0.037, 0.074, 0.148, 0.074, 0.074, 0.148, 0.296, 0.148}, // 63
			{ 0.0, 0.0, 0.0, 0.0, 0.222, 0.444, 0.222, 0.111 }, // 29
			{ 0.0, 0.0, 0.0, 0.0, 0.0, 0.666, 0.333, 0.0 }, // 22
			{ 0.0, 0.0, 0.0, 0.0, 0.0, 0.333, 0.666, 0.0 }, // 23
			{ 0.0, 0.0, 0.0, 0.0, 0.111, 0.222, 0.444, 0.222}, // 31
		},
		// refine_matrix pour l'enfant 25
		{
			{ 0.111, 0.0, 0.0, 0.222, 0.222, 0.0, 0.0, 0.444}, // 59
			{ 0.074, 0.037, 0.074, 0.148, 0.148, 0.074, 0.148, 0.296}, // 62
			{ 0.0, 0.0, 0.111, 0.222, 0.0, 0.0, 0.222, 0.444}, // 57
			{ 0.0, 0.0, 0.0, 0.333, 0.0, 0.0, 0.0, 0.666 }, // 37
			{ 0.0, 0.0, 0.0, 0.0, 0.333, 0.0, 0.0, 0.666  }, // 27
			{ 0.0, 0.0, 0.0, 0.0, 0.222, 0.111, 0.222, 0.444}, //  30
			{ 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.333, 0.666 }, // 25
			{ 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0 }, // 7
		},
		// refine_matrix pour l'enfant 26
		{
			{ 0.074, 0.037, 0.074, 0.148, 0.148, 0.074, 0.148, 0.296}, // 62
			{ 0.037, 0.074, 0.148, 0.074, 0.074, 0.148, 0.296, 0.148}, // 63
			{ 0.0, 0.0, 0.222, 0.111, 0.0, 0.0, 0.444, 0.222}, // 56
			{ 0.0, 0.0, 0.111, 0.222, 0.0, 0.0, 0.222, 0.444}, // 57
			{ 0.0, 0.0, 0.0, 0.0, 0.222, 0.111, 0.222, 0.444}, //  30
			{ 0.0, 0.0, 0.0, 0.0, 0.111, 0.222, 0.444, 0.222}, // 31
			{ 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.666, 0.333 }, //  24
			{ 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.333, 0.666 }, // 25
		},
		// refine_matrix pour l'enfant 27
		{
			{ 0.037, 0.074, 0.148, 0.074, 0.074, 0.148, 0.296, 0.148}, // 63
			{ 0.0, 0.111, 0.222, 0.0, 0.0, 0.222, 0.444, 0.0}, // 55
			{ 0.0, 0.0, 0.333, 0.0, 0.0, 0.0, 0.666, 0.0    }, // 39
			{ 0.0, 0.0, 0.222, 0.111, 0.0, 0.0, 0.444, 0.222}, // 56
			{ 0.0, 0.0, 0.0, 0.0, 0.111, 0.222, 0.444, 0.222}, // 31
			{ 0.0, 0.0, 0.0, 0.0, 0.0, 0.333, 0.666, 0.0 }, // 23
			{ 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0 }, //  6
			{ 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.666, 0.333 }, //  24
		}
};

/*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*/

const double TetraRefinementPattern2Hex_2Penta_2Py_2Tetra ::_refine_matrix_1[2][8][4] = {
    {
                    //  0   1    2    3
                    { 0.5, 0.25, 0.25, 0.0 }, // 13
                    { 0.5, 0.5, 0.0, 0.0 }, // 4
                    { 0.0, 1.0, 0.0, 0.0 }, // 1
                    { 0.0, 0.5, 0.5, 0.0 }, // 5
                    { 0.25, 0.125, 0.125, 0.5 }, // 14
                    { 0.25, 0.25, 0.0, 0.5 }, // 10
                    { 0.0, 0.5, 0.0, 0.5 }, // 7
                    { 0.0, 0.25, 0.25, 0.5 }, // 11
    },
    {
                    //  0   1    2    3
                    { 0.0, 0.0, 1.0, 0.0 }, // 2
                    { 0.5, 0.0, 0.5, 0.0 }, // 6
                    { 0.5, 0.25, 0.25, 0.0 }, // 13
                    { 0.0, 0.5, 0.5, 0.0 }, // 5
                    { 0.0, 0.0, 0.5, 0.5 }, // 8
                    { 0.25, 0.0, 0.25, 0.5 }, // 12
                    { 0.25, 0.125, 0.125, 0.5 }, // 14
                    { 0.0, 0.25, 0.25, 0.5 }, // 11
    },

};
const Integer TetraRefinementPattern2Hex_2Penta_2Py_2Tetra ::_face_mapping_1[2][6] = {
                             //  0  1  2  3  4  5
                                {0, 1, 3, 0, 2, 3},
                                {0, 3, 1, 0, 3, 2},
};
const Integer TetraRefinementPattern2Hex_2Penta_2Py_2Tetra ::_face_mapping_topo_1[2][6] = {
                             //  0  1  2  3  4  5
                                {1, 0, 0, 0, 1, 1},
                                {1, 1, 1, 0, 0, 0},
};
//
const double TetraRefinementPattern2Hex_2Penta_2Py_2Tetra ::_refine_matrix_2[2][6][4] = {
    {
                    //  0   1    2    3
                    { 1.0, 0.0, 0.0, 0.0 }, // 0
                    { 0.5, 0.5, 0.0, 0.0 }, // 4
                    { 0.5, 0.25, 0.25, 0.0 }, // 13
                    { 0.5, 0.0, 0.0, 0.5 }, // 9
                    { 0.25, 0.25, 0.0, 0.5 }, // 10
                    { 0.25, 0.125, 0.125, 0.5 }, // 14
    },
    {
                    //  0   1    2    3
                    { 1.0, 0.0, 0.0, 0.0 }, // 0
                    { 0.5, 0.25, 0.25, 0.0 }, // 13
                    { 0.5, 0.0, 0.5, 0.0 }, // 6
                    { 0.5, 0.0, 0.0, 0.5 }, // 9
                    { 0.25, 0.125, 0.125, 0.5 }, // 14
                    { 0.25, 0.0, 0.25, 0.5 }, // 12
    },
};
const Integer TetraRefinementPattern2Hex_2Penta_2Py_2Tetra ::_face_mapping_2[2][5] = {
                             //  0  1  2  3  4
                                {0, 1, 2, 0, 3},
                                {0, 1, 2, 0, 3},
};
const Integer TetraRefinementPattern2Hex_2Penta_2Py_2Tetra ::_face_mapping_topo_2[2][5] = {
                             //  0  1  2  3  4
                                {1, 0, 1, 0, 0},
                                {1, 1, 0, 0, 0},
};
//
const double TetraRefinementPattern2Hex_2Penta_2Py_2Tetra ::_refine_matrix_3[2][5][4] = {
    {
                    //  0   1    2    3
                    { 0.25, 0.125, 0.125, 0.5 }, // 14
                    { 0.25, 0.25, 0.0, 0.5 }, // 10
                    { 0.0, 0.5, 0.0, 0.5 }, // 7
                    { 0.0, 0.25, 0.25, 0.5 }, // 11
                    { 0.0, 0.0, 0.0, 1.0 }, // 3
    },
    {
                    //  0   1    2    3
                    { 0.25, 0.0, 0.25, 0.5 }, // 12
                    { 0.25, 0.125, 0.125, 0.5 }, // 14
                    { 0.0, 0.25, 0.25, 0.5 }, // 11
                    { 0.0, 0.0, 0.5, 0.5 }, // 8
                    { 0.0, 0.0, 0.0, 1.0 }, // 3
    },
};
const Integer TetraRefinementPattern2Hex_2Penta_2Py_2Tetra ::_face_mapping_3[2][5] = {
                             //  0  1  2  3  4
                                {0, 1, 3, 2, 3},
                                {0, 1, 3, 2, 3},
};
const Integer TetraRefinementPattern2Hex_2Penta_2Py_2Tetra ::_face_mapping_topo_3[2][5] = {
                             //  0  1  2  3  4
                                {0, 0, 0, 1, 1},
                                {0, 1, 0, 0, 1},
};
//
const double TetraRefinementPattern2Hex_2Penta_2Py_2Tetra ::_refine_matrix_4[2][4][4] = {
    {
                    //  0   1    2    3
                    { 0.5, 0.0, 0.0, 0.5 }, // 9
                    { 0.25, 0.25, 0.0, 0.5 }, // 10
                    { 0.25, 0.125, 0.125, 0.5 }, // 14
                    { 0.0, 0.0, 0.0, 1.0 }, // 3
    },
    {
                    //  0   1    2    3
                    { 0.5, 0.0, 0.0, 0.5 }, // 9
                    { 0.25, 0.125, 0.125, 0.5 }, // 14
                    { 0.25, 0.0, 0.25, 0.5 }, // 12
                    { 0.0, 0.0, 0.0, 1.0 }, // 3
    },
};
const Integer TetraRefinementPattern2Hex_2Penta_2Py_2Tetra ::_face_mapping_4[2][4] = {
                             //  0  1  2  3
                                {0, 1, 2, 3},
                                {0, 1, 2, 3},
};
const Integer TetraRefinementPattern2Hex_2Penta_2Py_2Tetra ::_face_mapping_topo_4[2][4] = {
                             //  0  1  2  3
                                {0, 0, 1, 0},
                                {0, 1, 0, 0},
};
/*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*/

const double TetraRefinementPattern8T ::_refine_matrix_1[8][4][4] = { /* const */

		// refine_matrix pour l'enfant 0
		{
				//  0   1    2    3
				{ 1.0, 0.0, 0.0, 0.0 }, // 0
				{ 0.5, 0.5, 0.0, 0.0 }, // 6
				{ 0.5, 0.0, 0.5, 0.0 }, // 4
				{ 0.5, 0.0, 0.0, 0.5 }, // 9
		},
		// refine_matrix pour l'enfant 1
		{
				//  0   1    2    3
				{ 0.5, 0.5, 0.0, 0.0 }, // 6
				{ 0.0, 1.0, 0.0, 0.0 }, // 1
				{ 0.0, 0.5, 0.5, 0.0 }, // 5
				{ 0.0, 0.5, 0.0, 0.5 }, // 8
		},
		// refine_matrix pour l'enfant 2
		{
				//  0   1    2    3
				{ 0.5, 0.0, 0.5, 0.0 }, // 4
				{ 0.0, 0.5, 0.5, 0.0 }, // 5
				{ 0.0, 0.0, 1.0, 0.0 }, // 2
				{ 0.0, 0.0, 0.5, 0.5 }, // 7
		},
		// refine_matrix pour l'enfant 3
		{
				//  0   1    2    3
				{ 0.5, 0.0, 0.0, 0.5 }, // 9
				{ 0.0, 0.5, 0.0, 0.5 }, // 8
				{ 0.0, 0.0, 0.5, 0.5 }, // 7
				{ 0.0, 0.0, 0.0, 1.0 }, // 3
		},
		// refine_matrix pour l'enfant 4
		{
				//  0   1    2    3
				{ 0.5, 0.5, 0.0, 0.0 }, // 6
				{ 0.0, 0.5, 0.5, 0.0 }, // 5
				{ 0.5, 0.0, 0.5, 0.0 }, // 4
				{ 0.0, 0.5, 0.0, 0.5 }, // 8
		},
		// refine_matrix pour l'enfant 5
		{
				//  0   1    2    3
				{ 0.5, 0.0, 0.5, 0.0 }, // 4
				{ 0.5, 0.0, 0.0, 0.5 }, // 9
				{ 0.5, 0.5, 0.0, 0.0 }, // 6
				{ 0.0, 0.5, 0.0, 0.5 }, // 8
		},
		// refine_matrix pour l'enfant 6
		{
				//  0   1    2    3
				{ 0.5, 0.0, 0.5, 0.0 }, // 4
				{ 0.0, 0.5, 0.5, 0.0 }, // 5
				{ 0.0, 0.0, 0.5, 0.5 }, // 7
				{ 0.0, 0.5, 0.0, 0.5 }, //	8
		},
		// refine_matrix pour l'enfant 7
		{
				//  0   1    2    3
				{ 0.5, 0.0, 0.0, 0.5 }, // 9
				{ 0.5, 0.0, 0.5, 0.0 }, // 4
				{ 0.0, 0.5, 0.0, 0.5 }, // 8
				{ 0.0, 0.0, 0.5, 0.5 }, // 7
		}
};

/*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*/

const double TetraRefinementPattern32T ::_refine_matrix_1[32][4][4] = { /* const */

		// refine_matrix pour l'enfant 0
		{
				//  0   1    2    3
			    {1.0, 0.0, 0.0, 0.0 }, // 0
				{0.75, 0.25, 0.0,  0.0 }, // 8
				{0.75, 0.0, 0.25, 0.0 }, // 12
				{0.75, 0.0, 0.0, 0.25 }, // 14
		},
		// refine_matrix pour l'enfant 1
		{
				//  0   1    2    3
				{0.25, 0.75, 0.0, 0.0 }, // 9
				{0.0, 1.0, 0.0, 0.0 }, // 1
				{0.0, 0.75, 0.25, 0.0 }, // 10
				{0.0, 0.75, 0.0, 0.25 }, // 16
		},
		// refine_matrix pour l'enfant 2
		{
				//  0   1    2    3
				{0.25, 0.0, 0.75, 0.0 }, // 13
				{0.0, 0.25, 0.75, 0.0 }, // 11
				{0.0, 0.0, 1.0, 0.0 }, // 2
				{0.0, 0.0, 0.75, 0.25 }, // 18
		},
		// refine_matrix pour l'enfant 3
		{
				//  0   1    2    3
				{0.25, 0.0, 0.0, 0.75 }, // 15
				{0.0, 0.25, 0.0, 0.75 }, // 17
				{0.0, 0.0, 0.25, 0.75 }, // 19
				{0.0, 0.0, 0.0, 1.0 }, // 3
		},
		// refine_matrix pour l'enfant 4
		{
				//  0   1    2    3
			    {0.75, 0.0, 0.0, 0.25 }, // 14
				{0.75, 0.25, 0.0,  0.0 }, // 8
				{0.33, 0.33, 0.0,  0.33 }, // 5
				{0.25, 0.25, 0.25, 0.25 }, // 20
		},
		// refine_matrix pour l'enfant 5
		{
				//  0   1    2    3
				{0.75, 0.25, 0.0,  0.0 }, // 8
				{0.25, 0.75, 0.0, 0.0 }, // 9
				{0.33, 0.33, 0.0,  0.33 }, // 5
				{0.25, 0.25, 0.25, 0.25 }, // 20
		},
		// refine_matrix pour l'enfant 6
		{
				//  0   1    2    3
				{0.25, 0.75, 0.0, 0.0 }, // 9
				{0.0, 0.75, 0.0, 0.25 }, // 16
				{0.33, 0.33, 0.0,  0.33 }, // 5
				{0.25, 0.25, 0.25, 0.25 }, // 20
		},
		// refine_matrix pour l'enfant 7
		{
				//  0   1    2    3
				{0.0, 0.75, 0.0, 0.25 }, // 16
				{0.0, 0.25, 0.0, 0.75 }, // 17
				{0.33, 0.33, 0.0,  0.33 }, // 5
				{0.25, 0.25, 0.25, 0.25 }, // 20
		},
		// refine_matrix pour l'enfant 8
		{
				//  0   1    2    3
				{0.0, 0.25, 0.0, 0.75 }, // 17
				{0.25, 0.0, 0.0, 0.75 }, // 15
				{0.33, 0.33, 0.0,  0.33 }, // 5
				{0.25, 0.25, 0.25, 0.25 }, // 20
		},
		// refine_matrix pour l'enfant 9
		{
				//  0   1    2    3
				{0.25, 0.0, 0.0, 0.75 }, // 15
				{0.75, 0.0, 0.0, 0.25 }, // 14
				{0.33, 0.33, 0.0,  0.33 }, // 5
				{0.25, 0.25, 0.25, 0.25 }, // 20
		},
		// refine_matrix pour l'enfant 10
		{
				//  0   1    2    3
				{0.0, 0.75, 0.0, 0.25 }, // 16
				{0.0, 0.75, 0.25, 0.0 }, // 10
				{0.0,  0.33, 0.33, 0.33 }, // 6
				{0.25, 0.25, 0.25, 0.25 }, // 20
		},
		// refine_matrix pour l'enfant 11
		{
				//  0   1    2    3
				{0.0, 0.75, 0.25, 0.0 }, // 10
				{0.0, 0.25, 0.75, 0.0 }, // 11
				{0.0,  0.33, 0.33, 0.33 }, // 6
				{0.25, 0.25, 0.25, 0.25 }, // 20
		},
		// refine_matrix pour l'enfant 12
		{
				//  0   1    2    3
				{0.0, 0.25, 0.75, 0.0 }, // 11
				{0.0, 0.0, 0.75, 0.25 }, // 18
				{0.0,  0.33, 0.33, 0.33 }, // 6
				{0.25, 0.25, 0.25, 0.25 }, // 20
		},
		// refine_matrix pour l'enfant 13
		{
				//  0   1    2    3
				{0.0, 0.0, 0.75, 0.25 }, // 18
				{0.0, 0.0, 0.25, 0.75 }, // 19
				{0.0,  0.33, 0.33, 0.33 }, // 6
				{0.25, 0.25, 0.25, 0.25 }, // 20
		},
		// refine_matrix pour l'enfant 14
		{
				//  0   1    2    3
				{0.0, 0.0, 0.25, 0.75 }, // 19
				{0.0, 0.25, 0.0, 0.75 }, // 17
				{0.0,  0.33, 0.33, 0.33 }, // 6
				{0.25, 0.25, 0.25, 0.25 }, // 20
		},
		// refine_matrix pour l'enfant 15
		{
				//  0   1    2    3
				{0.0, 0.25, 0.0, 0.75 }, // 17
				{0.0, 0.75, 0.0, 0.25 }, // 16
				{0.0,  0.33, 0.33, 0.33 }, // 6
				{0.25, 0.25, 0.25, 0.25 }, // 20
		},
		// refine_matrix pour l'enfant 16
		{
				//  0   1    2    3
				{0.75, 0.25, 0.0,  0.0 }, // 8
				{0.25, 0.75, 0.0, 0.0 }, // 9
				{0.33, 0.33, 0.33, 0.0 }, // 4
				{0.25, 0.25, 0.25, 0.25 }, // 20
		},
		// refine_matrix pour l'enfant 17
		{
				//  0   1    2    3
				{0.25, 0.75, 0.0, 0.0 }, // 9
				{0.0, 0.75, 0.25, 0.0 }, // 10
				{0.33, 0.33, 0.33, 0.0 }, // 4
				{0.25, 0.25, 0.25, 0.25 }, // 20
		},
		// refine_matrix pour l'enfant 18
		{
				//  0   1    2    3
			    {0.0, 0.75, 0.25, 0.0 }, // 10
				{0.0, 0.25, 0.75, 0.0 }, // 11
				{0.33, 0.33, 0.33, 0.0 }, // 4
				{0.25, 0.25, 0.25, 0.25 }, // 20
		},
		// refine_matrix pour l'enfant 19
		{
				//  0   1    2    3
				{0.0, 0.25, 0.75, 0.0 }, // 11
				{0.25, 0.0, 0.75, 0.0 }, // 13
				{0.33, 0.33, 0.33, 0.0 }, // 4
				{0.25, 0.25, 0.25, 0.25 }, // 20
		},
		// refine_matrix pour l'enfant 20
		{
				//  0   1    2    3
				{0.25, 0.0, 0.75, 0.0 }, // 13
				{0.75, 0.0, 0.25, 0.0 }, // 12
				{0.33, 0.33, 0.33, 0.0 }, // 4
				{0.25, 0.25, 0.25, 0.25 }, // 20
		},
		// refine_matrix pour l'enfant 21
		{
				//  0   1    2    3
				{0.75, 0.0, 0.25, 0.0 }, // 12
				{0.75, 0.25, 0.0,  0.0 }, // 8
				{0.33, 0.33, 0.33, 0.0 }, // 4
				{0.25, 0.25, 0.25, 0.25 }, // 20
		},
		// refine_matrix pour l'enfant 22
		{
				//  0   1    2    3
				{0.75, 0.0, 0.0, 0.25 }, // 14
				{0.75, 0.0, 0.25, 0.0 }, // 12
				{0.33, 0.0,  0.33, 0.33 }, // 7
				{0.25, 0.25, 0.25, 0.25 }, // 20
		},
		// refine_matrix pour l'enfant 23
		{
				//  0   1    2    3
			    {0.75, 0.0, 0.25, 0.0 }, // 12
				{0.25, 0.0, 0.75, 0.0 }, // 13
				{0.33, 0.0,  0.33, 0.33 }, // 7
				{0.25, 0.25, 0.25, 0.25 }, // 20
		},
		// refine_matrix pour l'enfant 24
		{
				//  0   1    2    3
			    {0.25, 0.0, 0.75, 0.0 }, // 13
				{0.0, 0.0, 0.75, 0.25 }, // 18
				{0.33, 0.0,  0.33, 0.33 }, // 7
				{0.25, 0.25, 0.25, 0.25 }, // 20
		},
		// refine_matrix pour l'enfant 25
		{
				//  0   1    2    3
			    {0.0, 0.0, 0.75, 0.25 }, // 18
				{0.0, 0.0, 0.25, 0.75 }, // 19
				{0.33, 0.0, 0.33, 0.33 }, // 7
				{0.25, 0.25, 0.25, 0.25 }, // 20
		},
			// refine_matrix pour l'enfant 26
		{
				//  0   1    2    3
				{0.0, 0.0, 0.25, 0.75 }, // 19
				{0.25, 0.0, 0.0, 0.75 }, // 15
				{0.33, 0.0, 0.33, 0.33 }, // 7
				{0.25, 0.25, 0.25, 0.25 }, // 20
		},
		// refine_matrix pour l'enfant 27
		{
				//  0   1    2    3
			    {0.25, 0.0, 0.0, 0.75 }, // 15
				{0.75, 0.0, 0.0, 0.25 }, // 14
				{0.33, 0.0, 0.33, 0.33 }, // 7
				{0.25, 0.25, 0.25, 0.25 }, // 20
		},
		// refine_matrix pour l'enfant 28
		{
				//  0   1    2    3
				{0.75, 0.0,  0.0,  0.25 }, // 14
				{0.75, 0.25, 0.0,  0.0 }, // 8
				{0.75, 0.0,  0.25, 0.0 }, // 12
				{0.25, 0.25, 0.25, 0.25 }, // 20
				},
		// refine_matrix pour l'enfant 29
		{
				//  0   1    2    3
				{0.0,  0.0,  0.25, 0.75 }, // 19
				{0.25, 0.0,  0.0,  0.75 }, // 15
				{0.0,  0.25, 0.0,  0.75 }, // 17
				{0.25, 0.25, 0.25, 0.25 }, // 20
				},
		// refine_matrix pour l'enfant 30
		{
				//  0   1    2    3
				{0.25, 0.75, 0.0,  0.0 }, // 9
				{0.0,  0.75, 0.0,  0.25 }, // 16
				{0.0,  0.75, 0.25, 0.0 }, // 10
				{0.25, 0.25, 0.25, 0.25 }, // 20
				},
		// refine_matrix pour l'enfant 31
		{
				//  0   1    2    3
				{0.0,  0.25, 0.75, 0.0 }, // 11
				{0.0,  0.0,  0.75, 0.25 }, // 18
				{0.25, 0.0,  0.75, 0.0 }, // 13
				{0.25, 0.25, 0.25, 0.25 }, // 20
		}
};

/*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*/

const double PrismRefinementPattern4Hex_4Pr ::_refine_matrix_1[4][8][6] = {
    {
                    //  0   1    2    3    4    5
                    { 0.0, 1.0, 0.0, 0.0, 0.0, 0.0 },           // 1
                    { 0.0, 0.5, 0.5, 0.0, 0.0, 0.0 },           // 7
                    { 0.5, 0.25, 0.25, 0.0, 0.0, 0.0 },         // 18
                    { 0.5, 0.5, 0.0, 0.0, 0.0, 0.0 },           // 6
                    { 0.0, 0.5, 0.0, 0.0, 0.5, 0.0 },           // 13
                    { 0.0, 0.25, 0.25, 0.0, 0.25, 0.25 },       // 16
                    { 0.25, 0.125, 0.125, 0.25, 0.125, 0.125 }, // 20
                    { 0.25, 0.25, 0.0, 0.25, 0.25, 0.0 },       // 15
    },
    {
                    //  0   1    2    3    4    5
                    { 0.0, 0.5, 0.0, 0.0, 0.5, 0.0 },           // 13
                    { 0.0, 0.25, 0.25, 0.0, 0.25, 0.25 },       // 16
                    { 0.25, 0.125, 0.125, 0.25, 0.125, 0.125 }, // 20
                    { 0.25, 0.25, 0.0, 0.25, 0.25, 0.0 },       // 15
                    { 0.0, 0.0, 0.0, 0.0, 1.0, 0.0 },           // 4
                    { 0.0, 0.0, 0.0, 0.0, 0.5, 0.5 },           // 10
                    { 0.0, 0.0, 0.0, 0.5, 0.25, 0.25 },         // 19
                    { 0.0, 0.0, 0.0, 0.5, 0.5, 0.0 },           // 9
    },
    {
                    //  0   1    2    3    4    5
                    { 0.0, 0.5, 0.5, 0.0, 0.0, 0.0 }, // 7
                    { 0.0, 0.0, 1.0, 0.0, 0.0, 0.0 }, // 2
                    { 0.5, 0.0, 0.5, 0.0, 0.0, 0.0 }, // 8
                    { 0.5, 0.25, 0.25, 0.0, 0.0, 0.0 }, // 18
                    { 0.0, 0.25, 0.25, 0.0, 0.25, 0.25 }, // 16
                    { 0.0, 0.0, 0.5, 0.0, 0.0, 0.5 }, // 14
                    { 0.25, 0.0, 0.25, 0.25, 0.0, 0.25 }, // 17
                    { 0.25, 0.125, 0.125, 0.25, 0.125, 0.125 }, // 20
    },
    {
                    //  0   1    2    3    4    5
                    { 0.0, 0.25, 0.25, 0.0, 0.25, 0.25 }, // 16
                    { 0.0, 0.0, 0.5, 0.0, 0.0, 0.5 }, // 14
                    { 0.25, 0.0, 0.25, 0.25, 0.0, 0.25 }, // 17
                    { 0.25, 0.125, 0.125, 0.25, 0.125, 0.125 }, // 20
                    { 0.0, 0.0, 0.0, 0.0, 0.5, 0.5 }, // 10
                    { 0.0, 0.0, 0.0, 0.0, 0.0, 1.0 }, // 5
                    { 0.0, 0.0, 0.0, 0.5, 0.0, 0.5 }, // 11
                    { 0.0, 0.0, 0.0, 0.5, 0.25, 0.25 }, // 19
    },
};
const Integer PrismRefinementPattern4Hex_4Pr ::_face_mapping_1[4][6] = {
                             //  0  1  2  3  4  5
                                {0, 2, 4, 3, 1, 4},
                                {0, 2, 4, 3, 1, 4},
                                {0, 2, 4, 3, 1, 4},
                                {0, 2, 4, 3, 1, 4},
};
const Integer PrismRefinementPattern4Hex_4Pr ::_face_mapping_topo_1[4][6] = {
                             //  0  1  2  3  4  5
                                {1, 1, 1, 0, 0, 0},
                                {0, 1, 1, 1, 0, 0},
                                {1, 0, 1, 0, 1, 0},
                                {0, 0, 1, 1, 1, 0},
};
//
const double PrismRefinementPattern4Hex_4Pr ::_refine_matrix_2[4][6][6] = {
    {
                    //  0   1    2    3    4    5
                    { 1.0, 0.0, 0.0, 0.0, 0.0, 0.0 }, // 0
                    { 0.5, 0.5, 0.0, 0.0, 0.0, 0.0 }, // 6
                    { 0.5, 0.25, 0.25, 0.0, 0.0, 0.0 }, // 18
                    { 0.5, 0.0, 0.0, 0.5, 0.0, 0.0 }, // 12
                    { 0.25, 0.25, 0.0, 0.25, 0.25, 0.0 }, // 15
                    { 0.25, 0.125, 0.125, 0.25, 0.125, 0.125 }, // 20
    },
    {
                    //  0   1    2    3    4    5
                    { 0.5, 0.0, 0.0, 0.5, 0.0, 0.0 }, // 12
                    { 0.25, 0.25, 0.0, 0.25, 0.25, 0.0 }, // 15
                    { 0.25, 0.125, 0.125, 0.25, 0.125, 0.125 }, // 20
                    { 0.0, 0.0, 0.0, 1.0, 0.0, 0.0 }, // 3
                    { 0.0, 0.0, 0.0, 0.5, 0.5, 0.0 }, // 9
                    { 0.0, 0.0, 0.0, 0.5, 0.25, 0.25 }, // 19
    },
    {
                    //  0   1    2    3    4    5
                    { 1.0, 0.0, 0.0, 0.0, 0.0, 0.0 }, // 0
                    { 0.5, 0.25, 0.25, 0.0, 0.0, 0.0 }, // 18
                    { 0.5, 0.0, 0.5, 0.0, 0.0, 0.0 }, // 8
                    { 0.5, 0.0, 0.0, 0.5, 0.0, 0.0 }, // 12
                    { 0.25, 0.125, 0.125, 0.25, 0.125, 0.125 }, // 20
                    { 0.25, 0.0, 0.25, 0.25, 0.0, 0.25 }, // 17
    },
    {
                    //  0   1    2    3    4    5
                    { 0.5, 0.0, 0.0, 0.5, 0.0, 0.0 }, // 12
                    { 0.25, 0.125, 0.125, 0.25, 0.125, 0.125 }, // 20
                    { 0.25, 0.0, 0.25, 0.25, 0.0, 0.25 }, // 17
                    { 0.0, 0.0, 0.0, 1.0, 0.0, 0.0 }, // 3
                    { 0.0, 0.0, 0.0, 0.5, 0.25, 0.25 }, // 19
                    { 0.0, 0.0, 0.0, 0.5, 0.0, 0.5 }, // 11
    },
};
const Integer PrismRefinementPattern4Hex_4Pr ::_face_mapping_2[4][5] = {
                             //  0  1  2  3  4
                                {0, 1, 2, 3, 4},
                                {0, 1, 2, 3, 4},
                                {0, 1, 2, 3, 4},
                                {0, 1, 2, 3, 4},
};
const Integer PrismRefinementPattern4Hex_4Pr ::_face_mapping_topo_2[4][5] = {
                             //  0  1  2  3  4
                                {1, 0, 1, 0, 0},
                                {0, 0, 1, 1, 0},
                                {1, 1, 0, 0, 0},
                                {0, 1, 0, 1, 0},
};

/*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*/

const double PrismRefinementPattern8Pr ::_refine_matrix_1[8][6][6] = { /* const */

		// refine_matrix pour l'enfant 0
		{
				//  0   1    2    3    4    5
				{ 1.0, 0.0, 0.0, 0.0, 0.0, 0.0 }, // 0
				{ 0.5, 0.5, 0.0, 0.0, 0.0, 0.0 }, // 7
				{ 0.5, 0.0, 0.5, 0.0, 0.0, 0.0 }, // 6
				{ 0.5, 0.0, 0.0, 0.5, 0.0, 0.0 }, // 12
				{ 0.25, 0.25, 0.0, 0.25, 0.25, 0.0 }, // 13
				{ 0.25, 0.0, 0.25, 0.25, 0.0, 0.25 },// 17
		},
		// refine_matrix pour l'enfant 1
		{
				//  0   1    2    3    4    5
				{ 0.5, 0.5, 0.0, 0.0, 0.0, 0.0 }, // 7
				{ 0.0, 1.0, 0.0, 0.0, 0.0, 0.0 }, // 1
				{ 0.0, 0.5, 0.5, 0.0, 0.0, 0.0 }, // 8
				{ 0.25, 0.25, 0.0, 0.25, 0.25, 0.0 }, // 13
				{ 0.0, 0.5, 0.0, 0.0, 0.5, 0.0 }, // 14
				{ 0.0, 0.25, 0.25, 0.0, 0.25, 0.25 }, // 15
		},
		// refine_matrix pour l'enfant 2
		{
				//  0   1    2    3    4    5
				{ 0.0,	0.0, 1.0, 0.0, 0.0, 0.0 }, // 2
				{ 0.5, 0.0, 0.5, 0.0, 0.0, 0.0 }, // 6
				{ 0.0, 0.5, 0.5, 0.0, 0.0, 0.0 }, // 8
				{ 0.0, 0.0, 0.5, 0.0, 0.0, 0.5 }, // 16
				{ 0.25, 0.0, 0.25, 0.25, 0.0, 0.25 },// 17
				{ 0.0, 0.25, 0.25, 0.0, 0.25, 0.25 }, // 15
		},
		// refine_matrix pour l'enfant 3
		{
				//  0   1     2    3     4    5
				{ 0.25, 0.0, 0.25, 0.25, 0.0, 0.25 },// 17
				{ 0.5, 0.0, 0.0, 0.5, 0.0, 0.0 }, // 12
				{ 0.25, 0.25, 0.0, 0.25, 0.25, 0.0 }, // 13
				{ 0.0, 0.0, 0.0, 0.5, 0.0, 0.5 }, // 9
				{ 0.0, 0.0, 0.0, 1.0, 0.0, 0.0 }, // 3
				{ 0.0, 0.0, 0.0, 0.5, 0.5, 0.0 }, // 10
		},
		// refine_matrix pour l'enfant 4
		{
				//  0   1     2     3    4     5
				{ 0.0, 0.25, 0.25, 0.0, 0.25, 0.25 }, // 15
				{ 0.25, 0.25, 0.0, 0.25, 0.25, 0.0 }, // 13
				{ 0.0, 0.5, 0.0, 0.0, 0.5, 0.0 }, // 14
				{ 0.0, 0.0, 0.0, 0.0, 0.5, 0.5 }, // 11
				{ 0.0, 0.0, 0.0, 0.5, 0.5, 0.0 }, // 10
				{ 0.0, 0.0, 0.0, 0.0, 1.0, 0.0 }, // 4
		},
		// refine_matrix pour l'enfant 5
		{
				//  0   1    2    3    4    5
				{ 0.0, 0.0, 0.5, 0.0, 0.0, 0.5 }, // 16
				{ 0.25, 0.0, 0.25, 0.25, 0.0, 0.25 },// 17
				{ 0.0, 0.25, 0.25, 0.0, 0.25, 0.25 }, // 15
				{ 0.0, 0.0, 0.0, 0.0, 0.0, 1.0 }, // 5
				{ 0.0, 0.0, 0.0, 0.5, 0.0, 0.5 }, // 9
				{ 0.0, 0.0, 0.0, 0.0, 0.5, 0.5 }, // 11
		},
		// refine_matrix pour l'enfant 6
		{
				//  0   1    2    3    4    5
				{ 0.5, 0.0, 0.5, 0.0, 0.0, 0.0 }, // 6
				{ 0.5, 0.5, 0.0, 0.0, 0.0, 0.0 }, // 7
				{ 0.0, 0.5, 0.5, 0.0, 0.0, 0.0 }, // 8
				{ 0.25, 0.0, 0.25, 0.25, 0.0, 0.25 },// 17
				{ 0.25, 0.25, 0.0, 0.25, 0.25, 0.0 }, // 13
				{ 0.0, 0.25, 0.25, 0.0, 0.25, 0.25 }, // 15
		},
		// refine_matrix pour l'enfant 7
		{
				//  0   1    2      3    4     5
				{ 0.25, 0.0, 0.25, 0.25, 0.0, 0.25 },// 17
				{ 0.25, 0.25, 0.0, 0.25, 0.25, 0.0 }, // 13
				{ 0.0, 0.25, 0.25, 0.0, 0.25, 0.25 }, // 15
				{ 0.0, 0.0, 0.0, 0.5, 0.0, 0.5 }, // 9
				{ 0.0, 0.0, 0.0, 0.5, 0.5, 0.0 }, // 10
				{ 0.0, 0.0, 0.0, 0.0, 0.5, 0.5 }, // 11
		}
};

/*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*/

const double PrismRefinementPattern27Pr ::_refine_matrix_1[27][6][6] = { /* const */

		// refine_matrix pour l'enfant 1
		{
				//  0   1    2    3    4    5
				{ 1.0, 0.0, 0.0, 0.0, 0.0, 0.0 }, // 0
				{ 0.666, 0.333, 0.0, 0.0, 0.0, 0.0 }, // 6
				{ 0.666, 0.0, 0.333, 0.0, 0.0, 0.0 }, // 10
				{ 0.666, 0.0, 0.0, 0.333, 0.0, 0.0 }, // 20
				{ 0.444, 0.222, 0.0, 0.222, 0.111, 0.0 }, // 26
				{ 0.444, 0.0, 0.222, 0.222, 0.0, 0.111 }, // 35
		},
		// refine_matrix pour l'enfant 2
		{
				//  0     1      2    3    4    5
				{ 0.666, 0.333, 0.0, 0.0, 0.0, 0.0 }, // 6
				{ 0.333, 0.666, 0.0, 0.0, 0.0, 0.0 }, //  7
				{ 0.333, 0.333, 0.333, 0.0, 0.0, 0.0 }, // 12
				{ 0.444, 0.222, 0.0, 0.222, 0.111, 0.0 }, // 26
				{ 0.222, 0.444, 0.0, 0.111, 0.222, 0.0 }, // 27
				{ 0.222, 0.222, 0.222, 0.111, 0.111, 0.111 }, // 38
		},
		// refine_matrix pour l'enfant 3
		{
			    //  0     1      2    3    4    5
				{ 0.333, 0.666, 0.0, 0.0, 0.0, 0.0 }, //  7
				{ 0.0, 1.0, 0.0, 0.0, 0.0, 0.0 }, // 0
				{ 0.0, 0.666, 0.333, 0.0, 0.0, 0.0 }, //  8
				{ 0.222, 0.444, 0.0, 0.111, 0.222, 0.0 }, // 27
				{ 0.0, 0.666, 0.0, 0.0, 0.333, 0.0 }, // 22
				{ 0.0, 0.444, 0.222, 0.0, 0.222, 0.111 }, // 30
		},
		// refine_matrix pour l'enfant 4
		{
			    //  0     1      2    3    4    5
				{ 0.666, 0.0, 0.333, 0.0, 0.0, 0.0 }, // 10
				{ 0.666, 0.333, 0.0, 0.0, 0.0, 0.0 }, // 6
				{ 0.333, 0.333, 0.333, 0.0, 0.0, 0.0 }, // 12
				{ 0.444, 0.0, 0.222, 0.222, 0.0, 0.111 }, // 35
				{ 0.444, 0.222, 0.0, 0.222, 0.111, 0.0 }, // 26
				{ 0.222, 0.222, 0.222, 0.111, 0.111, 0.111 }, // 38
		},
		// refine_matrix pour l'enfant 5
		{
			    //  0     1      2     3     4    5
                { 0.333, 0.333, 0.333, 0.0, 0.0, 0.0 }, // 12
				{ 0.333, 0.666, 0.0, 0.0, 0.0, 0.0 }, //  7
				{ 0.0, 0.666, 0.333, 0.0, 0.0, 0.0 }, //  8
				{ 0.222, 0.222, 0.222, 0.111, 0.111, 0.111 }, // 38
				{ 0.222, 0.444, 0.0, 0.111, 0.222, 0.0 }, // 27
				{ 0.0, 0.444, 0.222, 0.0, 0.222, 0.111 }, // 30
		},
		// refine_matrix pour l'enfant 6
		{
			    //  0     1      2    3    4    5
				{ 0.666, 0.0, 0.333, 0.0, 0.0, 0.0 }, // 10
				{ 0.333, 0.333, 0.333, 0.0, 0.0, 0.0 }, // 12
				{ 0.333, 0.0, 0.666, 0.0, 0.0, 0.0 }, // 11
				{ 0.444, 0.0, 0.222, 0.222, 0.0, 0.111 }, // 35
				{ 0.222, 0.222, 0.222, 0.111, 0.111, 0.111 }, // 38
				{ 0.222, 0.0, 0.444, 0.111, 0.0, 0.222 }, // 34
		},
		// refine_matrix pour l'enfant 7
		{
			    //  0     1      2      3    4    5
				{ 0.333, 0.333, 0.333, 0.0, 0.0, 0.0 }, // 12
				{ 0.0, 0.666, 0.333, 0.0, 0.0, 0.0 }, //  8
				{ 0.0, 0.333, 0.666, 0.0, 0.0, 0.0 }, // 9
				{ 0.222, 0.222, 0.222, 0.111, 0.111, 0.111 }, // 38
				{ 0.0, 0.444, 0.222, 0.0, 0.222, 0.111 }, // 30
				{ 0.0, 0.222, 0.444, 0.0, 0.111, 0.222 }, // 31

		},
        // refine_matrix pour l'enfant 8
		{
			    //  0     1      2    3    4    5
				{ 0.333, 0.0, 0.666, 0.0, 0.0, 0.0 }, // 11
				{ 0.333, 0.333, 0.333, 0.0, 0.0, 0.0 }, // 12
				{ 0.0, 0.333, 0.666, 0.0, 0.0, 0.0 }, // 9
				{ 0.222, 0.0, 0.444, 0.111, 0.0, 0.222 }, // 34
				{ 0.222, 0.222, 0.222, 0.111, 0.111, 0.111 }, // 38
				{ 0.0, 0.222, 0.444, 0.0, 0.111, 0.222 }, // 31
        },
		// refine_matrix pour l'enfant 9
		{
			    //  0   1    2    3    4    5
				{ 0.0, 0.0, 1.0, 0.0, 0.0, 0.0 }, // 2
				{ 0.333, 0.0, 0.666, 0.0, 0.0, 0.0 }, // 11
				{ 0.0, 0.333, 0.666, 0.0, 0.0, 0.0 }, // 9
				{ 0.0, 0.0, 0.666, 0.0, 0.0, 0.333 }, // 24
				{ 0.222, 0.0, 0.444, 0.111, 0.0, 0.222 }, // 34
				{ 0.0, 0.222, 0.444, 0.0, 0.111, 0.222 }, // 31
		},
		// refine_matrix pour l'enfant 10
		{
			    //  0     1      2    3    4    5
				{ 0.666, 0.0, 0.0, 0.333, 0.0, 0.0 }, // 20
				{ 0.444, 0.222, 0.0, 0.222, 0.111, 0.0 }, // 26
				{ 0.444, 0.0, 0.222, 0.222, 0.0, 0.111 }, // 35
				{ 0.333, 0.0, 0.0, 0.666, 0.0, 0.0 }, // 21
				{ 0.222, 0.111, 0.0, 0.444, 0.222, 0.0 }, // 28
				{ 0.222, 0.0, 0.111, 0.444, 0.0, 0.222 }, // 37
		},
		// refine_matrix pour l'enfant 11
		{
			    //  0     1      2    3      4     5
				{ 0.444, 0.222, 0.0, 0.222, 0.111, 0.0 }, // 26
				{ 0.222, 0.444, 0.0, 0.111, 0.222, 0.0 }, // 27
				{ 0.222, 0.222, 0.222, 0.111, 0.111, 0.111 }, // 38
				{ 0.222, 0.111, 0.0, 0.444, 0.222, 0.0 }, // 28
				{ 0.111, 0.222, 0.0, 0.222, 0.444, 0.0 }, // 29
				{ 0.111, 0.111, 0.111, 0.222, 0.222, 0.222 }, // 39
		},
		// refine_matrix pour l'enfant 12
		{
			    //  0     1      2    3      4     5
				{ 0.222, 0.444, 0.0, 0.111, 0.222, 0.0 }, // 27
				{ 0.0, 0.666, 0.0, 0.0, 0.333, 0.0 }, // 22
				{ 0.0, 0.444, 0.222, 0.0, 0.222, 0.111 }, // 30
				{ 0.111, 0.222, 0.0, 0.222, 0.444, 0.0 }, // 29
				{ 0.0, 0.333, 0.0, 0.0, 0.666, 0.0 }, // 23
				{ 0.0, 0.222, 0.111, 0.0, 0.444, 0.222 }, // 32
		},
		// refine_matrix pour l'enfant 13
		{
			    //  0     1      2     3    4     5
				{ 0.444, 0.0, 0.222, 0.222, 0.0, 0.111 }, // 35
				{ 0.444, 0.222, 0.0, 0.222, 0.111, 0.0 }, // 26
				{ 0.222, 0.222, 0.222, 0.111, 0.111, 0.111 }, // 38
				{ 0.222, 0.0, 0.111, 0.444, 0.0, 0.222 }, // 37
				{ 0.222, 0.111, 0.0, 0.444, 0.222, 0.0 }, // 28
				{ 0.111, 0.111, 0.111, 0.222, 0.222, 0.222 }, // 39
		},
		// refine_matrix pour l'enfant 14
		{
			    //  0     1       2      3      4     5
				{ 0.222, 0.222, 0.222, 0.111, 0.111, 0.111 }, // 38
				{ 0.222, 0.444, 0.0, 0.111, 0.222, 0.0 }, // 27
				{ 0.0, 0.444, 0.222, 0.0, 0.222, 0.111 }, // 30
				{ 0.111, 0.111, 0.111, 0.222, 0.222, 0.222 }, // 39
				{ 0.111, 0.222, 0.0, 0.222, 0.444, 0.0 }, // 29
				{ 0.0, 0.222, 0.111, 0.0, 0.444, 0.222 }, // 32
		},
		// refine_matrix pour l'enfant 15
		{
			    //  0     1      2     3     4     5
				{ 0.444, 0.0, 0.222, 0.222, 0.0, 0.111 }, // 35
				{ 0.222, 0.222, 0.222, 0.111, 0.111, 0.111 }, // 38
				{ 0.222, 0.0, 0.444, 0.111, 0.0, 0.222 }, // 34
				{ 0.222, 0.0, 0.111, 0.444, 0.0, 0.222 }, // 37
				{ 0.111, 0.111, 0.111, 0.222, 0.222, 0.222 }, // 39
				{ 0.111, 0.0, 0.222, 0.222, 0.0, 0.444 }, // 36
		},
		// refine_matrix pour l'enfant 16
		{
			    //  0     1      2      3      4      5
				{ 0.222, 0.222, 0.222, 0.111, 0.111, 0.111 }, // 38
				{ 0.0, 0.444, 0.222, 0.0, 0.222, 0.111 }, // 30
				{ 0.0, 0.222, 0.444, 0.0, 0.111, 0.222 }, // 31
				{ 0.111, 0.111, 0.111, 0.222, 0.222, 0.222 }, // 39
				{ 0.0, 0.222, 0.111, 0.0, 0.444, 0.222 }, // 32
				{ 0.0, 0.111, 0.222, 0.0, 0.222, 0.444 }, // 33
		},
		// refine_matrix pour l'enfant 17
		{
			    //  0     1      2      3    4     5
				{ 0.222, 0.0, 0.444, 0.111, 0.0, 0.222 }, // 34
				{ 0.222, 0.222, 0.222, 0.111, 0.111, 0.111 }, // 38
				{ 0.0, 0.222, 0.444, 0.0, 0.111, 0.222 }, // 31
				{ 0.111, 0.0, 0.222, 0.222, 0.0, 0.444 }, // 36
				{ 0.111, 0.111, 0.111, 0.222, 0.222, 0.222 }, // 39
				{ 0.0, 0.111, 0.222, 0.0, 0.222, 0.444 }, // 33
		},
		// refine_matrix pour l'enfant 18
		{
			    //  0     1      2      3    4     5
				{ 0.222, 0.0, 0.444, 0.111, 0.0, 0.222 }, // 34
				{ 0.0, 0.222, 0.444, 0.0, 0.111, 0.222 }, // 31
				{ 0.0, 0.0, 0.666, 0.0, 0.0, 0.333 }, // 24
				{ 0.111, 0.0, 0.222, 0.222, 0.0, 0.444 }, // 36
				{ 0.0, 0.111, 0.222, 0.0, 0.222, 0.444 }, // 33
				{ 0.0, 0.0, 0.333, 0.0, 0.0, 0.666 }, // 25
		},
		// refine_matrix pour l'enfant 19
		{
			    //  0     1      2    3    4    5
			    { 0.333, 0.0, 0.0, 0.666, 0.0, 0.0 }, // 21
				{ 0.222, 0.111, 0.0, 0.444, 0.222, 0.0 }, // 28
				{ 0.222, 0.0, 0.111, 0.444, 0.0, 0.222 }, // 37
				{ 0.0, 0.0, 0.0, 1.0, 0.0, 0.0 }, // 3
				{ 0.0, 0.0, 0.0, 0.666, 0.333, 0.0 }, //  13
				{ 0.0, 0.0, 0.0, 0.666, 0.0, 0.333 }, //
		},
		// refine_matrix pour l'enfant 20
		{
			    //  0     1      2      3     4     5
			    { 0.222, 0.111, 0.0, 0.444, 0.222, 0.0 }, // 28
				{ 0.111, 0.222, 0.0, 0.222, 0.444, 0.0 }, // 29
				{ 0.111, 0.111, 0.111, 0.222, 0.222, 0.222 }, // 39
				{ 0.0, 0.0, 0.0, 0.666, 0.333, 0.0 }, //  13
				{ 0.0, 0.0, 0.0, 0.333, 0.666, 0.0 }, // 14
				{ 0.0, 0.0, 0.0, 0.333, 0.333, 0.333 }, // 19
		},
		// refine_matrix pour l'enfant 21
		{
			    //  0     1      2    3      4     5
				{ 0.111, 0.222, 0.0, 0.222, 0.444, 0.0 }, // 29
				{ 0.0, 0.333, 0.0, 0.0, 0.666, 0.0 }, // 23
				{ 0.0, 0.222, 0.111, 0.0, 0.444, 0.222 }, // 32
				{ 0.0, 0.0, 0.0, 0.333, 0.666, 0.0 }, // 14
				{ 0.0, 0.0, 0.0, 0.0, 1.0, 0.0 }, // 4
				{ 0.0, 0.0, 0.0, 0.0, 0.666, 0.333 }, //  15
		},
		// refine_matrix pour l'enfant 22
		{
			    //  0     1      2    3      4     5
				{ 0.222, 0.0, 0.111, 0.444, 0.0, 0.222 }, // 37
				{ 0.222, 0.111, 0.0, 0.444, 0.222, 0.0 }, // 28
				{ 0.111, 0.111, 0.111, 0.222, 0.222, 0.222 }, // 39
				{ 0.0, 0.0, 0.0, 0.666, 0.0, 0.333 }, // 17
				{ 0.0, 0.0, 0.0, 0.666, 0.333, 0.0 }, //  13
				{ 0.0, 0.0, 0.0, 0.333, 0.333, 0.333 }, // 19
		},
		// refine_matrix pour l'enfant 23
		{
			    //  0     1      2      3      4      5
				{ 0.111, 0.111, 0.111, 0.222, 0.222, 0.222 }, // 39
				{ 0.111, 0.222, 0.0, 0.222, 0.444, 0.0 }, // 29
				{ 0.0, 0.222, 0.111, 0.0, 0.444, 0.222 }, // 32
				{ 0.0, 0.0, 0.0, 0.333, 0.333, 0.333 }, // 19
				{ 0.0, 0.0, 0.0, 0.333, 0.666, 0.0 }, // 14
				{ 0.0, 0.0, 0.0, 0.0, 0.666, 0.333 }, //  15
		},
		// refine_matrix pour l'enfant 24
		{
			    //  0     1      2      3    4      =5
				{ 0.222, 0.0, 0.111, 0.444, 0.0, 0.222 }, // 37
				{ 0.111, 0.111, 0.111, 0.222, 0.222, 0.222 }, // 39
				{ 0.111, 0.0, 0.222, 0.222, 0.0, 0.444 }, // 36
				{ 0.0, 0.0, 0.0, 0.666, 0.0, 0.333 }, // 17
				{ 0.0, 0.0, 0.0, 0.333, 0.333, 0.333 }, // 19
				{ 0.0, 0.0, 0.0, 0.333, 0.0, 0.666 }, // 18
		},
		// refine_matrix pour l'enfant 25
		{
			    //  0     1      2      3      4      5
				{ 0.111, 0.111, 0.111, 0.222, 0.222, 0.222 }, // 39
				{ 0.0, 0.222, 0.111, 0.0, 0.444, 0.222 }, // 32
				{ 0.0, 0.111, 0.222, 0.0, 0.222, 0.444 }, // 33
				{ 0.0, 0.0, 0.0, 0.333, 0.333, 0.333 }, // 19
				{ 0.0, 0.0, 0.0, 0.0, 0.666, 0.333 }, //  15
				{ 0.0, 0.0, 0.0, 0.0, 0.333, 0.666 }, // 16
		},
		// refine_matrix pour l'enfant 26
		{
			    //  0     1      2      3    4     5
				{ 0.111, 0.0, 0.222, 0.222, 0.0, 0.444 }, // 36
				{ 0.111, 0.111, 0.111, 0.222, 0.222, 0.222 }, // 39
				{ 0.0, 0.111, 0.222, 0.0, 0.222, 0.444 }, // 33
				{ 0.0, 0.0, 0.0, 0.333, 0.0, 0.666 }, // 18
				{ 0.0, 0.0, 0.0, 0.333, 0.333, 0.333 }, // 19
				{ 0.0, 0.0, 0.0, 0.0, 0.333, 0.666 }, // 16
		},
		// refine_matrix pour l'enfant 27
		{
			    //  0     1      2     3     4     5
				{ 0.111, 0.0, 0.222, 0.222, 0.0, 0.444 }, // 36
				{ 0.0, 0.111, 0.222, 0.0, 0.222, 0.444 }, // 33
				{ 0.0, 0.0, 0.333, 0.0, 0.0, 0.666 }, // 25
				{ 0.0, 0.0, 0.0, 0.333, 0.0, 0.666 }, // 18
				{ 0.0, 0.0, 0.0, 0.0, 0.333, 0.666 }, // 16
				{ 0.0, 0.0, 0.0, 0.0, 0.0, 1.0 }, // 5
		}
};

/*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*/

const double PyramidRefinementPattern4Hex_4Py ::_refine_matrix_1[4][8][5] = {
    {
                    //  0   1    2    3   4
                    { 1.0, 0.0, 0.0, 0.0, 0.0 }, // 0
                    { 0.5, 0.5, 0.0, 0.0, 0.0 }, // 5
                    { 0.25, 0.25, 0.25, 0.25, 0.0 }, // 17
                    { 0.5, 0.0, 0.0, 0.5, 0.0 }, // 8
                    { 0.5, 0.0, 0.0, 0.0, 0.5 }, // 9
                    { 0.25, 0.25, 0.0, 0.0, 0.5 }, // 13
                    { 0.125, 0.125, 0.125, 0.125, 0.5 }, // 18
                    { 0.25, 0.0, 0.0, 0.25, 0.5 }, // 16
    },
    {
                    //  0   1    2    3   4
                    { 0.5, 0.0, 0.0, 0.5, 0.0 }, // 8
                    { 0.25, 0.25, 0.25, 0.25, 0.0 }, // 17
                    { 0.0, 0.0, 0.5, 0.5, 0.0 }, // 7
                    { 0.0, 0.0, 0.0, 1.0, 0.0 }, // 3
                    { 0.25, 0.0, 0.0, 0.25, 0.5 }, // 16
                    { 0.125, 0.125, 0.125, 0.125, 0.5 }, // 18
                    { 0.0, 0.0, 0.25, 0.25, 0.5 }, // 15
                    { 0.0, 0.0, 0.0, 0.5, 0.5 }, // 12
    },
    {
                    //  0   1    2    3   4
                    { 0.5, 0.5, 0.0, 0.0, 0.0 }, // 5
                    { 0.0, 1.0, 0.0, 0.0, 0.0 }, // 1
                    { 0.0, 0.5, 0.5, 0.0, 0.0 }, // 6
                    { 0.25, 0.25, 0.25, 0.25, 0.0 }, // 17
                    { 0.25, 0.25, 0.0, 0.0, 0.5 }, // 13
                    { 0.0, 0.5, 0.0, 0.0, 0.5 }, // 10
                    { 0.0, 0.25, 0.25, 0.0, 0.5 }, // 14
                    { 0.125, 0.125, 0.125, 0.125, 0.5 }, // 18
    },
    {
                    //  0   1    2    3   4
                    { 0.25, 0.25, 0.25, 0.25, 0.0 }, // 17
                    { 0.0, 0.5, 0.5, 0.0, 0.0 }, // 6
                    { 0.0, 0.0, 1.0, 0.0, 0.0 }, // 2
                    { 0.0, 0.0, 0.5, 0.5, 0.0 }, // 7
                    { 0.125, 0.125, 0.125, 0.125, 0.5 }, // 18
                    { 0.0, 0.25, 0.25, 0.0, 0.5 }, // 14
                    { 0.0, 0.0, 0.5, 0.0, 0.5 }, // 11
                    { 0.0, 0.0, 0.25, 0.25, 0.5 }, // 15
    }
};
const Integer PyramidRefinementPattern4Hex_4Py ::_face_mapping_1[4][6] = {
                             //  0  1  2  3  4  5
                                {0, 1, 2, 0, 3, 4},
                                {0, 1, 2, 0, 3, 4},
                                {0, 1, 2, 0, 3, 4},
                                {0, 1, 2, 0, 3, 4},
};
const Integer PyramidRefinementPattern4Hex_4Py ::_face_mapping_topo_1[4][6] = {
                             //  0  1  2  3  4  5
                                {1, 1, 1, 0, 0, 0},
                                {1, 1, 0, 0, 0, 1},
                                {1, 0, 1, 0, 1, 0},
                                {1, 0, 0, 0, 1, 1},
};
//
const double PyramidRefinementPattern4Hex_4Py ::_refine_matrix_2[4][5][5] = {
    {
                    //  0   1    2    3   4
                    { 0.5, 0.0, 0.0, 0.0, 0.5 }, // 9
                    { 0.25, 0.25, 0.0, 0.0, 0.5 }, // 13
                    { 0.125, 0.125, 0.125, 0.125, 0.5 }, // 18
                    { 0.25, 0.0, 0.0, 0.25, 0.5 }, // 16
                    { 0.0, 0.0, 0.0, 0.0, 1.0 }, // 4
    },
    {
                    //  0   1    2    3   4
                    { 0.25, 0.0, 0.0, 0.25, 0.5 }, // 16
                    { 0.125, 0.125, 0.125, 0.125, 0.5 }, // 18
                    { 0.0, 0.0, 0.25, 0.25, 0.5 }, // 15
                    { 0.0, 0.0, 0.0, 0.5, 0.5 }, // 12
                    { 0.0, 0.0, 0.0, 0.0, 1.0 }, // 4
    },
    {
                    //  0   1    2    3   4
                    { 0.25, 0.25, 0.0, 0.0, 0.5 }, // 13
                    { 0.0, 0.5, 0.0, 0.0, 0.5 }, // 10
                    { 0.0, 0.25, 0.25, 0.0, 0.5 }, // 14
                    { 0.125, 0.125, 0.125, 0.125, 0.5 }, // 18
                    { 0.0, 0.0, 0.0, 0.0, 1.0 }, // 4
    },
    {
                    //  0   1    2    3   4
                    { 0.125, 0.125, 0.125, 0.125, 0.5 }, // 18
                    { 0.0, 0.25, 0.25, 0.0, 0.5 }, // 14
                    { 0.0, 0.0, 0.5, 0.0, 0.5 }, // 11
                    { 0.0, 0.0, 0.25, 0.25, 0.5 }, // 15
                    { 0.0, 0.0, 0.0, 0.0, 1.0 }, // 4
    },
};
const Integer PyramidRefinementPattern4Hex_4Py ::_face_mapping_2[4][5] = {
                             //  0  1  2  3  4
                                {0, 1, 2, 3, 4},
                                {0, 1, 2, 3, 4},
                                {0, 1, 2, 3, 4},
                                {0, 1, 2, 3, 4},
};
const Integer PyramidRefinementPattern4Hex_4Py ::_face_mapping_topo_2[4][5] = {
                             //  0  1  2  3  4
                                {0, 1, 1, 0, 0},
                                {0, 1, 0, 0, 1},
                                {0, 0, 1, 1, 0},
                                {0, 0, 0, 1, 1},
};

/*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*/

const double PyramidRefinementPattern4Py8T ::_refine_matrix_1[4][5][5] = { /* const */

		// refine_matrix pour l'enfant 0
		{
				//  0   1    2    3   4
				{ 1.0, 0.0, 0.0, 0.0, 0.0 }, // 0
				{ 0.5, 0.5, 0.0, 0.0, 0.0 }, // 5
				{ 0.25, 0.25, 0.25, 0.25, 0.0 }, // 9
				{ 0.5, 0.0, 0.0, 0.5, 0.0 }, // 8
				{ 0.5, 0.0, 0.0, 0.0, 0.5 }, // 10
		},
		// refine_matrix pour l'enfant 1
		{
				//  0   1    2    3   4
				{ 0.5, 0.5, 0.0, 0.0, 0.0 }, // 5
				{ 0.0, 1.0, 0.0, 0.0, 0.0 }, // 1
				{ 0.0, 0.5, 0.5, 0.0, 0.0 }, // 6
				{ 0.25, 0.25, 0.25, 0.25, 0.0 }, // 9
				{ 0.0, 0.5, 0.0, 0.0, 0.5 }, // 11
		},
		// refine_matrix pour l'enfant 2
		{
				//  0   1    2    3   4
				{ 0.25, 0.25, 0.25, 0.25, 0.0 }, // 9
				{ 0.0, 0.5, 0.5, 0.0, 0.0 }, // 6
				{ 0.0, 0.0, 1.0, 0.0, 0.0 }, // 2
				{ 0.0, 0.0, 0.5, 0.5, 0.0 }, // 7
				{ 0.0, 0.0, 0.5, 0.0, 0.5 }, // 12
		},
		// refine_matrix pour l'enfant 3
		{
				//  0   1    2    3   4
				{ 0.5, 0.0, 0.0, 0.5, 0.0 }, // 8
				{ 0.25, 0.25, 0.25, 0.25, 0.0 }, // 9
				{ 0.0, 0.0, 0.5, 0.5, 0.0 }, // 7
				{ 0.0, 0.0, 0.0, 1.0, 0.0 }, // 3
				{ 0.0, 0.0, 0.0, 0.5, 0.5 }, // 13
		}
};

const double PyramidRefinementPattern4Py8T ::_refine_matrix_2[8][4][5] = { /* const */

		// refine_matrix pour l'enfant 0
		{
				//  0   1    2    3   4
				{ 0.5, 0.0, 0.0, 0.0, 0.5 }, // 10
				{ 0.0, 0.5, 0.0, 0.0, 0.5 }, // 11
				{ 0.5, 0.5, 0.0, 0.0, 0.0 }, // 5
				{ 0.25, 0.25, 0.25, 0.25, 0.0 }, // 9
		},
		// refine_matrix pour l'enfant 1
		{
				//  0   1    2    3   4
				{ 0.0, 0.5, 0.0, 0.0, 0.5 }, // 11
				{ 0.0, 0.0, 0.5, 0.0, 0.5 }, // 12
				{ 0.0, 0.5, 0.5, 0.0, 0.0 }, // 6
				{ 0.25, 0.25, 0.25, 0.25, 0.0 }, // 9
		},
		// refine_matrix pour l'enfant 2
		{
				//  0   1    2    3   4
				{ 0.0, 0.0, 0.5, 0.0, 0.5 }, // 12
				{ 0.0, 0.0, 0.0, 0.5, 0.5 }, // 13
				{ 0.0, 0.0, 0.5, 0.5, 0.0 }, // 7
				{ 0.25, 0.25, 0.25, 0.25, 0.0 }, // 9
		},
		// refine_matrix pour l'enfant 3
		{
				//  0   1    2    3   4
				{ 0.0, 0.0, 0.0, 0.5, 0.5 }, // 13
				{ 0.5, 0.0, 0.0, 0.0, 0.5 }, // 10
				{ 0.5, 0.0, 0.0, 0.5, 0.0 }, // 8
				{ 0.25, 0.25, 0.25, 0.25, 0.0 }, // 9
		},
		// refine_matrix pour l'enfant 4
		{
				//  0   1    2    3   4
				{ 0.5, 0.0, 0.0, 0.0, 0.5 }, // 10
				{ 0.0, 0.0, 0.5, 0.0, 0.5 }, // 12
				{ 0.0, 0.5, 0.0, 0.0, 0.5 }, //  11
				{ 0.0, 0.0, 0.0, 0.0, 1.0 }, // 4
		},
		// refine_matrix pour l'enfant 5
		{
				//  0   1    2    3   4
				{ 0.5, 0.0, 0.0, 0.0, 0.5 }, // 10
				{ 0.0, 0.0, 0.0, 0.5, 0.5 }, // 13
				{ 0.0, 0.0, 0.5, 0.0, 0.5 }, //	12
				{ 0.0, 0.0, 0.0, 0.0, 1.0 }, // 4
		},
		// refine_matrix pour l'enfant 6
		{
				//  0   1    2    3   4
				{ 0.5, 0.0, 0.0, 0.0, 0.5 }, // 10
				{ 0.0, 0.5, 0.0, 0.0, 0.5 }, // 11
				{ 0.0, 0.0, 0.5, 0.0, 0.5 }, //	12
				{ 0.25, 0.25, 0.25, 0.25, 0.0 }, // 9
		},
		// refine_matrix pour l'enfant 7
		{
				//  0   1    2    3   4
				{ 0.5, 0.0, 0.0, 0.0, 0.5 }, // 10
				{ 0.0, 0.0, 0.5, 0.0, 0.5 }, // 12
				{ 0.0, 0.0, 0.0, 0.5, 0.5 }, //	13
				{ 0.25, 0.25, 0.25, 0.25, 0.0 }, // 9
		}
};

/*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*/

const double PyramidRefinementPattern6Py4T ::_refine_matrix_1[6][5][5] = { /* const */

		// refine_matrix pour l'enfant 0
		{
				//  0   1    2    3   4
				{ 1.0, 0.0, 0.0, 0.0, 0.0 }, // 0
				{ 0.5, 0.5, 0.0, 0.0, 0.0 }, // 5
				{ 0.25, 0.25, 0.25, 0.25, 0.0 }, // 9
				{ 0.5, 0.0, 0.0, 0.5, 0.0 }, // 8
				{ 0.5, 0.0, 0.0, 0.0, 0.5 }, // 10
		},
		// refine_matrix pour l'enfant 1
		{
				//  0   1    2    3   4
				{ 0.5, 0.5, 0.0, 0.0, 0.0 }, // 5
				{ 0.0, 1.0, 0.0, 0.0, 0.0 }, // 1
				{ 0.0, 0.5, 0.5, 0.0, 0.0 }, // 6
				{ 0.25, 0.25, 0.25, 0.25, 0.0 }, // 9
				{ 0.0, 0.5, 0.0, 0.0, 0.5 }, // 11
		},
		// refine_matrix pour l'enfant 2
		{
				//  0   1    2    3   4
				{ 0.25, 0.25, 0.25, 0.25, 0.0 }, // 9
				{ 0.0, 0.5, 0.5, 0.0, 0.0 }, // 6
				{ 0.0, 0.0, 1.0, 0.0, 0.0 }, // 2
				{ 0.0, 0.0, 0.5, 0.5, 0.0 }, // 7
				{ 0.0, 0.0, 0.5, 0.0, 0.5 }, // 12
		},
		// refine_matrix pour l'enfant 3
		{
				//  0   1    2    3   4
				{ 0.5, 0.0, 0.0, 0.5, 0.0 }, // 8
				{ 0.25, 0.25, 0.25, 0.25, 0.0 }, // 9
				{ 0.0, 0.0, 0.5, 0.5, 0.0 }, // 7
				{ 0.0, 0.0, 0.0, 1.0, 0.0 }, // 3
				{ 0.0, 0.0, 0.0, 0.5, 0.5 }, // 13
		},
		// refine_matrix pour l'enfant 4
		{
				//  0   1    2    3   4
				{ 0.5, 0.0, 0.0, 0.0, 0.5 }, // 10
				{ 0.0, 0.5, 0.0, 0.0, 0.5 }, // 11
				{ 0.0, 0.0, 0.5, 0.0, 0.5 }, //	12
				{ 0.0, 0.0, 0.0, 0.5, 0.5 }, // 13
				{ 0.0, 0.0, 0.0, 0.0, 1.0 }, // 4
		},
		// refine_matrix pour l'enfant 5
		{
				//  0   1    2    3   4
				{ 0.5, 0.0, 0.0, 0.0, 0.5 }, // 10
				{ 0.0, 0.0, 0.0, 0.5, 0.5 }, //	13
				{ 0.0, 0.0, 0.5, 0.0, 0.5 }, // 12
				{ 0.0, 0.5, 0.0, 0.0, 0.5 }, // 11
				{ 0.25, 0.25, 0.25, 0.25, 0.0 }, // 9
		}
};

const double PyramidRefinementPattern6Py4T ::_refine_matrix_2[4][4][5] = { /* const */

		// refine_matrix pour l'enfant 0
		{
				//  0   1    2    3   4
				{ 0.5, 0.0, 0.0, 0.0, 0.5 }, // 10
				{ 0.0, 0.5, 0.0, 0.0, 0.5 }, // 11
				{ 0.5, 0.5, 0.0, 0.0, 0.0 }, // 5
				{ 0.25, 0.25, 0.25, 0.25, 0.0 }, // 9
		},
		// refine_matrix pour l'enfant 1
		{
				//  0   1    2    3   4
				{ 0.0, 0.5, 0.0, 0.0, 0.5 }, // 11
				{ 0.0, 0.0, 0.5, 0.0, 0.5 }, // 12
				{ 0.0, 0.5, 0.5, 0.0, 0.0 }, // 6
				{ 0.25, 0.25, 0.25, 0.25, 0.0 }, // 9
		},
		// refine_matrix pour l'enfant 2
		{
				//  0   1    2    3   4
				{ 0.0, 0.0, 0.5, 0.0, 0.5 }, // 12
				{ 0.0, 0.0, 0.0, 0.5, 0.5 }, // 13
				{ 0.0, 0.0, 0.5, 0.5, 0.0 }, // 7
				{ 0.25, 0.25, 0.25, 0.25, 0.0 }, // 9
		},
		// refine_matrix pour l'enfant 3
		{
				//  0   1    2    3   4
				{ 0.0, 0.0, 0.0, 0.5, 0.5 }, // 13
				{ 0.5, 0.0, 0.0, 0.0, 0.5 }, // 10
				{ 0.5, 0.0, 0.0, 0.5, 0.0 }, // 8
				{ 0.25, 0.25, 0.25, 0.25, 0.0 }, // 9
		}
};

/*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*/

const double PyramidRefinementPattern4Py ::_refine_matrix_1[4][5][5] = { /* const */

		// refine_matrix pour l'enfant 0
		{
				//  0   1    2    3   4
				{ 1.0, 0.0, 0.0, 0.0, 0.0 }, // 0
				{ 0.5, 0.5, 0.0, 0.0, 0.0 }, // 5
				{ 0.25, 0.25, 0.25, 0.25, 0.0 }, // 9
				{ 0.5, 0.0, 0.0, 0.5, 0.0 }, // 8
				{ 0.0, 0.0, 0.0, 0.0, 1.0 }, // 4
		},
		// refine_matrix pour l'enfant 1
		{
				//  0   1    2    3   4
				{ 0.5, 0.5, 0.0, 0.0, 0.0 }, // 5
				{ 0.0, 1.0, 0.0, 0.0, 0.0 }, // 1
				{ 0.0, 0.5, 0.5, 0.0, 0.0 }, // 6
				{ 0.25, 0.25, 0.25, 0.25, 0.0 }, // 9
				{ 0.0, 0.0, 0.0, 0.0, 1.0 }, // 4
		},
		// refine_matrix pour l'enfant 2
		{
				//  0   1    2    3   4
				{ 0.25, 0.25, 0.25, 0.25, 0.0 }, // 9
				{ 0.0, 0.5, 0.5, 0.0, 0.0 }, // 6
				{ 0.0, 0.0, 1.0, 0.0, 0.0 }, // 2
				{ 0.0, 0.0, 0.5, 0.5, 0.0 }, // 7
				{ 0.0, 0.0, 0.0, 0.0, 1.0 }, // 4
		},
		// refine_matrix pour l'enfant 3
		{
				//  0   1    2    3   4
				{ 0.5, 0.0, 0.0, 0.5, 0.0 }, // 8
				{ 0.25, 0.25, 0.25, 0.25, 0.0 }, // 9
				{ 0.0, 0.0, 0.5, 0.5, 0.0 }, // 7
				{ 0.0, 0.0, 0.0, 1.0, 0.0 }, // 3
				{ 0.0, 0.0, 0.0, 0.0, 1.0 }, // 4
		}
};

/*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*/

const double PyramidRefinementPattern19Py12T ::_refine_matrix_1[19][5][5] = { /* const */

		// Pyramidion
		{
				//  0     1     2     3    4
				{ 0.333, 0.0, 0.0, 0.0, 0.666 }, // 5
				{ 0.0, 0.333, 0.0, 0.0, 0.666 }, // 6
				{ 0.0, 0.0, 0.333, 0.0, 0.666 }, // 7
				{ 0.0, 0.0, 0.0, 0.333, 0.666 }, // 8
				{ 0.0, 0.0, 0.0, 0.0, 1.0 }, //  4
		},
		// Pyramide inversée, niveau moyen
		{
				//  0     1     2     3    4
				{ 0.333, 0.0, 0.0, 0.0, 0.666 }, // 5
				{ 0.0, 0.0, 0.0, 0.333, 0.666 }, // 8
				{ 0.0, 0.0, 0.333, 0.0, 0.666 }, // 7
				{ 0.0, 0.333, 0.0, 0.0, 0.666 }, // 6
				{ 0.1665,0.1665,0.1665,0.1665,0.333 }, // 17
		},
		// 4 pyramides dirigées vers le haut, niveau intermédiaire
		{
				//  0     1     2     3    4
				{ 0.666, 0.0, 0.0, 0.0, 0.333 }, // 9
				{ 0.333, 0.333, 0.0, 0.0, 0.333 }, // 13
				{ 0.1665,0.1665,0.1665,0.1665,0.333 }, // 17
				{ 0.333, 0.0, 0.0, 0.333, 0.333 }, // 16
				{ 0.333, 0.0, 0.0, 0.0, 0.666 }, //

		},
		{
				//  0     1     2     3    4
				{ 0.333, 0.333, 0.0, 0.0, 0.333 }, // 13
				{ 0.0, 0.666, 0.0, 0.0, 0.333 }, // 10
				{ 0.0, 0.333, 0.333, 0.0, 0.333 }, // 14
				{ 0.1665,0.1665,0.1665,0.1665,0.333 }, // 17
				{ 0.0, 0.333, 0.0, 0.0, 0.666 }, // 6
		},
		{
				//  0     1     2     3    4
				{ 0.333, 0.0, 0.0, 0.333, 0.333 }, // 16
				{ 0.1665,0.1665,0.1665,0.1665,0.333 }, // 17
				{ 0.0, 0.0, 0.333, 0.333, 0.333 }, // 15
				{ 0.0, 0.0, 0.0, 0.666, 0.333 }, // 12
				{ 0.0, 0.0, 0.0, 0.333, 0.666 }, // 8
		},
		{
				//  0     1     2     3    4
				{ 0.1665,0.1665,0.1665,0.1665,0.333 }, // 17
				{ 0.0, 0.333, 0.333, 0.0, 0.333 }, // 14
				{ 0.0, 0.0, 0.666, 0.0, 0.333 }, // 11
				{ 0.0, 0.0, 0.333, 0.333, 0.333 }, // 15
				{ 0.0, 0.0, 0.333, 0.0, 0.666 }, // 7

		},
		// 4 pyramides inversées, premier niveau
		{
			    //  0     1     2     3    4
				{ 0.666, 0.0, 0.0, 0.0, 0.333 }, // 9
				{ 0.333, 0.0, 0.0, 0.333, 0.333 }, // 16
				{ 0.1665,0.1665,0.1665,0.1665,0.333 }, // 17
				{ 0.333, 0.333, 0.0, 0.0, 0.333 }, // 13
				{ 0.444, 0.222, 0.111, 0.222, 0.0 }, // 26
		},
		{
			    //  0     1     2     3    4
				{ 0.333, 0.333, 0.0, 0.0, 0.333 }, // 13
				{ 0.1665,0.1665,0.1665,0.1665,0.333 }, // 17
				{ 0.0, 0.333, 0.333, 0.0, 0.333 }, // 14
				{ 0.0, 0.666, 0.0, 0.0, 0.333 }, // 10
				{ 0.222, 0.444, 0.222, 0.111, 0.0 }, // 27
		},
		{
			    //  0     1     2     3    4
				{ 0.1665,0.1665,0.1665,0.1665,0.333 }, // 17
				{ 0.0, 0.0, 0.333, 0.333, 0.333 }, // 15
				{ 0.0, 0.0, 0.666, 0.0, 0.333 }, // 11
				{ 0.0, 0.333, 0.333, 0.0, 0.333 }, // 14
				{ 0.111, 0.222, 0.444, 0.222, 0.0 }, // 28
		},
		{
			    //  0     1     2     3    4
				{ 0.333, 0.0, 0.0, 0.333, 0.333 }, // 16
				{ 0.0, 0.0, 0.0, 0.666, 0.333 }, // 12
				{ 0.0, 0.0, 0.333, 0.333, 0.333 }, // 15
				{ 0.1665,0.1665,0.1665,0.1665,0.333 }, // 17
				{ 0.222, 0.111, 0.222, 0.444, 0.0 }, //  29
		},
                // Pyramides dirigées vers le haut, premier niveau
		{
			//  0     1     2     3    4
			{ 1.0, 0.0, 0.0, 0.0, 0.0 }, // 0
			{ 0.666, 0.333, 0.0, 0.0, 0.0 }, //  18
			{ 0.444, 0.222, 0.111, 0.222, 0.0 }, // 26
			{ 0.666, 0.0, 0.0, 0.333, 0.0 }, //  24
			{ 0.666, 0.0, 0.0, 0.0, 0.333 }, // 9
		},
		{
			//  0     1     2     3    4
			{ 0.666, 0.333, 0.0, 0.0, 0.0 }, //  18
			{ 0.333, 0.666, 0.0, 0.0, 0.0 }, //
			{ 0.222, 0.444, 0.222, 0.111, 0.0 }, // 27
			{ 0.444, 0.222, 0.111, 0.222, 0.0 }, // 26
			{ 0.333, 0.333, 0.0, 0.0, 0.333 }, // 13
		},
		{
			//  0     1     2     3    4
			{ 0.333, 0.666, 0.0, 0.0, 0.0 }, //  19
			{ 0.0, 1.0, 0.0, 0.0, 0.0 }, // 1
			{ 0.0, 0.666, 0.333, 0.0, 0.0 }, //   20
			{ 0.222, 0.444, 0.222, 0.111, 0.0 }, // 27
			{ 0.0, 0.666, 0.0, 0.0, 0.333 }, // 10
		},
		{
			//  0     1     2     3    4
			{ 0.666, 0.0, 0.0, 0.333, 0.0 }, //  24
			{ 0.444, 0.222, 0.111, 0.222, 0.0 }, // 26
			{ 0.222, 0.111, 0.222, 0.444, 0.0 }, //  29
			{ 0.333, 0.0, 0.0, 0.666, 0.0 }, // 25
			{ 0.333, 0.0, 0.0, 0.333, 0.333 }, // 16
		},
		{
			//  0     1     2     3    4
			{ 0.444, 0.222, 0.111, 0.222, 0.0 }, // 26
			{ 0.222, 0.444, 0.222, 0.111, 0.0 }, // 27
			{ 0.111, 0.222, 0.444, 0.222, 0.0 }, // 28
			{ 0.222, 0.111, 0.222, 0.444, 0.0 }, //  29
			{ 0.1665,0.1665,0.1665,0.1665,0.333 }, // 17
		},
		{
			//  0     1     2     3    4
			{ 0.222, 0.444, 0.222, 0.111, 0.0 }, // 27
			{ 0.0, 0.666, 0.333, 0.0, 0.0 }, //   20
			{ 0.0, 0.333, 0.666, 0.0, 0.0 }, // 21
			{ 0.111, 0.222, 0.444, 0.222, 0.0 }, // 28
			{ 0.0, 0.333, 0.333, 0.0, 0.333 }, // 14
		},
		{
			//  0     1     2     3    4
			{ 0.333, 0.0, 0.0, 0.666, 0.0 }, // 25
			{ 0.222, 0.111, 0.222, 0.444, 0.0 }, //  29
			{ 0.0, 0.0, 0.333, 0.666, 0.0 }, // 23
			{ 0.0, 0.0, 0.0, 1.0, 0.0 }, // 3
			{ 0.0, 0.0, 0.0, 0.666, 0.333 }, // 12
		},
		{
			//  0     1     2     3    4
			{ 0.222, 0.111, 0.222, 0.444, 0.0 }, //  29
			{ 0.111, 0.222, 0.444, 0.222, 0.0 }, // 28
			{ 0.0, 0.0, 0.666, 0.333, 0.0 }, // 22
			{ 0.0, 0.0, 0.333, 0.666, 0.0 }, // 23
			{ 0.0, 0.0, 0.333, 0.333, 0.333 }, // 15
		},
		{
			//  0     1     2     3    4
			{ 0.111, 0.222, 0.444, 0.222, 0.0 }, // 28
			{ 0.0, 0.333, 0.666, 0.0, 0.0 }, // 21
			{ 0.0, 0.0, 1.0, 0.0, 0.0 }, // 2
			{ 0.0, 0.0, 0.666, 0.333, 0.0 }, // 22
			{ 0.0, 0.0, 0.666, 0.0, 0.333 }, // 11
		}
};

const double PyramidRefinementPattern19Py12T ::_refine_matrix_2[12][4][5] = { /* const */

		// Tetraèdres, niveau intermédiaire
		{
			    //  0     1     2     3    4
				{ 0.333, 0.0, 0.0, 0.0, 0.666 }, // 5
				{ 0.333, 0.333, 0.0, 0.0, 0.333 }, // 13
				{ 0.0, 0.333, 0.0, 0.0, 0.666 }, // 6
				{ 0.1665,0.1665,0.1665,0.1665,0.333 }, // 17
		},
		{
			    //  0     1     2     3    4
				{ 0.0, 0.333, 0.0, 0.0, 0.666 }, // 6
				{ 0.0, 0.333, 0.333, 0.0, 0.333 }, // 14
				{ 0.0, 0.0, 0.333, 0.0, 0.666 }, // 7
				{ 0.1665,0.1665,0.1665,0.1665,0.333 }, // 17
		},
		{
			    //  0     1     2     3    4
				{ 0.0, 0.0, 0.333, 0.0, 0.666 }, // 7
				{ 0.0, 0.0, 0.333, 0.333, 0.333 }, // 15
				{ 0.0, 0.0, 0.0, 0.333, 0.666 }, // 8
				{ 0.1665,0.1665,0.1665,0.1665,0.333 }, // 17
		},
		{
			    //  0     1     2     3    4
				{ 0.0, 0.0, 0.0, 0.333, 0.666 }, // 8
				{ 0.333, 0.0, 0.0, 0.333, 0.333 }, // 16
				{ 0.333, 0.0, 0.0, 0.0, 0.666 }, // 5
				{ 0.1665,0.1665,0.1665,0.1665,0.333 }, // 17
		},
		// Tetraèdres, premier niveau
		{
			    //  0     1     2     3    4
				{ 0.666, 0.0, 0.0, 0.0, 0.333 }, // 9
				{ 0.666, 0.333, 0.0, 0.0, 0.0 }, //  18
				{ 0.333, 0.333, 0.0, 0.0, 0.333 }, // 13
				{ 0.444, 0.222, 0.111, 0.222, 0.0 }, // 26
		},
		{
			    //  0     1     2     3    4
				{ 0.333, 0.333, 0.0, 0.0, 0.333 }, // 13
				{ 0.333, 0.666, 0.0, 0.0, 0.0 }, //  19
				{ 0.0, 0.666, 0.0, 0.0, 0.333 }, // 10
				{ 0.222, 0.444, 0.222, 0.111, 0.0 }, // 27
		},
		{
			    //  0     1     2     3    4
				{ 0.0, 0.666, 0.0, 0.0, 0.333 }, // 10
				{ 0.0, 0.666, 0.333, 0.0, 0.0 }, //   20
				{ 0.0, 0.333, 0.333, 0.0, 0.333 }, // 14
				{ 0.222, 0.444, 0.222, 0.111, 0.0 }, //
		},
		{
			    //  0     1     2     3    4
				{ 0.0, 0.333, 0.333, 0.0, 0.333 }, // 14
				{ 0.0, 0.333, 0.666, 0.0, 0.0 }, // 21
				{ 0.0, 0.0, 0.666, 0.0, 0.333 }, // 11
				{ 0.111, 0.222, 0.444, 0.222, 0.0 }, // 28
		},
		{
			    //  0     1     2     3    4
				{ 0.0, 0.0, 0.666, 0.0, 0.333 }, // 11
				{ 0.0, 0.0, 0.666, 0.333, 0.0 }, // 22
				{ 0.0, 0.0, 0.333, 0.333, 0.333 }, // 15
				{ 0.111, 0.222, 0.444, 0.222, 0.0 }, //
		},
		{
			    //  0     1     2     3    4
				{ 0.0, 0.0, 0.333, 0.333, 0.333 }, // 15
				{ 0.0, 0.0, 0.333, 0.666, 0.0 }, // 23
				{ 0.0, 0.0, 0.0, 0.666, 0.333 }, // 12
				{ 0.222, 0.111, 0.222, 0.444, 0.0 }, //  29
		},
		{
			    //  0     1     2     3    4
				{ 0.0, 0.0, 0.0, 0.666, 0.333 }, // 12
				{ 0.333, 0.0, 0.0, 0.666, 0.0 }, // 25
				{ 0.333, 0.0, 0.0, 0.333, 0.333 }, // 16
				{ 0.222, 0.111, 0.111, 0.444, 0.0 }, //
		},
		{
			    //  0     1     2     3    4
				{ 0.333, 0.0, 0.0, 0.333, 0.333 }, // 16
				{ 0.666, 0.0, 0.0, 0.333, 0.0 }, //  24
				{ 0.666, 0.0, 0.0, 0.0, 0.333 }, // 9
				{ 0.444, 0.222, 0.111, 0.222, 0.0 }, // 26
		}
};


/*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*/

const double HemiHex5RefinementPattern2Hex_4Penta_2HHex5 ::_refine_matrix_1[2][8][5] = {
    {
                // 0   1    2    3    4
                { 0.0, 1.0, 0.0, 0.0, 0.0 },        // 1
                { 0.0, 0.5, 0.0, 0.5, 0.0 },        // 5
                { 0.25, 0.25, 0.0, 0.25, 0.25 },    // 13
                { 0.5, 0.5, 0.0, 0.0, 0.0 },        // 11
                { 0.0, 0.5, 0.5, 0.0, 0.0 },        // 6
                { 0.0, 0.25, 0.25, 0.5, 0.0 },      // 17
                { 0.25, 0.125, 0.125, 0.25, 0.25 }, // 18
                { 0.5, 0.25, 0.25, 0.0, 0.0 },      // 15
    },
    {
                //  0     1     2     3    4
                { 0.0, 0.5, 0.5, 0.0, 0.0 },        // 6
                { 0.0, 0.25, 0.25, 0.5, 0.0 },      // 17
                { 0.25, 0.125, 0.125, 0.25, 0.25 }, // 18
                { 0.5, 0.25, 0.25, 0.0, 0.0 },      // 15
                { 0.0, 0.0, 1.0, 0.0, 0.0 },        // 2
                { 0.0, 0.0, 0.5, 0.5, 0.0 },        // 10
                { 0.25, 0.0, 0.25, 0.25, 0.25 },    // 14
                { 0.5, 0.0, 0.5, 0.0, 0.0 },        // 12
    },
};
const Integer HemiHex5RefinementPattern2Hex_4Penta_2HHex5 ::_face_mapping_1[2][6] = {
                 //  0  1  2  3  4  5
                    {2, 0, 3, 1, 0, 3},
                    {2, 0, 3, 1, 0, 3},
};
const Integer HemiHex5RefinementPattern2Hex_4Penta_2HHex5 ::_face_mapping_topo_1[2][6] = {
                 //  0  1  2  3  4  5
                    {1, 1, 1, 0, 0, 0},
                    {0, 1, 1, 1, 0, 0},
};
//
const double HemiHex5RefinementPattern2Hex_4Penta_2HHex5 ::_refine_matrix_2[4][6][5] = {
    {
                // 0   1    2    3    4
                { 0.0, 0.0, 0.0, 0.5, 0.5 },        // 9
                { 0.25, 0.125, 0.125, 0.25, 0.25 }, // 18
                { 0.25, 0.25, 0.0, 0.25, 0.25 },    // 13
                { 0.0, 0.0, 0.0, 1.0, 0.0 },        // 3
                { 0.0, 0.25, 0.25, 0.5, 0.0 },      // 17
                { 0.0, 0.5, 0.0, 0.5, 0.0 },        // 5
    },
    {
                // 0   1    2    3    4
                { 0.0, 0.0, 0.0, 0.5, 0.5 },        // 9
                { 0.25, 0.0, 0.25, 0.25, 0.25 },    // 14
                { 0.25, 0.125, 0.125, 0.25, 0.25 }, // 18
                { 0.0, 0.0, 0.0, 1.0, 0.0 },        // 3
                { 0.0, 0.0, 0.5, 0.5, 0.0 },        // 10
                { 0.0, 0.25, 0.25, 0.5, 0.0 },      // 17
    },
    {
                // 0   1    2    3    4
                { 1.0, 0.0, 0.0, 0.0, 0.0 },        // 0
                { 0.5, 0.25, 0.25, 0.0, 0.0 },      // 15
                { 0.5, 0.5, 0.0, 0.0, 0.0 },        // 11
                { 0.5, 0.0, 0.0, 0.0, 0.5 },        // 8
                { 0.25, 0.125, 0.125, 0.25, 0.25 }, // 18
                { 0.25, 0.25, 0.0, 0.25, 0.25 },    // 13
    },
    {
                // 0   1    2    3    4
                { 1.0, 0.0, 0.0, 0.0, 0.0 },        // 0
                { 0.5, 0.0, 0.5, 0.0, 0.0 },        // 12
                { 0.5, 0.25, 0.25, 0.0, 0.0 },      // 15
                { 0.5, 0.0, 0.0, 0.0, 0.5 },        // 8
                { 0.25, 0.0, 0.25, 0.25, 0.25 },    // 14
                { 0.25, 0.125, 0.125, 0.25, 0.25 }, // 18
    },
};
const Integer HemiHex5RefinementPattern2Hex_4Penta_2HHex5 ::_face_mapping_2[4][5] = {
                 //  0  1  2  3  4
                    {3, 2, 1, 3, 0},
                    {3, 2, 1, 3, 0},
                    {0, 2, 1, 0, 3},
                    {0, 2, 1, 0, 3},
};
const Integer HemiHex5RefinementPattern2Hex_4Penta_2HHex5 ::_face_mapping_topo_2[4][5] = {
                 //  0  1  2  3  4
                    {0, 1, 0, 1, 0},
                    {0, 0, 1, 1, 0},
                    {1, 1, 0, 0, 0},
                    {1, 0, 1, 0, 0},
};
//
const double HemiHex5RefinementPattern2Hex_4Penta_2HHex5 ::_refine_matrix_3[2][5][5] = {
    {
                // 0   1    2    3    4
                { 0.5, 0.0, 0.0, 0.0, 0.5 },        // 8
                { 0.25, 0.25, 0.0, 0.25, 0.25 },    // 13
                { 0.25, 0.125, 0.125, 0.25, 0.25 }, // 18
                { 0.0, 0.0, 0.0, 0.5, 0.5 },        // 9
                { 0.0, 0.0, 0.0, 0.0, 1.0 },        // 4
    },
    {
                // 0   1    2    3    4
                { 0.5, 0.0, 0.0, 0.0, 0.5 },        // 8
                { 0.25, 0.125, 0.125, 0.25, 0.25 }, // 18
                { 0.25, 0.0, 0.25, 0.25, 0.25 },    // 14
                { 0.0, 0.0, 0.0, 0.5, 0.5 },        // 9
                { 0.0, 0.0, 0.0, 0.0, 1.0 },        // 4
    }
};
const Integer HemiHex5RefinementPattern2Hex_4Penta_2HHex5 ::_face_mapping_3[2][4] = {
                 //  0  1  2  3
                    {0, 1, 2, 3},
                    {0, 1, 2, 3},
};
const Integer HemiHex5RefinementPattern2Hex_4Penta_2HHex5 ::_face_mapping_topo_3[2][4] = {
                 //  0  1  2  3
                    {0, 0, 1, 0},
                    {0, 1, 0, 0},
};

/*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*/
const double HemiHex5RefinementPattern3HHex5_2Pr_1HHex7 ::_refine_matrix_1[3][5][5] = {
		{
				//  0     1     2     3     4
				{0.5, 0.0, 0.0, 0.0, 0.5 }, // 9
				{0.25, 0.25, 0.0, 0.25, 0.25 }, // 12
				{0.25, 0.0, 0.25, 0.25, 0.25 }, // 13
				{0.0, 0.0, 0.0, 0.5, 0.5 }, // 8
				{0.0, 0.0, 0.0, 0.0, 1.0 }, // 4
		},
		{
				//  0     1     2     3     4
				{0.5, 0.0, 0.5, 0.0, 0.0 }, // 10
				{0.0, 0.5, 0.5, 0.0, 0.0 }, // 6
				{0.0, 0.0, 1.0, 0.0, 0.0 }, // 2
				{0.0, 0.0, 0.5, 0.5, 0.0 }, // 7
				{0.25, 0.0, 0.25, 0.25, 0.25 }, // 13
		},
		{
				//  0     1     2     3     4
				{0.5, 0.5, 0.0, 0.0, 0.0 }, // 5
				{0.0, 1.0, 0.0, 0.0, 0.0 }, // 1
				{0.0, 0.5, 0.5, 0.0, 0.0 }, // 6
				{0.0, 0.5, 0.0, 0.5, 0.0 }, // 11
				{0.25, 0.25, 0.0, 0.25, 0.25 }, // 12
		}
};

//
const double HemiHex5RefinementPattern3HHex5_2Pr_1HHex7 ::_refine_matrix_2[2][6][5] = { /* const */
		{
				//  0     1     2     3     4
				{1.0, 0.0, 0.0, 0.0, 0.0 }, // 0
                                {0.5, 0.0, 0.5, 0.0, 0.0 }, // 10
				{0.5, 0.5, 0.0, 0.0, 0.0 }, // 5
				{0.5, 0.0, 0.0, 0.0, 0.5 }, // 9
				{0.25, 0.0, 0.25, 0.25, 0.25 }, // 13
                                {0.25, 0.25, 0.0, 0.25, 0.25 }, // 12
		},
		{
				//  0     1     2     3     4
				{0.0, 0.0, 0.0, 0.5, 0.5 }, // 8
				{0.25, 0.0, 0.25, 0.25, 0.25 }, // 13
                                {0.25, 0.25, 0.0, 0.25, 0.25 }, // 12
				{0.0, 0.0, 0.0, 1.0, 0.0 }, // 3
				{0.0, 0.0, 0.5, 0.5, 0.0 }, // 7
                                {0.0, 0.5, 0.0, 0.5, 0.0 }, // 11
		}
};

//
const double HemiHex5RefinementPattern3HHex5_2Pr_1HHex7 ::_refine_matrix_3[1][7][5] = { /* const */
		{
				//  0     1     2     3     4
				{0.0, 0.5, 0.5, 0.0, 0.0 }, // 6
				{0.0, 0.5, 0.0, 0.5, 0.0 }, // 11
				{0.0, 0.0, 0.5, 0.5, 0.0 }, // 7
				{0.25, 0.0, 0.25, 0.25, 0.25 }, // 13
				{0.5, 0.0, 0.5, 0.0, 0.0 }, // 10
				{0.5, 0.5, 0.0, 0.0, 0.0 }, // 5
				{0.25, 0.25, 0.0, 0.25, 0.25 }, // 12
		}
};

/*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*/

const double HemiHex5RefinementPattern7HHex5_4Pr_3HHex6_2HHex7_1Hex ::_refine_matrix_1[7][5][5] = {
		{
				//  0     1     2     3     4
				{0.666, 0.333, 0.0, 0.0, 0.0 }, // 5
				{0.333, 0.666, 0.0, 0.0, 0.0 }, // 6
				{0.333, 0.333, 0.333, 0.0, 0.0 }, // 27
				{0.222, 0.444, 0.0, 0.222, 0.111 }, // 20
				{0.444, 0.222, 0.0, 0.111, 0.222}, // 19
		},
		{
				//  0     1     2     3     4
				{0.666, 0.0, 0.333, 0.0, 0.0 }, // 17
				{0.333, 0.333, 0.333, 0.0, 0.0 }, // 27
				{0.333, 0.0, 0.666, 0.0, 0.0 }, // 18
				{0.222, 0.0, 0.444, 0.222, 0.111 }, // 24
				{0.444, 0.0, 0.222, 0.111, 0.222}, // 23
		},
		{
				//  0     1     2     3     4
				{0.222, 0.444, 0.0, 0.222, 0.111 }, // 20
				{0.0, 0.666, 0.0, 0.333, 0.0 }, // 11
				{0.0, 0.333, 0.333, 0.333, 0.0}, // 28
				{0.0, 0.333, 0.0, 0.666, 0.0 }, // 12
				{0.111, 0.222, 0.0, 0.444, 0.222}, // 22
		},
		{
				//  0     1     2     3     4
				{0.222, 0.0, 0.444, 0.222, 0.111 }, // 24
				{0.0, 0.333, 0.333, 0.333, 0.0}, // 28
				{0.0, 0.0, 0.666, 0.333, 0.0 }, // 13
				{0.0, 0.0, 0.333, 0.666, 0.0 }, // 14
				{0.111, 0.0, 0.222, 0.444, 0.222}, // 26
		},
		{
				//  0     1     2     3     4
				{0.333, 0.0, 0.0, 0.0, 0.666 }, // 8
				{0.222, 0.111, 0.0, 0.222, 0.444}, // 21
				{0.222, 0.0, 0.111, 0.222, 0.444}, // 25
				{0.0, 0.0, 0.0, 0.333, 0.666 }, // 16
				{0.0,  0.0,  0.0,  0.0,  1.0 }, // 4
		},
		{
				//  0     1     2     3     4
				{0.333, 0.0, 0.666, 0.0, 0.0 }, // 18
				{0.0, 0.333, 0.666, 0.0, 0.0 }, // 10
				{0.0,  0.0,  1.0,  0.0,  0.0 }, // 2
				{0.0, 0.0, 0.666, 0.333, 0.0 }, // 13
				{0.222, 0.0, 0.444, 0.222, 0.111 }, // 24
		},
		{
				//  0     1     2     3     4
				{0.333, 0.666, 0.0, 0.0, 0.0 }, // 6
				{0.0,  1.0,  0.0,  0.0,  0.0 }, // 1
				{0.0, 0.666, 0.333, 0.0, 0.0 }, // 9
				{0.0, 0.666, 0.0, 0.333, 0.0 }, // 11
				{0.222, 0.444, 0.0, 0.222, 0.111 }, // 20
		}
};

//
const double HemiHex5RefinementPattern7HHex5_4Pr_3HHex6_2HHex7_1Hex ::_refine_matrix_2[4][6][5] = { /* const */
		{
				//  0     1     2     3     4
				{1.0,  0.0,  0.0,  0.0,  0.0 }, // 0
				{0.666, 0.0, 0.333, 0.0, 0.0 }, // 17
				{0.666, 0.333, 0.0, 0.0, 0.0 }, // 5
				{0.666, 0.0, 0.0, 0.0, 0.333 }, // 7
				{0.444, 0.0, 0.222, 0.111, 0.222}, // 23
				{0.444, 0.222, 0.0, 0.111, 0.222}, // 19
		},
		{
				//  0     1     2     3     4
				{0.0, 0.0, 0.0, 0.666, 0.333 }, // 15
				{0.111, 0.0, 0.222, 0.444, 0.222}, // 26
				{0.111, 0.222, 0.0, 0.444, 0.222}, // 22
				{0.0,  0.0,  0.0,  1.0,  0.0 }, // 3
				{0.0, 0.0, 0.333, 0.666, 0.0 }, // 14
				{0.0, 0.333, 0.0, 0.666, 0.0 }, // 12
		},
		{
				//  0     1     2     3     4
				{0.666, 0.0, 0.0, 0.0, 0.333 }, // 7
				{0.444, 0.0, 0.222, 0.111, 0.222}, // 23
				{0.444, 0.222, 0.0, 0.111, 0.222}, // 19
				{0.333, 0.0, 0.0, 0.0, 0.666 }, // 8
				{0.222, 0.0, 0.111, 0.222, 0.444}, // 25
				{0.222, 0.111, 0.0, 0.222, 0.444}, // 21
		},
		{
				//  0     1     2     3     4
				{0.0, 0.0, 0.0, 0.333, 0.666 }, // 16
				{0.222, 0.0, 0.111, 0.222, 0.444}, // 25
				{0.222, 0.111, 0.0, 0.222, 0.444}, // 21
				{0.0, 0.0, 0.0, 0.666, 0.333 }, // 15
				{0.111, 0.0, 0.222, 0.444, 0.222}, // 26
				{0.111, 0.222, 0.0, 0.444, 0.222}, // 22
		}
};

//
const double HemiHex5RefinementPattern7HHex5_4Pr_3HHex6_2HHex7_1Hex ::_refine_matrix_3[3][6][5] = { /* const */
		{
				//  0     1     2     3     4
				{0.0, 0.333, 0.666, 0.0, 0.0 }, // 10
				{0.0, 0.333, 0.333, 0.333, 0.0}, // 28
				{0.0, 0.0, 0.666, 0.333, 0.0 }, // 13
				{0.222, 0.0, 0.444, 0.222, 0.111 }, // 24
				{0.333, 0.0, 0.666, 0.0, 0.0 }, // 18
				{0.333, 0.333, 0.333, 0.0, 0.0 }, // 27
		},
		{
				//  0     1     2     3     4
				{0.333, 0.333, 0.333, 0.0, 0.0 }, // 27
				{0.0, 0.666, 0.333, 0.0, 0.0 }, // 9
				{0.0, 0.333, 0.666, 0.0, 0.0 }, // 10
				{0.0, 0.333, 0.333, 0.333, 0.0}, // 28
				{0.222, 0.0, 0.444, 0.222, 0.111 }, // 24
				{0.222, 0.444, 0.0, 0.222, 0.111 }, // 20
		},
		{
				//  0     1     2     3     4
				{0.0, 0.666, 0.333, 0.0, 0.0 }, // 9
				{0.0, 0.666, 0.0, 0.333, 0.0 }, // 11
				{0.0, 0.333, 0.333, 0.333, 0.0}, // 28
				{0.222, 0.444, 0.0, 0.222, 0.111 }, // 20
				{0.333, 0.333, 0.333, 0.0, 0.0 }, // 27
				{0.333, 0.666, 0.0, 0.0, 0.0 }, // 6

		}
};

//
const double HemiHex5RefinementPattern7HHex5_4Pr_3HHex6_2HHex7_1Hex ::_refine_matrix_4[2][7][5] = { /* const */
		{
				//  0     1     2     3     4
				{0.0, 0.333, 0.333, 0.333, 0.0}, // 28
				{0.222, 0.0, 0.444, 0.222, 0.111 }, // 24
				{0.222, 0.444, 0.0, 0.222, 0.111 }, // 20
				{0.111, 0.222, 0.0, 0.444, 0.222}, // 22
				{0.0, 0.333, 0.0, 0.666, 0.0 }, // 12
				{0.0, 0.0, 0.333, 0.666, 0.0 }, // 14
				{0.111, 0.0, 0.222, 0.444, 0.222}, // 26
		},
		{
				//  0     1     2     3     4
				{0.333, 0.333, 0.333, 0.0, 0.0 }, // 27
				{0.666, 0.0, 0.333, 0.0, 0.0 }, // 17
				{0.666, 0.333, 0.0, 0.0, 0.0 }, // 5
				{0.444, 0.222, 0.0, 0.111, 0.222}, // 19
				{0.222, 0.444, 0.0, 0.222, 0.111 }, // 20
				{0.222, 0.0, 0.444, 0.222, 0.111 }, // 24
				{0.444, 0.0, 0.222, 0.111, 0.222}, // 23
		}
};

//
const double HemiHex5RefinementPattern7HHex5_4Pr_3HHex6_2HHex7_1Hex ::_refine_matrix_5[1][8][5] = { /* const */
		{
				//  0     1     2     3     4
				{0.222, 0.111, 0.0, 0.222, 0.444}, // 21
				{0.444, 0.222, 0.0, 0.111, 0.222}, // 19
				{0.222, 0.444, 0.0, 0.222, 0.111 }, // 20
				{0.111, 0.222, 0.0, 0.444, 0.222}, // 22
				{0.222, 0.0, 0.111, 0.222, 0.444}, // 25
				{0.444, 0.0, 0.222, 0.111, 0.222}, // 23
				{0.222, 0.0, 0.444, 0.222, 0.111 }, // 24
				{0.111, 0.0, 0.222, 0.444, 0.222}, // 26
		}
};

/*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*/

const double HemiHex6RefinementPattern4Hex_4HHex7 ::_refine_matrix_1[4][8][6] = {
              {
                    //0   1    2    3    4    5
                    {0.0, 1.0, 0.0, 0.0, 0.0, 0.0 }, // 1
                    {0.0, 0.5, 0.0, 0.5, 0.0, 0.0 }, // 12
                    {0.25, 0.25, 0.0, 0.25, 0.0, 0.25 }, // 16
                    {0.5, 0.5, 0.0, 0.0, 0.0, 0.0 }, // 6
                    {0.0, 0.5, 0.5, 0.0, 0.0, 0.0 }, // 7
                    {0.0, 0.25, 0.25, 0.5, 0.0, 0.0 }, // 18
                    {0.25, 0.125, 0.125, 0.25, 0.125, 0.125 }, // 22
                    {0.5, 0.25, 0.25, 0.0, 0.0, 0.0 }, // 17
              },
              {
                    //0   1    2    3    4    5
                    {0.0, 0.5, 0.5, 0.0, 0.0, 0.0 }, // 7
                    {0.0, 0.25, 0.25, 0.5, 0.0, 0.0 }, // 18
                    {0.25, 0.125, 0.125, 0.25, 0.125, 0.125 }, // 22
                    {0.5, 0.25, 0.25, 0.0, 0.0, 0.0 }, // 17
                    {0.0, 0.0, 1.0, 0.0, 0.0, 0.0 }, // 2
                    {0.0, 0.0, 0.5, 0.5, 0.0, 0.0 }, // 8
                    {0.25, 0.0, 0.25, 0.25, 0.25, 0.0 }, // 21
                    {0.5, 0.0, 0.5, 0.0, 0.0, 0.0 }, // 14
              },
              {
                    //0   1    2    3    4    5
                    {0.0, 0.0, 0.0, 0.0, 0.0, 1.0 }, // 5
                    {0.5, 0.0, 0.0, 0.0, 0.0, 0.5 }, // 11
                    {0.25, 0.25, 0.0, 0.25, 0.0, 0.25 }, // 16
                    {0.0, 0.0, 0.0, 0.5, 0.0, 0.5 }, // 13
                    {0.0, 0.0, 0.0, 0.0, 0.5, 0.5 }, // 10
                    {0.5, 0.0, 0.0, 0.0, 0.25, 0.25 }, // 20
                    {0.25, 0.125, 0.125, 0.25, 0.125, 0.125 }, // 22
                    {0.0, 0.0, 0.0, 0.5, 0.25, 0.25 }, // 19
              },
              {
                    //0   1    2    3    4    5
                    {0.0, 0.0, 0.0, 0.0, 0.5, 0.5 }, // 10
                    {0.5, 0.0, 0.0, 0.0, 0.25, 0.25 }, // 20
                    {0.25, 0.125, 0.125, 0.25, 0.125, 0.125 }, // 22
                    {0.0, 0.0, 0.0, 0.5, 0.25, 0.25 }, // 19
                    {0.0, 0.0, 0.0, 0.0, 1.0, 0.0 }, // 4
                    {0.5, 0.0, 0.0, 0.0, 0.5, 0.0 }, // 15
                    {0.25, 0.0, 0.25, 0.25, 0.25, 0.0 }, // 21
                    {0.0, 0.0, 0.0, 0.5, 0.5, 0.0 }, // 9
              },
};
const Integer HemiHex6RefinementPattern4Hex_4HHex7 ::_face_mapping_1[4][6] = {
                 //  0  1  2  3  4  5
                    {2, 0, 4, 1, 5, 3},
                    {2, 0, 4, 1, 5, 3},
                    {2, 5, 3, 1, 0, 4},
                    {2, 5, 3, 1, 0, 4},
};
const Integer HemiHex6RefinementPattern4Hex_4HHex7 ::_face_mapping_topo_1[4][6] = {
                 //  0  1  2  3  4  5
                    {1, 1, 1, 0, 0, 0},
                    {0, 1, 1, 1, 0, 0},
                    {1, 1, 1, 0, 0, 0},
                    {0, 1, 1, 1, 0, 0},
};
//
const double HemiHex6RefinementPattern4Hex_4HHex7 ::_refine_matrix_2[4][7][6] = {
              {
                    //0   1    2    3    4    5
                    {1.0, 0.0, 0.0, 0.0, 0.0, 0.0 }, // 0
                    {0.5, 0.5, 0.0, 0.0, 0.0, 0.0 }, // 6
                    {0.5, 0.25, 0.25, 0.0, 0.0, 0.0 }, // 17
                    {0.25, 0.125, 0.125, 0.25, 0.125, 0.125 }, // 22
                    {0.5, 0.0, 0.0, 0.0, 0.25, 0.25 }, // 20
                    {0.5, 0.0, 0.0, 0.0, 0.0, 0.5 }, // 11
                    {0.25, 0.25, 0.0, 0.25, 0.0, 0.25 }, // 16
              },
              {
                    //0   1    2    3    4    5
                    {1.0, 0.0, 0.0, 0.0, 0.0, 0.0 }, // 0
                    {0.5, 0.25, 0.25, 0.0, 0.0, 0.0 }, // 17
                    {0.5, 0.0, 0.5, 0.0, 0.0, 0.0 }, // 14
                    {0.25, 0.0, 0.25, 0.25, 0.25, 0.0 }, // 21
                    {0.5, 0.0, 0.0, 0.0, 0.5, 0.0 }, // 15
                    {0.5, 0.0, 0.0, 0.0, 0.25, 0.25 }, // 20
                    {0.25, 0.125, 0.125, 0.25, 0.125, 0.125 }, // 22
              },
              {
                    //0   1    2    3    4    5
                    {0.0, 0.0, 0.0, 1.0, 0.0, 0.0 }, // 3
                    {0.0, 0.0, 0.0, 0.5, 0.0, 0.5 }, // 13
                    {0.0, 0.0, 0.0, 0.5, 0.25, 0.25 }, // 19
                    {0.25, 0.125, 0.125, 0.25, 0.125, 0.125 }, // 22
                    {0.0, 0.25, 0.25, 0.5, 0.0, 0.0 }, // 18
                    {0.0, 0.5, 0.0, 0.5, 0.0, 0.0 }, // 12
                    {0.25, 0.25, 0.0, 0.25, 0.0, 0.25 }, // 16
              },
              {
                    //0   1    2    3    4    5
                    {0.0, 0.0, 0.0, 1.0, 0.0, 0.0 }, // 3
                    {0.0, 0.0, 0.0, 0.5, 0.25, 0.25 }, // 19
                    {0.0, 0.0, 0.0, 0.5, 0.5, 0.0 }, // 9
                    {0.25, 0.0, 0.25, 0.25, 0.25, 0.0 }, // 21
                    {0.0, 0.0, 0.5, 0.5, 0.0, 0.0 }, // 8
                    {0.0, 0.25, 0.25, 0.5, 0.0, 0.0 }, // 18
                    {0.25, 0.125, 0.125, 0.25, 0.125, 0.125 }, // 22
              },
};
const Integer HemiHex6RefinementPattern4Hex_4HHex7 ::_face_mapping_2[4][6] = {
                 //  0  1  2  3  4  5
                    {0, 1, 2, 3, 4, 5},
                    {0, 1, 2, 3, 4, 5},
                    {5, 1, 2, 4, 3, 0},
                    {5, 1, 2, 4, 3, 0},
};
const Integer HemiHex6RefinementPattern4Hex_4HHex7 ::_face_mapping_topo_2[4][6] = {
                 //  0  1  2  3  4  5
                    {1, 0, 1, 1, 0, 0},
                    {1, 1, 0, 1, 0, 0},
                    {1, 0, 1, 1, 0, 0},
                    {1, 1, 0, 1, 0, 0},
};

/*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*/

const double HemiHex6RefinementPattern4HHex5_4HHex7 ::_refine_matrix_1[4][5][6] = {
		{
				//  0     1     2     3     4	5
				{0.0, 0.0, 0.0, 0.5, 0.0, 0.5 }, // 14
				{0.0, 0.0, 0.0, 0.0, 0.0, 1.0 }, // 5
				{0.0, 0.0, 0.0, 0.0, 0.5, 0.5 }, // 15
				{0.5, 0.0, 0.0, 0.0, 0.0, 0.5 }, // 12
				{0.25, 0.25, 0.0, 0.25, 0.0, 0.25}, // 16
		},
		{
				//  0     1     2     3     4   5
				{0.0, 0.0, 0.0, 0.5, 0.5, 0.0 }, // 9
				{0.0, 0.0, 0.0, 0.0, 0.5, 0.5 }, // 15
				{0.0, 0.0, 0.0, 0.0, 1.0, 0.0 }, // 4
				{0.5, 0.0, 0.0, 0.0, 0.5, 0.0 }, // 11
				{0.25, 0.0, 0.25, 0.25, 0.25, 0.0}, // 17
		},
		{
				//  0     1     2     3     4   5
				{0.5, 0.0, 0.5, 0.0, 0.0, 0.0 }, // 10
				{0.0, 0.5, 0.5, 0.0, 0.0, 0.0 }, // 7
				{0.0, 0.0, 1.0, 0.0, 0.0, 0.0 }, // 2
				{0.0, 0.0, 0.5, 0.5, 0.0, 0.0 }, // 8
				{0.25, 0.0, 0.25, 0.25, 0.25, 0.0}, // 17
		},
		{
				//  0     1     2     3     4   5
				{0.5, 0.5, 0.0, 0.0, 0.0, 0.0 }, // 6
				{0.0, 1.0, 0.0, 0.0, 0.0, 0.0 }, // 1
				{0.0, 0.5, 0.5, 0.0, 0.0, 0.0 }, // 7
				{0.0, 0.5, 0.0, 0.5, 0.0, 0.0 }, // 13
				{0.25, 0.25, 0.0, 0.25, 0.0, 0.25}, // 16
		}
};

//
const double HemiHex6RefinementPattern4HHex5_4HHex7 ::_refine_matrix_2[4][7][6] = { /* const */
		{
				//  0     1     2     3     4    5
				{0.0, 0.0, 0.0, 0.0, 0.5, 0.5 }, // 15
				{0.5, 0.0, 0.0, 0.0, 0.0, 0.5 }, // 12
				{0.5, 0.0, 0.0, 0.0, 0.5, 0.0 }, // 11
				{0.25, 0.0, 0.25, 0.25, 0.25, 0.0}, // 17
				{0.0, 0.0, 0.0, 0.5, 0.5, 0.0 }, // 9
				{0.0, 0.0, 0.0, 0.5, 0.0, 0.5 }, // 14
				{0.25, 0.25, 0.0, 0.25, 0.0, 0.25}, // 16
		},
		{
				//  0     1     2     3     4    5
				{0.0, 0.5, 0.5, 0.0, 0.0, 0.0 }, // 7
				{0.0, 0.5, 0.0, 0.5, 0.0, 0.0 }, // 13
				{0.0, 0.0, 0.5, 0.5, 0.0, 0.0 }, // 8
				{0.25, 0.0, 0.25, 0.25, 0.25, 0.0}, // 17
				{0.5, 0.0, 0.5, 0.0, 0.0, 0.0 }, // 10
				{0.5, 0.5, 0.0, 0.0, 0.0, 0.0 }, // 6
				{0.25, 0.25, 0.0, 0.25, 0.0, 0.25}, // 16
		},
		{
				//  0     1     2     3     4    5
				{1.0, 0.0, 0.0, 0.0, 0.0, 0.0 }, // 0
				{0.5, 0.5, 0.0, 0.0, 0.0, 0.0 }, // 6
				{0.5, 0.0, 0.5, 0.0, 0.0, 0.0 }, // 10
				{0.25, 0.0, 0.25, 0.25, 0.25, 0.0}, // 17
				{0.5, 0.0, 0.0, 0.0, 0.5, 0.0 }, // 11
				{0.5, 0.0, 0.0, 0.0, 0.0, 0.5 }, // 12
				{0.25, 0.25, 0.0, 0.25, 0.0, 0.25}, // 16
		},
		{
				//  0     1     2     3     4    5
				{0.0, 0.0, 0.0, 1.0, 0.0, 0.0 }, // 3
				{0.0, 0.0, 0.0, 0.5, 0.0, 0.5 }, // 14
				{0.0, 0.0, 0.0, 0.5, 0.5, 0.0 }, // 9
				{0.25, 0.0, 0.25, 0.25, 0.25, 0.0}, // 17
				{0.0, 0.0, 0.5, 0.5, 0.0, 0.0 }, // 8
				{0.0, 0.5, 0.0, 0.5, 0.0, 0.0 }, // 13
				{0.25, 0.25, 0.0, 0.25, 0.0, 0.25}, // 16
		}
};

/*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*/

const double HemiHex6RefinementPattern6HHex6_12HHex5_6HHex7_1Hex ::_refine_matrix_1[6][6][6] = {
		{
				//  0     1     2     3     4	5
				{0.0, 0.333, 0.666, 0.0, 0.0, 0.0 },     // 15
				{0.0, 0.333, 0.333, 0.333, 0.0, 0.0 },   // 35
				{0.0, 0.0, 0.666, 0.333, 0.0, 0.0 },     // 18
				{0.222, 0.0, 0.444, 0.222, 0.111, 0.0 }, // 31
				{0.333, 0.0, 0.666, 0.0, 0.0, 0.0 },     // 9
				{0.333, 0.333, 0.333, 0.0, 0.0, 0.0 },   // 34
		},
		{
				//  0     1     2     3     4    5
				{0.0, 0.666, 0.333, 0.0, 0.0, 0.0 },     // 14
				{0.0, 0.666, 0.0, 0.333, 0.0, 0.0 },     // 16
				{0.0, 0.333, 0.333, 0.333, 0.0, 0.0 },   // 35
				{0.222, 0.444, 0.0, 0.222, 0.0, 0.111 }, // 27
				{0.333, 0.333, 0.333, 0.0, 0.0, 0.0 },   // 34
				{0.333, 0.666, 0.0, 0.0, 0.0, 0.0 },     // 7
		},
		{
				//  0     1     2     3     4    5
				{0.333, 0.333, 0.333, 0.0, 0.0, 0.0 },   // 34
				{0.0, 0.666, 0.333, 0.0, 0.0, 0.0 },     // 14
				{0.0, 0.333, 0.666, 0.0, 0.0, 0.0 },     // 15
				{0.0, 0.333, 0.333, 0.333, 0.0, 0.0 },   // 35
				{0.222, 0.0, 0.444, 0.222, 0.111, 0.0 }, // 31
				{0.222, 0.444, 0.0, 0.222, 0.0, 0.111 }, // 27
		},
		{
				//  0     1     2     3     4    5
				{0.0, 0.0, 0.0, 0.0, 0.666, 0.333 },     // 24
				{0.333, 0.0, 0.0, 0.0, 0.333, 0.333 },   // 36
				{0.333, 0.0, 0.0, 0.0, 0.666, 0.0 },     // 11
				{0.222, 0.0, 0.111, 0.222, 0.444, 0.0 }, // 32
				{0.0, 0.0, 0.0, 0.333, 0.666, 0.0 },     // 21
				{0.0, 0.0, 0.0, 0.333, 0.333, 0.333 },   // 37
		},
		{
				//  0     1     2     3     4    5
				{0.0, 0.0, 0.0, 0.0, 0.333, 0.666 },     // 25
				{0.333, 0.0, 0.0, 0.0, 0.0, 0.666 },     // 13
				{0.333, 0.0, 0.0, 0.0, 0.333, 0.333 },   // 36
				{0.222, 0.111, 0.0, 0.222, 0.0, 0.444 }, // 28
				{0.0, 0.0, 0.0, 0.333, 0.333, 0.333 },   // 37
				{0.0, 0.0, 0.0, 0.333, 0.0, 0.666 },     // 23
		},
		{
				//  0     1     2     3     4    5
				{0.333, 0.0, 0.0, 0.0, 0.333, 0.333 },   // 36
				{0.222, 0.111, 0.0, 0.222, 0.0, 0.444 }, // 28
				{0.222, 0.0, 0.111, 0.222, 0.444, 0.0 }, // 32
				{0.0, 0.0, 0.0, 0.333, 0.333, 0.333 },   // 37
				{0.0, 0.0, 0.0, 0.0, 0.666, 0.333 },     // 24
				{0.0, 0.0, 0.0, 0.0, 0.333, 0.666 },     // 25
		}
};

//
const double HemiHex6RefinementPattern6HHex6_12HHex5_6HHex7_1Hex ::_refine_matrix_2[12][5][6] = { /* const */
		{
				//  0     1     2     3     4    5
				{0.333, 0.0, 0.666, 0.0, 0.0, 0.0 },     // 9
				{0.0, 0.333, 0.666, 0.0, 0.0, 0.0 },     // 15
				{0.0,  0.0,  1.0,  0.0,  0.0,  0.0 },    // 2
				{0.0, 0.0, 0.666, 0.333, 0.0, 0.0 },     // 18
				{0.222, 0.0, 0.444, 0.222, 0.111, 0.0 }, // 31
		},
		{
				//  0     1     2     3     4    5
				{0.333, 0.666, 0.0, 0.0, 0.0, 0.0 },     // 7
				{0.0,  1.0,  0.0,  0.0,  0.0,  0.0 },    // 1
				{0.0, 0.666, 0.333, 0.0, 0.0, 0.0 },     // 14
				{0.0, 0.666, 0.0, 0.333, 0.0, 0.0 },     // 16
				{0.222, 0.444, 0.0, 0.222, 0.0, 0.111 }, // 27
		},
		{
				//  0     1     2     3     4    5
				{0.0, 0.0, 0.0, 0.333, 0.666, 0.0 },     // 21
				{0.0, 0.0, 0.0, 0.0, 0.666, 0.333 },     // 24
				{0.0,  0.0,  0.0,  0.0,  1.0,  0.0 },    // 4
				{0.333, 0.0, 0.0, 0.0, 0.666, 0.0 },     // 11
				{0.222, 0.0, 0.111, 0.222, 0.444, 0.0 }, // 32
		},
		{
				//  0     1     2     3     4    5
				{0.0, 0.0, 0.0, 0.333, 0.0, 0.666 },     // 23
				{0.0,  0.0,  0.0,  0.0,  0.0,  1.0 },    // 5
				{0.0, 0.0, 0.0, 0.0, 0.333, 0.666 },     // 25
				{0.333, 0.0, 0.0, 0.0, 0.0, 0.666 },     // 13
				{0.222, 0.111, 0.0, 0.222, 0.0, 0.444 }, // 28
		},
		{
				//  0     1     2     3     4    5
				{0.666, 0.0, 0.333, 0.0, 0.0, 0.0 },     // 8
				{0.333, 0.333, 0.333, 0.0, 0.0, 0.0 },   // 34
				{0.333, 0.0, 0.666, 0.0, 0.0, 0.0 },     // 9
				{0.222, 0.0, 0.444, 0.222, 0.111, 0.0 }, // 31
				{0.444, 0.0, 0.222, 0.111, 0.222, 0.0 }, // 30
		},
		{
				//  0     1     2     3     4    5
				{0.666, 0.333, 0.0, 0.0, 0.0, 0.0 },     // 6
				{0.333, 0.666, 0.0, 0.0, 0.0, 0.0 },     // 7
				{0.333, 0.333, 0.333, 0.0, 0.0, 0.0 },   // 34
				{0.222, 0.444, 0.0, 0.222, 0.0, 0.111 }, // 27
				{0.444, 0.222, 0.0, 0.111, 0.0, 0.222 }, // 26
		},
		{
				//  0     1     2     3     4    5
				{0.222, 0.0, 0.111, 0.222, 0.444, 0.0 }, // 32
				{0.333, 0.0, 0.0, 0.0, 0.333, 0.333 },   // 36
				{0.333, 0.0, 0.0, 0.0, 0.666, 0.0 },     // 11
				{0.666, 0.0, 0.0, 0.0, 0.333, 0.0 },     // 10
				{0.444, 0.0, 0.222, 0.111, 0.222, 0.0 }, // 30
		},
		{
				//  0     1     2     3     4    5
				{0.222, 0.111, 0.0, 0.222, 0.0, 0.444 }, // 28
				{0.333, 0.0, 0.0, 0.0, 0.0, 0.666 },     // 13
				{0.333, 0.0, 0.0, 0.0, 0.333, 0.333 },   // 36
				{0.666, 0.0, 0.0, 0.0, 0.0, 0.333 },     // 12
				{0.444, 0.222, 0.0, 0.111, 0.0, 0.222 }, // 26
		},
		{
				//  0     1     2     3     4    5
				{0.222, 0.0, 0.444, 0.222, 0.111, 0.0 }, // 31
				{0.0, 0.333, 0.333, 0.333, 0.0, 0.0 },   // 35
				{0.0, 0.0, 0.666, 0.333, 0.0, 0.0 },     // 18
				{0.0, 0.0, 0.333, 0.666, 0.0, 0.0 },     // 19
				{0.111, 0.0, 0.222, 0.444, 0.222, 0.0 }, // 33
		},
		{
				//  0     1     2     3     4    5
				{0.222, 0.444, 0.0, 0.222, 0.0, 0.111 }, // 27
				{0.0, 0.666, 0.0, 0.333, 0.0, 0.0 },     // 16
				{0.0, 0.333, 0.333, 0.333, 0.0, 0.0 },   // 35
				{0.0, 0.333, 0.0, 0.666, 0.0, 0.0 },     // 17
				{0.111, 0.222, 0.0, 0.444, 0.0, 0.222 }, // 29
		},
		{
				//  0     1     2     3     4    5
				{0.0, 0.0, 0.0, 0.666, 0.333, 0.0 },     // 20
				{0.0, 0.0, 0.0, 0.333, 0.333, 0.333 },   // 37
				{0.0, 0.0, 0.0, 0.333, 0.666, 0.0 },     // 21
				{0.222, 0.0, 0.111, 0.222, 0.444, 0.0 }, // 32
				{0.111, 0.0, 0.222, 0.444, 0.222, 0.0 }, // 33
		},
		{
				//  0     1     2     3     4    5
				{0.0, 0.0, 0.0, 0.666, 0.0, 0.333 },     // 22
				{0.0, 0.0, 0.0, 0.333, 0.0, 0.666 },     // 23
				{0.0, 0.0, 0.0, 0.333, 0.333, 0.333 },   // 37
				{0.222, 0.111, 0.0, 0.222, 0.0, 0.444 }, // 28
				{0.111, 0.222, 0.0, 0.444, 0.0, 0.222 }, // 29

		}
};
const double HemiHex6RefinementPattern6HHex6_12HHex5_6HHex7_1Hex ::_refine_matrix_3[6][7][6] = {
		{
				//  0     1     2     3     4	5
				{0.333, 0.333, 0.333, 0.0, 0.0, 0.0 },   // 34
				{0.222, 0.444, 0.0, 0.222, 0.0, 0.111 }, // 27
				{0.222, 0.0, 0.444, 0.222, 0.111, 0.0 }, // 31
				{0.444, 0.0, 0.222, 0.111, 0.222, 0.0 }, // 30
				{0.666, 0.0, 0.333, 0.0, 0.0, 0.0 },     // 8
				{0.666, 0.333, 0.0, 0.0, 0.0, 0.0 },     // 6
				{0.444, 0.222, 0.0, 0.111, 0.0, 0.222 }, // 26
		},
		{
				//  0     1     2     3     4    5
				{0.333, 0.0, 0.0, 0.0, 0.333, 0.333 },   // 36
				{0.666, 0.0, 0.0, 0.0, 0.0, 0.333 },     // 12
				{0.666, 0.0, 0.0, 0.0, 0.333, 0.0 },     // 10
				{0.444, 0.0, 0.222, 0.111, 0.222, 0.0 }, // 30
				{0.222, 0.0, 0.111, 0.222, 0.444, 0.0 }, // 32
				{0.222, 0.111, 0.0, 0.222, 0.0, 0.444 }, // 28
				{0.444, 0.222, 0.0, 0.111, 0.0, 0.222 }, // 26
		},
		{
				//  0     1     2     3     4    5
				{0.0, 0.333, 0.333, 0.333, 0.0, 0.0 },   // 35
				{0.0, 0.333, 0.0, 0.666, 0.0, 0.0 },     // 17
				{0.0, 0.0, 0.333, 0.666, 0.0, 0.0 },     // 19
				{0.111, 0.0, 0.222, 0.444, 0.222, 0.0 }, // 33
				{0.222, 0.0, 0.444, 0.222, 0.111, 0.0 }, // 31
				{0.222, 0.444, 0.0, 0.222, 0.0, 0.111 }, // 27
				{0.111, 0.222, 0.0, 0.444, 0.0, 0.222 }, // 29
		},
		{
				//  0     1     2     3     4    5
				{0.0, 0.0, 0.0, 0.333, 0.333, 0.333 },   // 37
				{0.222, 0.111, 0.0, 0.222, 0.0, 0.444 }, // 28
				{0.222, 0.0, 0.111, 0.222, 0.444, 0.0 }, // 32
				{0.111, 0.0, 0.222, 0.444, 0.222, 0.0 }, // 33
				{0.0, 0.0, 0.0, 0.666, 0.333, 0.0 },     // 20
				{0.0, 0.0, 0.0, 0.666, 0.0, 0.333 },     // 22
				{0.111, 0.222, 0.0, 0.444, 0.0, 0.222 }, // 29
		},
		{
				//  0     1     2     3     4    5
				{1.0,  0.0,  0.0,  0.0,  0.0,  0.0 },    // 0
				{0.666, 0.333, 0.0, 0.0, 0.0, 0.0 },     // 6
				{0.666, 0.0, 0.333, 0.0, 0.0, 0.0 },     // 8
				{0.444, 0.0, 0.222, 0.111, 0.222, 0.0 }, // 30
				{0.666, 0.0, 0.0, 0.0, 0.333, 0.0 },     // 10
				{0.666, 0.0, 0.0, 0.0, 0.0, 0.333 },     // 12
				{0.444, 0.222, 0.0, 0.111, 0.0, 0.222 }, // 26
		},
		{
				//  0     1     2     3     4    5
				{0.0,  0.0,  0.0,  1.0,  0.0,  0.0 },    // 3
				{0.0, 0.0, 0.0, 0.666, 0.0, 0.333 },     // 22
				{0.0, 0.0, 0.0, 0.666, 0.333, 0.0 },     // 20
				{0.111, 0.0, 0.222, 0.444, 0.222, 0.0 }, // 33
				{0.0, 0.0, 0.333, 0.666, 0.0, 0.0 },     // 19
				{0.0, 0.333, 0.0, 0.666, 0.0, 0.0 },     // 17
				{0.111, 0.222, 0.0, 0.444, 0.0, 0.222 }, // 29
		}
};

//
const double HemiHex6RefinementPattern6HHex6_12HHex5_6HHex7_1Hex ::_refine_matrix_4[1][8][6] = { /* const */
		{
				//  0     1     2     3     4    5
				{0.222, 0.111, 0.0, 0.222, 0.0, 0.444 }, // 28
				{0.444, 0.222, 0.0, 0.111, 0.0, 0.222 }, // 26
				{0.222, 0.444, 0.0, 0.222, 0.0, 0.111 }, // 27
				{0.111, 0.222, 0.0, 0.444, 0.0, 0.222 }, // 29
				{0.222, 0.0, 0.111, 0.222, 0.444, 0.0 }, // 32
				{0.444, 0.0, 0.222, 0.111, 0.222, 0.0 }, // 30
				{0.222, 0.0, 0.444, 0.222, 0.111, 0.0 }, // 31
				{0.111, 0.0, 0.222, 0.444, 0.222, 0.0 }, // 33
		}
};

/*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*/

const double HemiHex7RefinementPattern6Hex_2HHex7 ::_refine_matrix_1[6][8][7] = {
    {
                    // 0  1    2    3    4    5    6
                    {0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0 }, // 1
                    {0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.5 }, // 14
                    {0.25, 0.25, 0.0, 0.0, 0.0, 0.25, 0.25 }, // 23
                    {0.5, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0 }, // 7
                    {0.0, 0.5, 0.5, 0.0, 0.0, 0.0, 0.0 }, // 8
                    {0.0, 0.25, 0.25, 0.25, 0.0, 0.0, 0.25 }, // 19
                    {0.25, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125 }, // 24
                    {0.5, 0.25, 0.25, 0.0, 0.0, 0.0, 0.0 }, // 18
    },
    {
                    // 0  1    2    3    4    5    6
                    {0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.5 }, // 14
                    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0 }, // 6
                    {0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.5 }, // 13
                    {0.25, 0.25, 0.0, 0.0, 0.0, 0.25, 0.25 }, // 23
                    {0.0, 0.25, 0.25, 0.25, 0.0, 0.0, 0.25 }, // 19
                    {0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.5 }, // 17
                    {0.0, 0.0, 0.0, 0.25, 0.25, 0.25, 0.25 }, // 20
                    {0.25, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125 }, // 24
    },
    {
                    // 0  1    2    3    4    5    6
                    {0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0 }, // 5
                    {0.5, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0 }, // 12
                    {0.25, 0.25, 0.0, 0.0, 0.0, 0.25, 0.25 }, // 23
                    {0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.5 }, // 13
                    {0.0, 0.0, 0.0, 0.0, 0.5, 0.5, 0.0 }, // 11
                    {0.5, 0.0, 0.0, 0.0, 0.25, 0.25, 0.0 }, // 21
                    {0.25, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125 }, // 24
                    {0.0, 0.0, 0.0, 0.25, 0.25, 0.25, 0.25 }, // 20
    },
    {
                    // 0  1    2    3    4    5    6
                    {0.0, 0.5, 0.5, 0.0, 0.0, 0.0, 0.0 }, // 8
                    {0.0, 0.25, 0.25, 0.25, 0.0, 0.0, 0.25 }, // 19
                    {0.25, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125 }, // 24
                    {0.5, 0.25, 0.25, 0.0, 0.0, 0.0, 0.0 }, // 18
                    {0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0 }, // 2
                    {0.0, 0.0, 0.5, 0.5, 0.0, 0.0, 0.0 }, // 9
                    {0.25, 0.0, 0.25, 0.25, 0.25, 0.0, 0.0 }, // 22
                    {0.5, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0 }, // 15
    },
    {
                    // 0  1    2    3    4    5    6
                    {0.0, 0.25, 0.25, 0.25, 0.0, 0.0, 0.25 }, // 19
                    {0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.5 }, // 17
                    {0.0, 0.0, 0.0, 0.25, 0.25, 0.25, 0.25 }, // 20
                    {0.25, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125 }, // 24
                    {0.0, 0.0, 0.5, 0.5, 0.0, 0.0, 0.0 }, // 9
                    {0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0 }, // 3
                    {0.0, 0.0, 0.0, 0.5, 0.5, 0.0, 0.0 }, // 10
                    {0.25, 0.0, 0.25, 0.25, 0.25, 0.0, 0.0 }, // 22
    },
    {
                    // 0  1    2    3    4    5    6
                    {0.0, 0.0, 0.0, 0.0, 0.5, 0.5, 0.0 }, // 11
                    {0.5, 0.0, 0.0, 0.0, 0.25, 0.25, 0.0 }, // 21
                    {0.25, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125 }, // 24
                    {0.0, 0.0, 0.0, 0.25, 0.25, 0.25, 0.25 }, // 20
                    {0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0 }, // 4
                    {0.5, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0 }, // 16
                    {0.25, 0.0, 0.25, 0.25, 0.25, 0.0, 0.0 }, // 22
                    {0.0, 0.0, 0.0, 0.5, 0.5, 0.0, 0.0 }, // 10
    }
};
const Integer HemiHex7RefinementPattern6Hex_2HHex7 ::_face_mapping_1[6][6] = {
                 //  0  1  2  3  4  5
                    {2, 0, 4, 1, 5, 3},
                    {2, 0, 4, 1, 5, 3},
                    {2, 5, 3, 1, 0, 4},
                    {2, 0, 4, 1, 5, 3},
                    {2, 0, 4, 1, 5, 3},
                    {2, 5, 3, 1, 0, 4},
};
const Integer HemiHex7RefinementPattern6Hex_2HHex7 ::_face_mapping_topo_1[6][6] = {
                 //  0  1  2  3  4  5
                    {1, 1, 1, 0, 0, 0},
                    {1, 0, 1, 0, 1, 0},
                    {1, 1, 1, 0, 0, 0},
                    {0, 1, 1, 1, 0, 0},
                    {0, 0, 1, 1, 1, 0},
                    {0, 1, 1, 1, 0, 0},
};

const double HemiHex7RefinementPattern6Hex_2HHex7 ::_refine_matrix_2[2][7][7] = {
  {
                  // 0  1    2    3    4    5    6
                  {1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 }, // 0
                  {0.5, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0 }, // 7
                  {0.5, 0.25, 0.25, 0.0, 0.0, 0.0, 0.0 }, // 18
                  {0.25, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125 }, // 24
                  {0.5, 0.0, 0.0, 0.0, 0.25, 0.25, 0.0 }, // 21
                  {0.5, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0 }, // 12
                  {0.25, 0.25, 0.0, 0.0, 0.0, 0.25, 0.25 }, // 23
  },
  {
                  // 0  1    2    3    4    5    6
                  {1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 }, // 0
                  {0.5, 0.25, 0.25, 0.0, 0.0, 0.0, 0.0 }, // 18
                  {0.5, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0 }, // 15
                  {0.25, 0.0, 0.25, 0.25, 0.25, 0.0, 0.0 }, // 22
                  {0.5, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0 }, // 16
                  {0.5, 0.0, 0.0, 0.0, 0.25, 0.25, 0.0 }, // 21
                  {0.25, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125 }, // 24
  }
};
const Integer HemiHex7RefinementPattern6Hex_2HHex7 ::_face_mapping_2[2][6] = {
     //  0  1  2  3  4  5
        {0, 1, 2, 3, 4, 5},
        {0, 1, 2, 3, 4, 5},
};
const Integer HemiHex7RefinementPattern6Hex_2HHex7 ::_face_mapping_topo_2[2][6] = {
     //  0  1  2  3  4  5
        {1, 0, 1, 1, 0, 0},
        {1, 1, 0, 1, 0, 0},
};
/*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*/

const double HemiHex7RefinementPattern4HHex7_4Pr_2HHex5_1Hex ::_refine_matrix_1[4][7][7] = {
		{
				// 0     1     2     3     4     5     6
				{1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 }, // 0
				{0.5, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0 }, // 7
				{0.5, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0 }, // 8
				{0.25, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125 }, // 22
				{0.5, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0 }, // 9
				{0.5, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0 }, // 10
				{0.25, 0.25, 0.0, 0.0, 0.0, 0.25, 0.25}, // 18
		},
		{
				// 0     1     2     3     4     5     6
				{0.5, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0 }, // 8
				{0.0, 0.5, 0.5, 0.0, 0.0, 0.0, 0.0 }, // 11
				{0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0 }, // 2
				{0.0, 0.0, 0.5, 0.5, 0.0, 0.0, 0.0 }, // 13
				{0.25, 0.0, 0.25, 0.25, 0.25, 0.0, 0.0 }, // 19
				{0.25, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125 }, // 22
				{0.0, 0.25, 0.25, 0.25, 0.0, 0.0, 0.25 }, // 20
		},
		{
				// 0     1     2     3     4     5     6
				{0.5, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0 }, // 9
				{0.25, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125 }, // 22
				{0.25, 0.0, 0.25, 0.25, 0.25, 0.0, 0.0 }, // 19
				{0.0, 0.0, 0.0, 0.5, 0.5, 0.0, 0.0 }, // 14
				{0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0 }, // 4
				{0.0, 0.0, 0.0, 0.0, 0.5, 0.5, 0.0 }, // 16
				{0.0, 0.0, 0.0, 0.25, 0.25, 0.25, 0.25 }, // 21
		},
		{
				// 0     1     2     3     4     5     6
				{0.25, 0.25, 0.0, 0.0, 0.0, 0.25, 0.25}, // 18
				{0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.5 }, // 12
				{0.0, 0.25, 0.25, 0.25, 0.0, 0.0, 0.25 }, // 20
				{0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.5 }, // 15
				{0.0, 0.0, 0.0, 0.25, 0.25, 0.25, 0.25 }, // 21
				{0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.5 }, // 17
				{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0 }, // 6

		}
};

//
const double HemiHex7RefinementPattern4HHex7_4Pr_2HHex5_1Hex ::_refine_matrix_2[4][6][7] = { /* const */
		{
				// 0     1     2     3     4     5     6
				{0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0 }, // 1
				{0.5, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0 }, // 7
				{0.0, 0.5, 0.5, 0.0, 0.0, 0.0, 0.0 }, // 11
				{0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.5 }, // 12
				{0.25, 0.25, 0.0, 0.0, 0.0, 0.25, 0.25}, // 18
				{0.0, 0.25, 0.25, 0.25, 0.0, 0.0, 0.25 }, // 20
		},
		{
				// 0     1     2     3     4     5     6
				{0.0, 0.5, 0.5, 0.0, 0.0, 0.0, 0.0 }, // 11
				{0.5, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0 }, // 7
				{0.5, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0 }, // 8
				{0.0, 0.25, 0.25, 0.25, 0.0, 0.0, 0.25 }, // 20
				{0.25, 0.25, 0.0, 0.0, 0.0, 0.25, 0.25}, // 18
				{0.25, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125 }, // 22
		},
		{
				// 0     1     2     3     4     5     6
				{0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0 }, // 5
				{0.5, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0 }, // 10
				{0.0, 0.0, 0.0, 0.0, 0.5, 0.5, 0.0 }, // 16
				{0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.5 }, // 17
				{0.25, 0.25, 0.0, 0.0, 0.0, 0.25, 0.25}, // 18
				{0.0, 0.0, 0.0, 0.25, 0.25, 0.25, 0.25 }, // 21
		},
		{
				// 0     1     2     3     4     5     6
				{0.0, 0.0, 0.0, 0.0, 0.5, 0.5, 0.0 }, // 16
				{0.5, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0 }, // 10
				{0.5, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0 }, // 9
				{0.0, 0.0, 0.0, 0.25, 0.25, 0.25, 0.25 }, // 21
				{0.25, 0.25, 0.0, 0.0, 0.0, 0.25, 0.25}, // 18
				{0.25, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125 }, // 22
		}
};

//
const double HemiHex7RefinementPattern4HHex7_4Pr_2HHex5_1Hex ::_refine_matrix_3[2][5][7] = { /* const */
		{
				// 0     1     2     3     4     5     6
				{0.0, 0.0, 0.0, 0.25, 0.25, 0.25, 0.25 }, // 21
				{0.25, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125 }, // 22
				{0.25, 0.25, 0.0, 0.0, 0.0, 0.25, 0.25}, // 18
				{0.0, 0.25, 0.25, 0.25, 0.0, 0.0, 0.25 }, // 20
				{0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.5 }, // 15
		},
		{
				// 0     1     2     3     4     5     6
				{0.5, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0 }, // 8
				{0.25, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125 }, // 22
				{0.25, 0.0, 0.25, 0.25, 0.25, 0.0, 0.0 }, // 19
				{0.5, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0 }, // 9
				{1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 }, // 0
		}
};

//
const double HemiHex7RefinementPattern4HHex7_4Pr_2HHex5_1Hex ::_refine_matrix_4[1][8][7] = { /* const */
		{
				// 0     1     2     3     4     5     6
				{0.25, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125 }, // 22
				{0.0, 0.25, 0.25, 0.25, 0.0, 0.0, 0.25 }, // 20
				{0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.5 }, // 15
				{0.0, 0.0, 0.0, 0.25, 0.25, 0.25, 0.25 }, // 21
				{0.25, 0.0, 0.25, 0.25, 0.25, 0.0, 0.0 }, // 19
				{0.0, 0.0, 0.5, 0.5, 0.0, 0.0, 0.0 }, // 13
				{0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0 }, // 3
				{0.0, 0.0, 0.0, 0.5, 0.5, 0.0, 0.0 }, // 14
		}
};

/*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*/

const double HemiHex7RefinementPattern8HHex7_14Pr_9HHex5_7Hex ::_refine_matrix_1[8][7][7] = {
				// haut
		{
				// 0     1     2     3     4     5     6
				{0.333, 0.0, 0.0, 0.0, 0.666, 0.0, 0.0 }, // 12
				{0.222, 0.037, 0.074, 0.148, 0.296, 0.148, 0.074, }, // 52
				{0.222, 0.0, 0.111, 0.222, 0.444, 0.0, 0.0 }, // 37
				{0.0, 0.0, 0.0, 0.333, 0.666, 0.0, 0.0 }, // 22
				{0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0 }, // 4
				{0.0, 0.0, 0.0, 0.0, 0.666, 0.333, 0.0 }, // 25
				{0.0, 0.0, 0.0, 0.222, 0.444, 0.222, 0.111}, // 49
		},
		{
				// 0     1     2     3     4     5     6
				{0.444, 0.0, 0.222, 0.111, 0.222, 0.0, 0.0 }, // 35
				{0.222, 0.148, 0.296, 0.148, 0.074, 0.037, 0.074, }, // 51
				{0.222, 0.0, 0.444, 0.222, 0.111, 0.0, 0.0 }, // 36
				{0.111, 0.0, 0.222, 0.444, 0.222, 0.0, 0.0 }, // 38
				{0.222, 0.0, 0.111, 0.222, 0.444, 0.0, 0.0 }, // 37
				{0.222, 0.037, 0.074, 0.148, 0.296, 0.148, 0.074, }, // 52
				{0.111, 0.074, 0.148, 0.296, 0.148, 0.074, 0.148, }, // 53
		},
		{
				// 0     1     2     3     4     5     6
				{0.333, 0.0, 0.666, 0.0, 0.0, 0.0, 0.0 }, // 10
				{0.0, 0.333, 0.666, 0.0, 0.0, 0.0, 0.0 }, // 16
				{0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0 }, // 2
				{0.0, 0.0, 0.666, 0.333, 0.0, 0.0, 0.0 }, // 19
				{0.222, 0.0, 0.444, 0.222, 0.111, 0.0, 0.0 }, // 36
				{0.222, 0.148, 0.296, 0.148, 0.074, 0.037, 0.074, }, // 51
				{0.0, 0.222, 0.444, 0.222, 0.0, 0.0, 0.111 }, // 47
		},
				// milieu
		{
				// 0     1     2     3     4     5     6
				{0.333, 0.0, 0.0, 0.0, 0.333, 0.333, 0.0 }, // 30
				{0.222, 0.074, 0.037, 0.074, 0.148, 0.296, 0.148 }, // 45
				{0.222, 0.037, 0.074, 0.148, 0.296, 0.148, 0.074 }, // 52
				{0.0, 0.0, 0.0, 0.222, 0.444, 0.222, 0.111}, // 49
				{0.0, 0.0, 0.0, 0.0, 0.666, 0.333, 0.0 }, // 25
				{0.0, 0.0, 0.0, 0.0, 0.333, 0.666, 0.0 }, // 26
				{0.0, 0.0, 0.0, 0.111, 0.222, 0.444, 0.222 }, // 41
		},
		{
				// 0     1     2     3     4     5     6
				{0.333, 0.333, 0.333, 0.0, 0.0, 0.0, 0.0 }, // 29
				{0.0, 0.666, 0.333, 0.0, 0.0, 0.0, 0.0 }, // 15
				{0.0, 0.333, 0.666, 0.0, 0.0, 0.0, 0.0 }, // 16
				{0.0, 0.222, 0.444, 0.222, 0.0, 0.0, 0.111 }, // 47
				{0.222, 0.148, 0.296, 0.148, 0.074, 0.037, 0.074 }, // 51
				{0.222, 0.296, 0.148, 0.074, 0.037, 0.074, 0.148 }, // 44
				{0.0, 0.444, 0.222, 0.111, 0.0, 0.0, 0.222 }, // 39
		},
				// bas
		{
				// 0     1     2     3     4     5     6
				{1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 }, // 0
				{0.666, 0.333, 0.0, 0.0, 0.0, 0.0, 0.0 }, // 7
				{0.666, 0.0, 0.333, 0.0, 0.0, 0.0, 0.0 }, // 9
				{0.444, 0.148, 0.074, 0.037, 0.074, 0.148, 0.074 }, // 43
				{0.666, 0.0, 0.0, 0.0, 0.333, 0.0, 0.0 }, // 11
				{0.666, 0.0, 0.0, 0.0, 0.0, 0.333, 0.0 }, // 13
				{0.444, 0.222, 0.0, 0.0, 0.0, 0.222, 0.111 }, // 31
		},
		{
				// 0     1     2     3     4     5     6
				{0.444, 0.222, 0.0, 0.0, 0.0, 0.222, 0.111 }, // 31
				{0.222, 0.444, 0.0, 0.0, 0.0, 0.111, 0.222 }, // 32
				{0.222, 0.296, 0.148, 0.074, 0.037, 0.074, 0.148 }, // 44
				{0.111, 0.148, 0.074, 0.148, 0.074, 0.148, 0.296 }, // 46
				{0.222, 0.074, 0.037, 0.074, 0.148, 0.296, 0.148 }, // 45
				{0.222, 0.111, 0.0, 0.0, 0.0, 0.444, 0.222 }, // 33
				{0.111, 0.222, 0.0, 0.0, 0.0, 0.222, 0.444 }, // 34
		},
		{
				// 0     1     2     3     4     5     6
				{0.111, 0.222, 0.0, 0.0, 0.0, 0.222, 0.444 }, // 34
				{0.0, 0.333, 0.0, 0.0, 0.0, 0.0, 0.666 }, // 18
				{0.0, 0.222, 0.111, 0.222, 0.0, 0.0, 0.444 }, // 40
				{0.0, 0.0, 0.0, 0.333, 0.0, 0.0, 0.666}, // 24
				{0.0, 0.0, 0.0, 0.222, 0.111, 0.222, 0.444 }, // 42
				{0.0, 0.0, 0.0, 0.0, 0.0, 0.333, 0.666}, // 28
				{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0 }, // 6
		}
};

//
const double HemiHex7RefinementPattern8HHex7_14Pr_9HHex5_7Hex ::_refine_matrix_2[14][6][7] = { /* const */
				// milieu: 2
	{
				// 0     1     2     3     4     5     6
				{0.666, 0.0, 0.0, 0.0, 0.333, 0.0, 0.0 }, // 11
				{0.444, 0.0, 0.222, 0.111, 0.222, 0.0, 0.0 }, // 35
				{0.444, 0.148, 0.074, 0.037, 0.074, 0.148, 0.074 }, // 43
				{0.333, 0.0, 0.0, 0.0, 0.333, 0.333, 0.0 }, // 30
				{0.222, 0.037, 0.074, 0.148, 0.296, 0.148, 0.074 }, // 52
				{0.222, 0.074, 0.037, 0.074, 0.148, 0.296, 0.148 }, // 45
		},
				// bas: 12
		{
				// 0     1     2     3     4     5     6
				{0.444, 0.148, 0.074, 0.037, 0.074, 0.148, 0.074 }, // 43
				{0.666, 0.0, 0.333, 0.0, 0.0, 0.0, 0.0 }, // 9
				{0.444, 0.0, 0.222, 0.111, 0.222, 0.0, 0.0 }, // 35
				{0.222, 0.296, 0.148, 0.074, 0.037, 0.074, 0.148 }, // 44
				{0.333, 0.333, 0.333, 0.0, 0.0, 0.0, 0.0 }, // 29
				{0.222, 0.148, 0.296, 0.148, 0.074, 0.037, 0.074 }, // 51
		},
		{
				// 0     1     2     3     4     5     6
				{0.0, 0.0, 0.0, 0.0, 0.0, 0.666, 0.333}, // 27
				{0.222, 0.111, 0.0, 0.0, 0.0, 0.444, 0.222 }, // 33
				{0.0, 0.0, 0.0, 0.111, 0.222, 0.444, 0.222 }, // 41
				{0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0 }, // 5
				{0.333, 0.0, 0.0, 0.0, 0.0, 0.666, 0.0 }, // 14
				{0.0, 0.0, 0.0, 0.0, 0.333, 0.666, 0.0 }, // 26
		},
		{
				// 0     1     2     3     4     5     6
				{0.0, 0.0, 0.0, 0.111, 0.222, 0.444, 0.222 }, // 41
				{0.222, 0.111, 0.0, 0.0, 0.0, 0.444, 0.222 }, // 33
				{0.222, 0.074, 0.037, 0.074, 0.148, 0.296, 0.148 }, // 45
				{0.0, 0.0, 0.0, 0.0, 0.333, 0.666, 0.0 }, // 26
				{0.333, 0.0, 0.0, 0.0, 0.0, 0.666, 0.0 }, // 14
				{0.333, 0.0, 0.0, 0.0, 0.333, 0.333, 0.0 }, // 30
		},
		{
				// 0     1     2     3     4     5     6
				{0.0, 0.0, 0.0, 0.0, 0.0, 0.333, 0.666}, // 28
				{0.111, 0.222, 0.0, 0.0, 0.0, 0.222, 0.444 }, // 34
				{0.0, 0.0, 0.0, 0.222, 0.111, 0.222, 0.444 }, // 42
				{0.0, 0.0, 0.0, 0.0, 0.0, 0.666, 0.333}, // 27
				{0.222, 0.111, 0.0, 0.0, 0.0, 0.444, 0.222 }, // 33
				{0.0, 0.0, 0.0, 0.111, 0.222, 0.444, 0.222 }, // 41
		},
		{
				// 0     1     2     3     4     5     6
				{0.0, 0.0, 0.0, 0.222, 0.111, 0.222, 0.444 }, // 42
				{0.111, 0.222, 0.0, 0.0, 0.0, 0.222, 0.444 }, // 34
				{0.111, 0.148, 0.074, 0.148, 0.074, 0.148, 0.296 }, // 46
				{0.0, 0.0, 0.0, 0.111, 0.222, 0.444, 0.222 }, // 41
				{0.222, 0.111, 0.0, 0.0, 0.0, 0.444, 0.222 }, // 33
				{0.222, 0.074, 0.037, 0.074, 0.148, 0.296, 0.148 }, // 45
		},
		{
				// 0     1     2     3     4     5     6
				{0.444, 0.222, 0.0, 0.0, 0.0, 0.222, 0.111 }, // 31
				{0.222, 0.444, 0.0, 0.0, 0.0, 0.111, 0.222 }, // 32
				{0.222, 0.296, 0.148, 0.074, 0.037, 0.074, 0.148 }, // 44
				{0.666, 0.333, 0.0, 0.0, 0.0, 0.0, 0.0 }, // 7
				{0.333, 0.666, 0.0, 0.0, 0.0, 0.0, 0.0 }, // 8
				{0.333, 0.333, 0.333, 0.0, 0.0, 0.0, 0.0 }, // 29
		},
		{
				// 0     1     2     3     4     5     6
				{0.444, 0.222, 0.0, 0.0, 0.0, 0.222, 0.111 }, // 31
				{0.222, 0.296, 0.148, 0.074, 0.037, 0.074, 0.148 }, // 44
				{0.444, 0.148, 0.074, 0.037, 0.074, 0.148, 0.074 }, // 43
				{0.666, 0.333, 0.0, 0.0, 0.0, 0.0, 0.0 }, // 7
				{0.333, 0.333, 0.333, 0.0, 0.0, 0.0, 0.0 }, // 29
				{0.666, 0.0, 0.333, 0.0, 0.0, 0.0, 0.0 }, // 9
		},
		{
				// 0     1     2     3     4     5     6
				{0.222, 0.111, 0.0, 0.0, 0.0, 0.444, 0.222 }, // 33
				{0.444, 0.222, 0.0, 0.0, 0.0, 0.222, 0.111 }, // 31
				{0.222, 0.074, 0.037, 0.074, 0.148, 0.296, 0.148 }, // 45
				{0.333, 0.0, 0.0, 0.0, 0.0, 0.666, 0.0 }, // 14
				{0.666, 0.0, 0.0, 0.0, 0.0, 0.333, 0.0 }, // 13
				{0.333, 0.0, 0.0, 0.0, 0.333, 0.333, 0.0 }, // 30
		},
		{
				// 0     1     2     3     4     5     6
				{0.222, 0.074, 0.037, 0.074, 0.148, 0.296, 0.148 }, // 45
				{0.444, 0.222, 0.0, 0.0, 0.0, 0.222, 0.111 }, // 31
				{0.444, 0.148, 0.074, 0.037, 0.074, 0.148, 0.074 }, // 43
				{0.333, 0.0, 0.0, 0.0, 0.333, 0.333, 0.0 }, // 30
				{0.666, 0.0, 0.0, 0.0, 0.0, 0.333, 0.0 }, // 13
				{0.666, 0.0, 0.0, 0.0, 0.333, 0.0, 0.0 }, // 11
		},
		{
				// 0     1     2     3     4     5     6
				{0.222, 0.444, 0.0, 0.0, 0.0, 0.111, 0.222 }, // 32
				{0.0, 0.666, 0.0, 0.0, 0.0, 0.0, 0.333 }, // 17
				{0.0, 0.444, 0.222, 0.111, 0.0, 0.0, 0.222 }, // 39
				{0.333, 0.666, 0.0, 0.0, 0.0, 0.0, 0.0 }, // 8
				{0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0 }, // 1
				{0.0, 0.666, 0.333, 0.0, 0.0, 0.0, 0.0 }, // 15
		},
		{
				// 0     1     2     3     4     5     6
				{0.222, 0.444, 0.0, 0.0, 0.0, 0.111, 0.222 }, // 32
				{0.0, 0.444, 0.222, 0.111, 0.0, 0.0, 0.222 }, // 39
				{0.222, 0.296, 0.148, 0.074, 0.037, 0.074, 0.148 }, // 44
				{0.333, 0.666, 0.0, 0.0, 0.0, 0.0, 0.0 }, // 8
				{0.0, 0.666, 0.333, 0.0, 0.0, 0.0, 0.0 }, // 15
				{0.333, 0.333, 0.333, 0.0, 0.0, 0.0, 0.0 }, // 29
		},
		{
				// 0     1     2     3     4     5     6
				{0.111, 0.222, 0.0, 0.0, 0.0, 0.222, 0.444 }, // 34
				{0.0, 0.333, 0.0, 0.0, 0.0, 0.0, 0.666 }, // 18
				{0.0, 0.222, 0.111, 0.222, 0.0, 0.0, 0.444 }, // 40
				{0.222, 0.444, 0.0, 0.0, 0.0, 0.111, 0.222 }, // 32
				{0.0, 0.666, 0.0, 0.0, 0.0, 0.0, 0.333 }, // 17
				{0.0, 0.444, 0.222, 0.111, 0.0, 0.0, 0.222 }, // 39
		},
		{
				// 0     1     2     3     4     5     6
				{0.111, 0.222, 0.0, 0.0, 0.0, 0.222, 0.444 }, // 34
				{0.0, 0.222, 0.111, 0.222, 0.0, 0.0, 0.444 }, // 40
				{0.111, 0.148, 0.074, 0.148, 0.074, 0.148, 0.296 }, // 46
				{0.222, 0.444, 0.0, 0.0, 0.0, 0.111, 0.222 }, // 32
				{0.0, 0.444, 0.222, 0.111, 0.0, 0.0, 0.222 }, // 39
				{0.222, 0.296, 0.148, 0.074, 0.037, 0.074, 0.148 }, // 44
		}
};

//
const double HemiHex7RefinementPattern8HHex7_14Pr_9HHex5_7Hex ::_refine_matrix_3[9][5][7] = { /* const */
				// haut: 2
		{
				// 0     1     2     3     4     5     6
				{0.444, 0.0, 0.222, 0.111, 0.222, 0.0, 0.0 }, // 35
				{0.222, 0.037, 0.074, 0.148, 0.296, 0.148, 0.074, }, // 52
				{0.222, 0.0, 0.111, 0.222, 0.444, 0.0, 0.0 }, // 37
				{0.333, 0.0, 0.0, 0.0, 0.666, 0.0, 0.0 }, // 12
				{0.666, 0.0, 0.0, 0.0, 0.333, 0.0, 0.0 }, // 11
		},
		{
				// 0     1     2     3     4     5     6
				{0.333, 0.0, 0.666, 0.0, 0.0, 0.0, 0.0 }, // 10
				{0.222, 0.148, 0.296, 0.148, 0.074, 0.037, 0.074, }, // 51
				{0.222, 0.0, 0.444, 0.222, 0.111, 0.0, 0.0 }, // 36
				{0.444, 0.0, 0.222, 0.111, 0.222, 0.0, 0.0 }, // 35
				{0.666, 0.0, 0.333, 0.0, 0.0, 0.0, 0.0 }, // 9
		},
				// milieu: 5
		{
				// 0     1     2     3     4     5     6
				{0.222, 0.037, 0.074, 0.148, 0.296, 0.148, 0.074 }, // 52
				{0.333, 0.0, 0.0, 0.0, 0.666, 0.0, 0.0 }, // 12
				{0.333, 0.0, 0.0, 0.0, 0.333, 0.333, 0.0 }, // 30
				{0.0, 0.0, 0.0, 0.0, 0.666, 0.333, 0.0 }, // 25
				{0.0, 0.0, 0.0, 0.222, 0.444, 0.222, 0.111}, // 49
		},
		{
				// 0     1     2     3     4     5     6
				{0.666, 0.0, 0.0, 0.0, 0.333, 0.0, 0.0 }, // 11
				{0.333, 0.0, 0.0, 0.0, 0.666, 0.0, 0.0 }, // 12
				{0.333, 0.0, 0.0, 0.0, 0.333, 0.333, 0.0 }, // 30
				{0.222, 0.037, 0.074, 0.148, 0.296, 0.148, 0.074 }, // 52
				{0.444, 0.0, 0.222, 0.111, 0.222, 0.0, 0.0 }, // 35
		},
		{
				// 0     1     2     3     4     5     6
				{0.666, 0.0, 0.333, 0.0, 0.0, 0.0, 0.0 }, // 9
				{0.444, 0.148, 0.074, 0.037, 0.074, 0.148, 0.074 }, // 43
				{0.444, 0.0, 0.222, 0.111, 0.222, 0.0, 0.0 }, // 35
				{0.666, 0.0, 0.0, 0.0, 0.333, 0.0, 0.0 }, // 11
				{1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 }, // 0
		},
		{
				// 0     1     2     3     4     5     6
				{0.0, 0.333, 0.666, 0.0, 0.0, 0.0, 0.0 }, // 16
				{0.333, 0.0, 0.666, 0.0, 0.0, 0.0, 0.0 }, // 10
				{0.333, 0.333, 0.333, 0.0, 0.0, 0.0, 0.0 }, // 29
				{0.222, 0.148, 0.296, 0.148, 0.074, 0.037, 0.074 }, // 51
				{0.0, 0.222, 0.444, 0.222, 0.0, 0.0, 0.111 }, // 47
		},
		{
				// 0     1     2     3     4     5     6
				{0.666, 0.0, 0.333, 0.0, 0.0, 0.0, 0.0 }, // 9
				{0.333, 0.0, 0.666, 0.0, 0.0, 0.0, 0.0 }, // 10
				{0.333, 0.333, 0.333, 0.0, 0.0, 0.0, 0.0 }, // 29
				{0.222, 0.148, 0.296, 0.148, 0.074, 0.037, 0.074 }, // 51
				{0.444, 0.0, 0.222, 0.111, 0.222, 0.0, 0.0 }, // 35

		},
				// bas: 2
		{
				// 0     1     2     3     4     5     6
				{0.222, 0.296, 0.148, 0.074, 0.037, 0.074, 0.148 }, // 44
				{0.444, 0.148, 0.074, 0.037, 0.074, 0.148, 0.074 }, // 43
				{0.444, 0.222, 0.0, 0.0, 0.0, 0.222, 0.111 }, // 31
				{0.222, 0.074, 0.037, 0.074, 0.148, 0.296, 0.148 }, // 45
				{0.111, 0.148, 0.074, 0.148, 0.074, 0.148, 0.296 }, // 46
		},
		{
				// 0     1     2     3     4     5     6
				{0.0, 0.222, 0.111, 0.222, 0.0, 0.0, 0.444 }, // 40
				{0.111, 0.148, 0.074, 0.148, 0.074, 0.148, 0.296 }, // 46
				{0.111, 0.222, 0.0, 0.0, 0.0, 0.222, 0.444 }, // 34
				{0.0, 0.0, 0.0, 0.222, 0.111, 0.222, 0.444 }, // 42
				{0.0, 0.0, 0.0, 0.333, 0.0, 0.0, 0.666}, // 24

		}
};

//
const double HemiHex7RefinementPattern8HHex7_14Pr_9HHex5_7Hex ::_refine_matrix_4[7][8][7] = { /* const */
//				haut: 3
		{
				// 0     1     2     3     4     5     6
				{0.0, 0.0, 0.0, 0.222, 0.444, 0.222, 0.111}, // 49
				{0.222, 0.037, 0.074, 0.148, 0.296, 0.148, 0.074, }, // 52
				{0.111, 0.074, 0.148, 0.296, 0.148, 0.074, 0.148, }, // 53
				{0.0, 0.0, 0.0, 0.444, 0.222, 0.111, 0.222}, // 50
				{0.0, 0.0, 0.0, 0.333, 0.666, 0.0, 0.0 }, // 22
				{0.222, 0.0, 0.111, 0.222, 0.444, 0.0, 0.0 }, // 37
				{0.111, 0.0, 0.222, 0.444, 0.222, 0.0, 0.0 }, // 38
				{0.0, 0.0, 0.0, 0.666, 0.333, 0.0, 0.0 }, // 21
		},
		{
				// 0     1     2     3     4     5     6
				{0.0, 0.0, 0.0, 0.444, 0.222, 0.111, 0.222}, // 50
				{0.111, 0.074, 0.148, 0.296, 0.148, 0.074, 0.148, }, // 53
				{0.0, 0.111, 0.222, 0.444, 0.0, 0.0, 0.222 }, // 48
				{0.0, 0.0, 0.0, 0.666, 0.0, 0.0, 0.333}, // 23
				{0.0, 0.0, 0.0, 0.666, 0.333, 0.0, 0.0 }, // 21
				{0.111, 0.0, 0.222, 0.444, 0.222, 0.0, 0.0 }, // 38
				{0.0, 0.0, 0.333, 0.666, 0.0, 0.0, 0.0 }, // 20
				{0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0 }, // 3
		},
		{
				// 0     1     2     3     4     5     6
				{0.111, 0.074, 0.148, 0.296, 0.148, 0.074, 0.148, }, // 53
				{0.222, 0.148, 0.296, 0.148, 0.074, 0.037, 0.074, }, // 51
				{0.0, 0.222, 0.444, 0.222, 0.0, 0.0, 0.111 }, // 47
				{0.0, 0.111, 0.222, 0.444, 0.0, 0.0, 0.222 }, // 48
				{0.111, 0.0, 0.222, 0.444, 0.222, 0.0, 0.0 }, // 38
				{0.222, 0.0, 0.444, 0.222, 0.111, 0.0, 0.0 }, // 36
				{0.0, 0.0, 0.666, 0.333, 0.0, 0.0, 0.0 }, // 19
				{0.0, 0.0, 0.333, 0.666, 0.0, 0.0, 0.0 }, // 20
		},
				// milieu: 4
		{
				// 0     1     2     3     4     5     6
				{0.0, 0.0, 0.0, 0.111, 0.222, 0.444, 0.222 }, // 41
				{0.222, 0.074, 0.037, 0.074, 0.148, 0.296, 0.148 }, // 45
				{0.111, 0.148, 0.074, 0.148, 0.074, 0.148, 0.296 }, // 46
				{0.0, 0.0, 0.0, 0.222, 0.111, 0.222, 0.444 }, // 42
				{0.0, 0.0, 0.0, 0.222, 0.444, 0.222, 0.111}, // 49
				{0.222, 0.037, 0.074, 0.148, 0.296, 0.148, 0.074 }, // 52
				{0.111, 0.074, 0.148, 0.296, 0.148, 0.074, 0.148 }, // 53
				{0.0, 0.0, 0.0, 0.444, 0.222, 0.111, 0.222}, // 50
		},
		{
				// 0     1     2     3     4     5     6
				{0.222, 0.074, 0.037, 0.074, 0.148, 0.296, 0.148 }, // 45
				{0.444, 0.148, 0.074, 0.037, 0.074, 0.148, 0.074 }, // 43
				{0.222, 0.296, 0.148, 0.074, 0.037, 0.074, 0.148 }, // 44
				{0.111, 0.148, 0.074, 0.148, 0.074, 0.148, 0.296 }, // 46
				{0.222, 0.037, 0.074, 0.148, 0.296, 0.148, 0.074 }, // 52
				{0.444, 0.0, 0.222, 0.111, 0.222, 0.0, 0.0 }, // 35
				{0.222, 0.148, 0.296, 0.148, 0.074, 0.037, 0.074 }, // 51
				{0.111, 0.074, 0.148, 0.296, 0.148, 0.074, 0.148 }, // 53
		},
		{
				// 0     1     2     3     4     5     6
				{0.0, 0.0, 0.0, 0.222, 0.111, 0.222, 0.444 }, // 42
				{0.111, 0.148, 0.074, 0.148, 0.074, 0.148, 0.296 }, // 46
				{0.0, 0.222, 0.111, 0.222, 0.0, 0.0, 0.444 }, // 40
				{0.0, 0.0, 0.0, 0.333, 0.0, 0.0, 0.666}, // 24
				{0.0, 0.0, 0.0, 0.444, 0.222, 0.111, 0.222}, // 50
				{0.111, 0.074, 0.148, 0.296, 0.148, 0.074, 0.148 }, // 53
				{0.0, 0.111, 0.222, 0.444, 0.0, 0.0, 0.222 }, // 48
				{0.0, 0.0, 0.0, 0.666, 0.0, 0.0, 0.333}, // 23
		},
		{
				// 0     1     2     3     4     5     6
				{0.111, 0.148, 0.074, 0.148, 0.074, 0.148, 0.296 }, // 46
				{0.222, 0.296, 0.148, 0.074, 0.037, 0.074, 0.148 }, // 44
				{0.0, 0.444, 0.222, 0.111, 0.0, 0.0, 0.222 }, // 39
				{0.0, 0.222, 0.111, 0.222, 0.0, 0.0, 0.444 }, // 40
				{0.111, 0.074, 0.148, 0.296, 0.148, 0.074, 0.148 }, // 53
				{0.222, 0.148, 0.296, 0.148, 0.074, 0.037, 0.074 }, // 51
				{0.0, 0.222, 0.444, 0.222, 0.0, 0.0, 0.111 }, // 47
				{0.0, 0.111, 0.222, 0.444, 0.0, 0.0, 0.222 }, // 48
		}
};

/*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*/

const double AntiWedgeLeft6RefinementPattern4Hex_4HHex7 ::_refine_matrix_1[4][8][6] = {
    {
                    //0   1     2   3     4   5
                    {0.5, 0.0, 0.5, 0.0, 0.0, 0.0}, // 8
                    {1.0, 0.0, 0.0, 0.0, 0.0, 0.0}, // 0
                    {0.5, 0.5, 0.0, 0.0, 0.0, 0.0}, // 6
                    {0.25, 0.25, 0.5, 0.0, 0.0, 0.0}, // 21
                    {0.25, 0.0, 0.25, 0.25, 0.0, 0.25}, // 18
                    {0.5, 0.0, 0.0, 0.5, 0.0, 0.0}, // 15
                    {0.25, 0.25, 0.0, 0.25, 0.25, 0.0}, // 19
                    {0.125, 0.25, 0.125, 0.125, 0.125, 0.25}, // 22
    },
    {
                     //0    1   2     3    4   5
                    {0.25, 0.0, 0.25, 0.25, 0.0, 0.25}, // 18
                    {0.5, 0.0, 0.0, 0.5, 0.0, 0.0}, // 15
                    {0.25, 0.25, 0.0, 0.25, 0.25, 0.0}, // 19
                    {0.125, 0.25, 0.125, 0.125, 0.125, 0.25}, // 22
                    {0.0, 0.0, 0.0, 0.5, 0.0, 0.5}, // 9
                    {0.0, 0.0, 0.0, 1.0, 0.0, 0.0}, // 3
                    {0.0, 0.0, 0.0, 0.5, 0.5, 0.0}, // 10
                    {0.0, 0.0, 0.0, 0.25, 0.5, 0.25}, // 20
    },
    {
                    //0    1   2     3    4   5
                    {0.0, 0.0, 0.5, 0.0, 0.0, 0.5}, // 14
                    {0.25, 0.0, 0.25, 0.25, 0.0, 0.25}, // 18
                    {0.125, 0.25, 0.125, 0.125, 0.125, 0.25}, // 22
                    {0.0, 0.0, 0.5, 0.0, 0.25, 0.25}, // 17
                    {0.0, 0.0, 0.0, 0.0, 0.0, 1.0}, // 5
                    {0.0, 0.0, 0.0, 0.5, 0.0, 0.5}, // 9
                    {0.0, 0.0, 0.0, 0.25, 0.5, 0.25}, // 20
                    {0.0, 0.0, 0.0, 0.0, 0.5, 0.5}, // 11
    },
    {
                    //0    1   2     3    4   5
                    {0.0, 1.0, 0.0, 0.0, 0.0, 0.0}, // 1
                    {0.0, 0.5, 0.5, 0.0, 0.0, 0.0}, // 7
                    {0.25, 0.25, 0.5, 0.0, 0.0, 0.0}, // 21
                    {0.5, 0.5, 0.0, 0.0, 0.0, 0.0}, // 6
                    {0.0, 0.5, 0.0, 0.0, 0.5, 0.0}, // 12
                    {0.0, 0.25, 0.25, 0.0, 0.5, 0.0}, // 16
                    {0.125, 0.25, 0.125, 0.125, 0.125, 0.25}, // 22
                    {0.25, 0.25, 0.0, 0.25, 0.25, 0.0}, // 19
    },
};
const Integer AntiWedgeLeft6RefinementPattern4Hex_4HHex7 ::_face_mapping_1[4][6] = {
                 //  0  1  2  3  4  5
                    {0, 5, 1, 3, 2, 4},
                    {0, 5, 1, 3, 2, 4},
                    {0, 5, 4, 3, 2, 1},
                    {5, 2, 3, 0, 4, 1},
};
const Integer AntiWedgeLeft6RefinementPattern4Hex_4HHex7 ::_face_mapping_topo_1[4][6] = {
                 //  0  1  2  3  4  5
                    {1, 0, 1, 0, 1, 0},
                    {0, 0, 1, 1, 1, 0},
                    {0, 1, 1, 1, 0, 0},
                    {1, 1, 1, 0, 0, 0},
};
//
const double AntiWedgeLeft6RefinementPattern4Hex_4HHex7 ::_refine_matrix_2[4][7][6] = {
    {
                    //0    1   2     3    4   5
                    {0.0, 0.0, 1.0, 0.0, 0.0, 0.0}, // 2
                    {0.0, 0.0, 0.5, 0.0, 0.0, 0.5}, // 14
                    {0.0, 0.0, 0.5, 0.0, 0.25, 0.25}, // 17
                    {0.125, 0.25, 0.125, 0.125, 0.125, 0.25}, // 22
                    {0.25, 0.25, 0.5, 0.0, 0.0, 0.0}, // 21
                    {0.5, 0.0, 0.5, 0.0, 0.0, 0.0}, // 8
                    {0.25, 0.0, 0.25, 0.25, 0.0, 0.25}, // 18
    },
    {
                    //0    1   2     3    4   5
                    {0.0, 0.0, 1.0, 0.0, 0.0, 0.0}, // 2
                    {0.0, 0.0, 0.5, 0.0, 0.25, 0.25}, // 17
                    {0.0, 0.0, 0.5, 0.0, 0.5, 0.0}, // 13
                    {0.0, 0.25, 0.25, 0.0, 0.5, 0.0}, // 16
                    {0.0, 0.5, 0.5, 0.0, 0.0, 0.0}, // 7
                    {0.25, 0.25, 0.5, 0.0, 0.0, 0.0}, // 21
                    {0.125, 0.25, 0.125, 0.125, 0.125, 0.25}, // 22
    },
    {
                    //0    1   2     3    4   5
                    {0.0, 0.0, 0.0, 0.0, 1.0, 0.0}, // 4
                    {0.0, 0.0, 0.0, 0.25, 0.5, 0.25}, // 20
                    {0.0, 0.0, 0.0, 0.5, 0.5, 0.0}, // 10
                    {0.25, 0.25, 0.0, 0.25, 0.25, 0.0}, // 19
                    {0.0, 0.5, 0.0, 0.0, 0.5, 0.0}, // 12
                    {0.0, 0.25, 0.25, 0.0, 0.5, 0.0}, // 16
                    {0.125, 0.25, 0.125, 0.125, 0.125, 0.25}, // 22
    },
    {
                    //0    1   2     3    4   5
                    {0.0, 0.0, 0.0, 0.0, 1.0, 0.0}, // 4
                    {0.0, 0.25, 0.25, 0.0, 0.5, 0.0}, // 16
                    {0.0, 0.0, 0.5, 0.0, 0.5, 0.0}, // 13
                    {0.0, 0.0, 0.5, 0.0, 0.25, 0.25}, // 17
                    {0.0, 0.0, 0.0, 0.0, 0.5, 0.5}, // 11
                    {0.0, 0.0, 0.0, 0.25, 0.5, 0.25}, // 20
                    {0.125, 0.25, 0.125, 0.125, 0.125, 0.25}, // 22
    }
};
const Integer AntiWedgeLeft6RefinementPattern4Hex_4HHex7 ::_face_mapping_2[4][6] = {
                 //  0  1  2  3  4  5
                    {5, 4, 1, 0, 3, 2},
                    {5, 4, 1, 0, 3, 2},
                    {3, 2, 5, 4, 1, 0},
                    {4, 5, 2, 3, 0, 1},
};
const Integer AntiWedgeLeft6RefinementPattern4Hex_4HHex7 ::_face_mapping_topo_2[4][6] = {
                 //  0  1  2  3  4  5
                    {1, 0, 1, 1, 0, 0},
                    {1, 1, 0, 1, 0, 0},
                    {1, 1, 0, 1, 0, 0},
                    {1, 1, 0, 1, 0, 0},
};
/*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*/

const double AntiWedgeLeft6RefinementPattern4AWL6_4Pr ::_refine_matrix_1[4][6][6] = {
		{
				//  0     1     2     3     4	5
				{0.25, 0.25, 0.0, 0.25, 0.25, 0.0}, // 16
				{0.0, 0.5, 0.0, 0.0, 0.5, 0.0 }, // 10
				{0.0, 0.0, 0.5, 0.0, 0.5, 0.0}, // 17
				{0.0, 0.0, 0.0, 0.5, 0.5, 0.0 }, // 12
				{0.0, 0.0, 0.0, 0.0, 1.0, 0.0 }, // 4
				{0.0, 0.0, 0.0, 0.0, 0.5, 0.5 }, // 14
		},
		{
				// 0     1     2     3     4     5
				{0.5, 0.5, 0.0, 0.0, 0.0, 0.0 }, // 6
				{0.0, 1.0, 0.0, 0.0, 0.0, 0.0 }, // 1
				{0.0, 0.5, 0.5, 0.0, 0.0, 0.0 }, // 9
				{0.25, 0.25, 0.0, 0.25, 0.25, 0.0}, // 16
				{0.0, 0.5, 0.0, 0.0, 0.5, 0.0 }, // 10
				{0.0, 0.0, 0.5, 0.0, 0.5, 0.0}, // 17
		},
		{
				// 0     1     2     3     4     5
				{0.25, 0.0, 0.25, 0.25, 0.0, 0.25}, // 15
				{0.0, 0.0, 0.5, 0.0, 0.5, 0.0}, // 17
				{0.0, 0.0, 0.5, 0.0, 0.0, 0.5 }, // 11
				{0.0, 0.0, 0.0, 0.5, 0.0, 0.5 }, // 13
				{0.0, 0.0, 0.0, 0.0, 0.5, 0.5 }, // 14
				{0.0, 0.0, 0.0, 0.0, 0.0, 1.0 }, // 5
		},
		{
				// 0     1     2     3     4     5
				{0.5, 0.0, 0.5, 0.0, 0.0, 0.0 }, // 7
				{0.0, 0.5, 0.5, 0.0, 0.0, 0.0 }, // 9
				{0.0, 0.0, 1.0, 0.0, 0.0, 0.0 }, // 2
				{0.25, 0.0, 0.25, 0.25, 0.0, 0.25}, // 15
				{0.0, 0.0, 0.5, 0.0, 0.5, 0.0}, // 17
				{0.0, 0.0, 0.5, 0.0, 0.0, 0.5 }, // 11
		}
};

//
const double AntiWedgeLeft6RefinementPattern4AWL6_4Pr ::_refine_matrix_2[4][6][6] = { /* const */
		{
				//  0     1     2     3     4    5
				{0.25, 0.25, 0.0, 0.25, 0.25, 0.0}, // 16
				{0.0, 0.0, 0.5, 0.0, 0.5, 0.0}, // 17
				{0.25, 0.0, 0.25, 0.25, 0.0, 0.25}, // 15
				{0.0, 0.0, 0.0, 0.5, 0.5, 0.0 }, // 12
				{0.0, 0.0, 0.0, 0.0, 0.5, 0.5 }, // 14
				{0.0, 0.0, 0.0, 0.5, 0.0, 0.5 }, // 13
		},
		{
				// 0     1     2     3     4     5
				{0.5, 0.0, 0.5, 0.0, 0.0, 0.0 }, // 7
				{0.5, 0.5, 0.0, 0.0, 0.0, 0.0 }, // 6
				{0.0, 0.5, 0.5, 0.0, 0.0, 0.0 }, // 9
				{0.25, 0.0, 0.25, 0.25, 0.0, 0.25}, // 15
				{0.25, 0.25, 0.0, 0.25, 0.25, 0.0}, // 16
				{0.0, 0.0, 0.5, 0.0, 0.5, 0.0}, // 17
		},
		{
				// 0     1     2     3     4     5
				{1.0, 0.0, 0.0, 0.0, 0.0, 0.0 }, // 0
				{0.5, 0.5, 0.0, 0.0, 0.0, 0.0 }, // 6
				{0.5, 0.0, 0.5, 0.0, 0.0, 0.0 }, // 7
				{0.5, 0.0, 0.0, 0.5, 0.0, 0.0 }, // 8
				{0.25, 0.25, 0.0, 0.25, 0.25, 0.0}, // 16
				{0.25, 0.0, 0.25, 0.25, 0.0, 0.25}, // 15
		},
		{
				// 0     1     2     3     4     5
				{0.5, 0.0, 0.0, 0.5, 0.0, 0.0 }, // 8
				{0.25, 0.25, 0.0, 0.25, 0.25, 0.0}, // 16
				{0.25, 0.0, 0.25, 0.25, 0.0, 0.25}, // 15
				{0.0, 0.0, 0.0, 1.0, 0.0, 0.0 }, // 3
				{0.0, 0.0, 0.0, 0.5, 0.5, 0.0 }, // 12
				{0.0, 0.0, 0.0, 0.5, 0.0, 0.5 }, // 13

		}
};

/*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*/

const double AntiWedgeLeft6RefinementPattern9AWL6_18Pr ::_refine_matrix_1[9][6][6] = {
		{
				//  0     1     2     3     4	5
				{0.333, 0.666, 0.0, 0.0, 0.0, 0.0 },     // 7
				{0.0,  1.0,  0.0,  0.0,  0.0,  0.0 }, // 1
				{0.0, 0.666, 0.333, 0.0, 0.0, 0.0 },     // 12
				{0.222, 0.444, 0.0, 0.111, 0.222, 0.0 }, // 27
				{0.0, 0.666, 0.0, 0.0, 0.333, 0.0 },     // 14
				{0.0, 0.333, 0.333, 0.0, 0.333, 0.0},    // 30
		},
		{
				// 0     1     2     3     4     5
				{0.333, 0.333, 0.333, 0.0,  0.0,  0.0 }, // 24
				{0.0, 0.666, 0.333, 0.0, 0.0, 0.0 },     // 12
				{0.0, 0.333, 0.666, 0.0, 0.0, 0.0 },     // 13
				{0.222, 0.222, 0.222, 0.111, 0.111, 0.111 }, // 38
				{0.0, 0.333, 0.333, 0.0, 0.333, 0.0},    // 30
				{0.0, 0.0, 0.666, 0.0, 0.333, 0.0},      // 31
		},
		{
				// 0     1     2     3     4     5
				{0.333, 0.0, 0.666, 0.0, 0.0, 0.0 },     // 9
				{0.0, 0.333, 0.666, 0.0, 0.0, 0.0 },     // 13
				{0.0,  0.0,  1.0,  0.0,  0.0,  0.0 }, // 2
				{0.222, 0.0, 0.444, 0.111, 0.0, 0.222 }, // 34
				{0.0, 0.0, 0.666, 0.0, 0.333, 0.0},      // 31
				{0.0, 0.0, 0.666, 0.0, 0.0, 0.333 },     // 16
		},
		{
				// 0     1     2     3     4     5
				{0.222, 0.444, 0.0, 0.111, 0.222, 0.0 }, // 27
				{0.0, 0.666, 0.0, 0.0, 0.333, 0.0 },     // 14
				{0.0, 0.333, 0.333, 0.0, 0.333, 0.0},    // 30
				{0.111, 0.222, 0.0, 0.222, 0.444, 0.0 }, // 29
				{0.0, 0.333, 0.0, 0.0, 0.666, 0.0 },     // 15
				{0.0, 0.0, 0.333, 0.0, 0.666, 0.0},      // 32
		},
		{
				// 0     1     2     3     4     5
				{0.222, 0.222, 0.222, 0.111, 0.111, 0.111 }, // 38
				{0.0, 0.333, 0.333, 0.0, 0.333, 0.0},    // 30
				{0.0, 0.0, 0.666, 0.0, 0.333, 0.0},      // 31
				{0.111, 0.111, 0.111, 0.222, 0.222, 0.222 }, // 39
				{0.0, 0.0, 0.333, 0.0, 0.666, 0.0},      // 32
				{0.0, 0.0, 0.333, 0.0, 0.333, 0.333 },   // 33
		},
		{
				// 0     1     2     3     4     5
				{0.222, 0.0, 0.444, 0.111, 0.0, 0.222 }, // 34
				{0.0, 0.0, 0.666, 0.0, 0.333, 0.0},      // 31
				{0.0, 0.0, 0.666, 0.0, 0.0, 0.333 },     // 16
				{0.111, 0.0, 0.222, 0.222, 0.0, 0.444 }, // 36
				{0.0, 0.0, 0.333, 0.0, 0.333, 0.333 },   // 33
				{0.0, 0.0, 0.333, 0.0, 0.0, 0.666 },     // 17
		},
		{
				// 0     1     2     3     4     5
				{0.111, 0.222, 0.0, 0.222, 0.444, 0.0 }, // 29
				{0.0, 0.333, 0.0, 0.0, 0.666, 0.0 },     // 15
				{0.0, 0.0, 0.333, 0.0, 0.666, 0.0},      // 32
				{0.0, 0.0, 0.0, 0.333, 0.666, 0.0 },     // 19
				{0.0,  0.0,  0.0,  0.0,  1.0,  0.0 }, // 4
				{0.0, 0.0, 0.0, 0.0, 0.666, 0.333 },     // 22
		},
		{
				// 0     1     2     3     4     5
				{0.111, 0.111, 0.111, 0.222, 0.222, 0.222 }, // 39
				{0.0, 0.0, 0.333, 0.0, 0.666, 0.0},      // 32
				{0.0, 0.0, 0.333, 0.0, 0.333, 0.333 },   // 33
				{0.0,  0.0,  0.0, 0.333, 0.333, 0.333 }, // 25
				{0.0, 0.0, 0.0, 0.0, 0.666, 0.333 },     // 22
				{0.0, 0.0, 0.0, 0.0, 0.333, 0.666 },     // 23
		},
		{
				// 0     1     2     3     4     5
				{0.111, 0.0, 0.222, 0.222, 0.0, 0.444 }, // 36
				{0.0, 0.0, 0.333, 0.0, 0.333, 0.333 },   // 33
				{0.0, 0.0, 0.333, 0.0, 0.0, 0.666 },     // 17
				{0.0, 0.0, 0.0, 0.333, 0.0, 0.666 },     // 21
				{0.0, 0.0, 0.0, 0.0, 0.333, 0.666 },     // 23
				{0.0,  0.0,  0.0,  0.0,  0.0,  1.0 },    // 5


		}
};

//
const double AntiWedgeLeft6RefinementPattern9AWL6_18Pr ::_refine_matrix_2[18][6][6] = { /* const */
		{
				//  0     1     2     3     4    5
				{0.0, 0.666, 0.333, 0.0, 0.0, 0.0 },     // 12
				{0.333, 0.333, 0.333, 0.0,  0.0,  0.0 }, // 24
				{0.333, 0.666, 0.0, 0.0, 0.0, 0.0 },     // 7
				{0.0, 0.333, 0.333, 0.0, 0.333, 0.0},    // 30
				{0.222, 0.222, 0.222, 0.111, 0.111, 0.111 }, // 38
				{0.222, 0.444, 0.0, 0.111, 0.222, 0.0 }, // 27
		},
		{
				// 0     1     2     3     4     5
				{0.0, 0.333, 0.333, 0.0, 0.333, 0.0},    // 30
				{0.222, 0.222, 0.222, 0.111, 0.111, 0.111 }, // 38
				{0.222, 0.444, 0.0, 0.111, 0.222, 0.0 }, // 27
				{0.0, 0.0, 0.333, 0.0, 0.666, 0.0},      // 32
				{0.111, 0.111, 0.111, 0.222, 0.222, 0.222 }, // 39
				{0.111, 0.222, 0.0, 0.222, 0.444, 0.0 }, // 29
		},
		{
				// 0     1     2     3     4     5
				{0.0, 0.0, 0.333, 0.0, 0.666, 0.0},      // 32
				{0.111, 0.111, 0.111, 0.222, 0.222, 0.222 }, // 39
				{0.111, 0.222, 0.0, 0.222, 0.444, 0.0 }, // 29
				{0.0, 0.0, 0.0, 0.0, 0.666, 0.333 },     // 22
				{0.0,  0.0,  0.0, 0.333, 0.333, 0.333 }, // 25
				{0.0, 0.0, 0.0, 0.333, 0.666, 0.0 },     // 19
		},
		{
				// 0     1     2     3     4     5
				{0.0, 0.333, 0.666, 0.0, 0.0, 0.0 },     // 13
				{0.333, 0.0, 0.666, 0.0, 0.0, 0.0 },     // 9
				{0.333, 0.333, 0.333, 0.0,  0.0,  0.0 }, // 24
				{0.0, 0.0, 0.666, 0.0, 0.333, 0.0},      // 31
				{0.222, 0.0, 0.444, 0.111, 0.0, 0.222 }, // 34
				{0.222, 0.222, 0.222, 0.111, 0.111, 0.111 }, // 38
		},
		{
				// 0     1     2     3     4     5
				{0.0, 0.0, 0.666, 0.0, 0.333, 0.0},      // 31
				{0.222, 0.0, 0.444, 0.111, 0.0, 0.222 }, // 34
				{0.222, 0.222, 0.222, 0.111, 0.111, 0.111 }, // 38
				{0.0, 0.0, 0.333, 0.0, 0.333, 0.333 },   // 33
				{0.111, 0.0, 0.222, 0.222, 0.0, 0.444 }, // 36
				{0.111, 0.111, 0.111, 0.222, 0.222, 0.222 }, // 39
		},
		{
				// 0     1     2     3     4     5
				{0.0, 0.0, 0.333, 0.0, 0.333, 0.333 },   // 33
				{0.111, 0.0, 0.222, 0.222, 0.0, 0.444 }, // 36
				{0.111, 0.111, 0.111, 0.222, 0.222, 0.222 }, // 39
				{0.0, 0.0, 0.0, 0.0, 0.333, 0.666 },     // 23
				{0.0, 0.0, 0.0, 0.333, 0.0, 0.666 },     // 21
				{0.0,  0.0,  0.0, 0.333, 0.333, 0.333 }, // 25
		},
		{
				// 0     1     2     3     4     5
				{0.333, 0.666, 0.0, 0.0, 0.0, 0.0 },     // 7
				{0.333, 0.333, 0.333, 0.0,  0.0,  0.0 }, // 24
				{0.666, 0.333, 0.0, 0.0, 0.0, 0.0 },     // 6
				{0.222, 0.444, 0.0, 0.111, 0.222, 0.0 }, // 27
				{0.222, 0.222, 0.222, 0.111, 0.111, 0.111 }, // 38
				{0.444, 0.222, 0.0, 0.222, 0.111, 0.0 }, // 26
		},
		{
				// 0     1     2     3     4     5
				{0.222, 0.444, 0.0, 0.111, 0.222, 0.0 }, // 27
				{0.222, 0.222, 0.222, 0.111, 0.111, 0.111 }, // 38
				{0.444, 0.222, 0.0, 0.222, 0.111, 0.0 }, // 26
				{0.111, 0.222, 0.0, 0.222, 0.444, 0.0 }, // 29
				{0.111, 0.111, 0.111, 0.222, 0.222, 0.222 }, // 39
				{0.222, 0.111, 0.0, 0.444, 0.222, 0.0 }, // 28
		},
		{
				// 0     1     2     3     4     5
				{0.111, 0.222, 0.0, 0.222, 0.444, 0.0 }, // 29
				{0.111, 0.111, 0.111, 0.222, 0.222, 0.222 }, // 39
				{0.222, 0.111, 0.0, 0.444, 0.222, 0.0 }, // 28
				{0.0, 0.0, 0.0, 0.333, 0.666, 0.0 },     // 19
				{0.0,  0.0,  0.0, 0.333, 0.333, 0.333 }, // 25
				{0.0, 0.0, 0.0, 0.666, 0.333, 0.0 },     // 18
		},
		{
				// 0     1     2     3     4     5
				{0.333, 0.333, 0.333, 0.0,  0.0,  0.0 }, // 24
				{0.666, 0.0, 0.333, 0.0, 0.0, 0.0 },     // 8
				{0.666, 0.333, 0.0, 0.0, 0.0, 0.0 },     // 6
				{0.222, 0.222, 0.222, 0.111, 0.111, 0.111 }, // 38
				{0.444, 0.0, 0.222, 0.222, 0.0, 0.111 }, // 35
				{0.444, 0.222, 0.0, 0.222, 0.111, 0.0 }, // 26
		},
		{
				// 0     1     2     3     4     5
				{0.222, 0.222, 0.222, 0.111, 0.111, 0.111 }, // 38
				{0.444, 0.0, 0.222, 0.222, 0.0, 0.111 }, // 35
				{0.444, 0.222, 0.0, 0.222, 0.111, 0.0 }, // 26
				{0.111, 0.111, 0.111, 0.222, 0.222, 0.222 }, // 39
				{0.222, 0.0, 0.111, 0.444, 0.0, 0.222 }, // 37
				{0.222, 0.111, 0.0, 0.444, 0.222, 0.0 }, // 28
		},
		{
				// 0     1     2     3     4     5
				{0.111, 0.111, 0.111, 0.222, 0.222, 0.222 }, // 39
				{0.222, 0.0, 0.111, 0.444, 0.0, 0.222 }, // 37
				{0.222, 0.111, 0.0, 0.444, 0.222, 0.0 }, // 28
				{0.0,  0.0,  0.0, 0.333, 0.333, 0.333 }, // 25
				{0.0, 0.0, 0.0, 0.666, 0.0, 0.333 },     // 20
				{0.0, 0.0, 0.0, 0.666, 0.333, 0.0 },     // 18
		},
		{
				// 0     1     2     3     4     5
				{0.333, 0.333, 0.333, 0.0,  0.0,  0.0 }, // 24
				{0.333, 0.0, 0.666, 0.0, 0.0, 0.0 },     // 9
				{0.666, 0.0, 0.333, 0.0, 0.0, 0.0 },     // 8
				{0.222, 0.222, 0.222, 0.111, 0.111, 0.111 }, // 38
				{0.222, 0.0, 0.444, 0.111, 0.0, 0.222 }, // 34
				{0.444, 0.0, 0.222, 0.222, 0.0, 0.111 }, // 35
		},
		{
				// 0     1     2     3     4     5
				{0.222, 0.222, 0.222, 0.111, 0.111, 0.111 }, // 38
				{0.222, 0.0, 0.444, 0.111, 0.0, 0.222 }, // 34
				{0.444, 0.0, 0.222, 0.222, 0.0, 0.111 }, // 35
				{0.111, 0.111, 0.111, 0.222, 0.222, 0.222 }, // 39
				{0.111, 0.0, 0.222, 0.222, 0.0, 0.444 }, // 36
				{0.222, 0.0, 0.111, 0.444, 0.0, 0.222 }, // 37
		},
		{
				// 0     1     2     3     4     5
				{0.111, 0.111, 0.111, 0.222, 0.222, 0.222 }, // 39
				{0.111, 0.0, 0.222, 0.222, 0.0, 0.444 }, // 36
				{0.222, 0.0, 0.111, 0.444, 0.0, 0.222 }, // 37
				{0.0,  0.0,  0.0, 0.333, 0.333, 0.333 }, // 25
				{0.0, 0.0, 0.0, 0.333, 0.0, 0.666 },     // 21
				{0.0, 0.0, 0.0, 0.666, 0.0, 0.333 },     // 20
		},
		{
				// 0     1     2     3     4     5
				{0.666, 0.333, 0.0, 0.0, 0.0, 0.0 },     // 6
				{0.666, 0.0, 0.333, 0.0, 0.0, 0.0 },     // 8
				{1.0,  0.0,  0.0,  0.0,  0.0,  0.0 },    // 0
				{0.444, 0.222, 0.0, 0.222, 0.111, 0.0 }, // 26
				{0.444, 0.0, 0.222, 0.222, 0.0, 0.111 }, // 35
				{0.666, 0.0, 0.0, 0.333, 0.0, 0.0 },     // 10
		},
		{
				// 0     1     2     3     4     5
				{0.444, 0.222, 0.0, 0.222, 0.111, 0.0 }, // 26
				{0.444, 0.0, 0.222, 0.222, 0.0, 0.111 }, // 35
				{0.666, 0.0, 0.0, 0.333, 0.0, 0.0 },     // 10
				{0.222, 0.111, 0.0, 0.444, 0.222, 0.0 }, // 28
				{0.222, 0.0, 0.111, 0.444, 0.0, 0.222 }, // 37
				{0.333, 0.0, 0.0, 0.666, 0.0, 0.0 },     // 11
		},
		{
				// 0     1     2     3     4     5
				{0.222, 0.111, 0.0, 0.444, 0.222, 0.0 }, // 28
				{0.222, 0.0, 0.111, 0.444, 0.0, 0.222 }, // 37
				{0.333, 0.0, 0.0, 0.666, 0.0, 0.0 },     // 11
				{0.0, 0.0, 0.0, 0.666, 0.333, 0.0 },     // 18
				{0.0, 0.0, 0.0, 0.666, 0.0, 0.333 },     // 20
				{0.0,  0.0,  0.0,  1.0,  0.0,  0.0 },    // 3
		}
};

/*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*/

const double AntiWedgeRight6RefinementPattern4Hex_4HHex7 ::_refine_matrix_1[4][8][6] = {
    {
                    //0   1     2   3     4   5
                    {0.5, 0.0, 0.5, 0.0, 0.0, 0.0}, // 8
                    {1.0, 0.0, 0.0, 0.0, 0.0, 0.0}, // 0
                    {0.5, 0.5, 0.0, 0.0, 0.0, 0.0}, // 6
                    {0.25, 0.5, 0.25, 0.0, 0.0, 0.0}, // 21
                    {0.25, 0.0, 0.25, 0.25, 0.0, 0.25}, // 18
                    {0.5, 0.0, 0.0, 0.5, 0.0, 0.0}, // 14
                    {0.25, 0.25, 0.0, 0.25, 0.25, 0.0}, // 19
                    {0.125, 0.25, 0.125, 0.125, 0.125, 0.25}, // 22
    },
    {
                    //0    1   2     3    4   5
                    {0.0, 0.0, 1.0, 0.0, 0.0, 0.0}, // 2
                    {0.5, 0.0, 0.5, 0.0, 0.0, 0.0}, // 8
                    {0.25, 0.5, 0.25, 0.0, 0.0, 0.0}, // 21
                    {0.0, 0.5, 0.5, 0.0, 0.0, 0.0}, // 7
                    {0.0, 0.0, 0.5, 0.0, 0.0, 0.5}, // 13
                    {0.25, 0.0, 0.25, 0.25, 0.0, 0.25}, // 18
                    {0.125, 0.25, 0.125, 0.125, 0.125, 0.25}, // 22
                    {0.0, 0.25, 0.25, 0.0, 0.0, 0.5}, // 17
    },
    {
                     //0    1   2     3    4   5
                    {0.25, 0.0, 0.25, 0.25, 0.0, 0.25}, // 18
                    {0.5, 0.0, 0.0, 0.5, 0.0, 0.0}, // 14
                    {0.25, 0.25, 0.0, 0.25, 0.25, 0.0}, // 19
                    {0.125, 0.25, 0.125, 0.125, 0.125, 0.25}, // 22
                    {0.0, 0.0, 0.0, 0.5, 0.0, 0.5}, // 9
                    {0.0, 0.0, 0.0, 1.0, 0.0, 0.0}, // 3
                    {0.0, 0.0, 0.0, 0.5, 0.5, 0.0}, // 10
                    {0.0, 0.0, 0.0, 0.25, 0.25, 0.5}, // 20
    },
    {
                    //0    1   2     3    4   5
                    {0.0, 0.5, 0.0, 0.0, 0.5, 0.0}, // 12
                    {0.0, 0.5, 0.0, 0.0, 0.25, 0.25}, // 16
                    {0.125, 0.25, 0.125, 0.125, 0.125, 0.25}, // 22
                    {0.25, 0.25, 0.0, 0.25, 0.25, 0.0}, // 19
                    {0.0, 0.0, 0.0, 0.0, 1.0, 0.0}, // 4
                    {0.0, 0.0, 0.0, 0.0, 0.5, 0.5}, // 11
                    {0.0, 0.0, 0.0, 0.25, 0.25, 0.5}, // 20
                    {0.0, 0.0, 0.0, 0.5, 0.5, 0.0}, // 10
    },
};
const Integer AntiWedgeRight6RefinementPattern4Hex_4HHex7 ::_face_mapping_1[4][6] = {
                 //  0  1  2  3  4  5
                    {0, 4, 1, 3, 2, 5},
                    {0, 4, 1, 3, 2, 5},
                    {5, 2, 3, 0, 4, 1},
                    {5, 2, 3, 0, 4, 1},
};
const Integer AntiWedgeRight6RefinementPattern4Hex_4HHex7 ::_face_mapping_topo_1[4][6] = {
                 //  0  1  2  3  4  5
                    {1, 0, 1, 0, 1, 0},
                    {1, 1, 1, 0, 0, 0},
                    {0, 0, 1, 1, 1, 0},
                    {0, 1, 1, 1, 0, 0},
};
//
const double AntiWedgeRight6RefinementPattern4Hex_4HHex7 ::_refine_matrix_2[4][7][6] = {
    {
                    //0    1   2     3    4   5
                    {0.0, 1.0, 0.0, 0.0, 0.0, 0.0}, // 1
                    {0.25, 0.5, 0.25, 0.0, 0.0, 0.0}, // 21
                    {0.0, 0.5, 0.5, 0.0, 0.0, 0.0}, // 7
                    {0.0, 0.25, 0.25, 0.0, 0.0, 0.5}, // 17
                    {0.0, 0.5, 0.0, 0.0, 0.0, 0.5}, // 15
                    {0.0, 0.5, 0.0, 0.0, 0.25, 0.25}, // 16
                    {0.125, 0.25, 0.125, 0.125, 0.125, 0.25}, // 22
    },
    {
                    //0    1   2     3    4   5
                    {0.0, 1.0, 0.0, 0.0, 0.0, 0.0}, // 1
                    {0.5, 0.5, 0.0, 0.0, 0.0, 0.0}, // 6
                    {0.25, 0.5, 0.25, 0.0, 0.0, 0.0}, // 21
                    {0.125, 0.25, 0.125, 0.125, 0.125, 0.25}, // 22
                    {0.0, 0.5, 0.0, 0.0, 0.25, 0.25}, // 16
                    {0.0, 0.5, 0.0, 0.0, 0.5, 0.0}, // 12
                    {0.25, 0.25, 0.0, 0.25, 0.25, 0.0}, // 19
    },
    {
                    //0    1   2     3    4   5
                    {0.0, 0.0, 0.0, 0.0, 0.0, 1.0}, // 5
                    {0.0, 0.25, 0.25, 0.0, 0.0, 0.5}, // 17
                    {0.0, 0.0, 0.5, 0.0, 0.0, 0.5}, // 13
                    {0.25, 0.0, 0.25, 0.25, 0.0, 0.25}, // 18
                    {0.0, 0.0, 0.0, 0.5, 0.0, 0.5}, // 9
                    {0.0, 0.0, 0.0, 0.25, 0.25, 0.5}, // 20
                    {0.125, 0.25, 0.125, 0.125, 0.125, 0.25}, // 22
    },
    {
                    //0    1   2     3    4   5
                    {0.0, 0.0, 0.0, 0.0, 0.0, 1.0}, // 5
                    {0.0, 0.5, 0.0, 0.0, 0.0, 0.5}, // 15
                    {0.0, 0.25, 0.25, 0.0, 0.0, 0.5}, // 17
                    {0.125, 0.25, 0.125, 0.125, 0.125, 0.25}, // 22
                    {0.0, 0.0, 0.0, 0.25, 0.25, 0.5}, // 20
                    {0.0, 0.0, 0.0, 0.0, 0.5, 0.5}, // 11
                    {0.0, 0.5, 0.0, 0.0, 0.25, 0.25}, // 16
    },
};
const Integer AntiWedgeRight6RefinementPattern4Hex_4HHex7 ::_face_mapping_2[4][6] = {
                 //  0  1  2  3  4  5
                    {0, 4, 2, 5, 1, 3},
                    {0, 4, 2, 5, 1, 3},
                    {4, 1, 5, 3, 0, 2},
                    {4, 1, 5, 3, 0, 2},
};
const Integer AntiWedgeRight6RefinementPattern4Hex_4HHex7 ::_face_mapping_topo_2[4][6] = {
                 //  0  1  2  3  4  5
                    {1, 1, 0, 1, 0, 0},
                    {1, 0, 1, 1, 0, 0},
                    {1, 1, 0, 1, 0, 0},
                    {1, 0, 1, 1, 0, 0},
};
/*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*/

const double AntiWedgeRight6RefinementPattern4AWR6_4Pr ::_refine_matrix_1[4][6][6] = {
		{
				//  0     1     2     3     4	5
				{0.25, 0.25, 0.0, 0.25, 0.25, 0.0}, // 16
				{0.0, 0.5, 0.0, 0.0, 0.5, 0.0 }, // 10
				{0.0, 0.5, 0.0, 0.0, 0.0, 0.5}, // 17
				{0.0, 0.0, 0.0, 0.5, 0.5, 0.0 }, // 12
				{0.0, 0.0, 0.0, 0.0, 1.0, 0.0 }, // 4
				{0.0, 0.0, 0.0, 0.0, 0.5, 0.5 }, // 14
		},
		{
				// 0     1     2     3     4     5
				{0.5, 0.5, 0.0, 0.0, 0.0, 0.0 }, // 6
				{0.0, 1.0, 0.0, 0.0, 0.0, 0.0 }, // 1
				{0.0, 0.5, 0.5, 0.0, 0.0, 0.0 }, // 9
				{0.25, 0.25, 0.0, 0.25, 0.25, 0.0}, // 16
				{0.0, 0.5, 0.0, 0.0, 0.5, 0.0 }, // 10
				{0.0, 0.5, 0.0, 0.0, 0.0, 0.5}, // 17
		},
		{
				// 0     1     2     3     4     5
				{0.25, 0.0, 0.25, 0.25, 0.0, 0.25}, // 15
				{0.0, 0.5, 0.0, 0.0, 0.0, 0.5}, // 17
				{0.0, 0.0, 0.5, 0.0, 0.0, 0.5 }, // 11
				{0.0, 0.0, 0.0, 0.5, 0.0, 0.5 }, // 13
				{0.0, 0.0, 0.0, 0.0, 0.5, 0.5 }, // 14
				{0.0, 0.0, 0.0, 0.0, 0.0, 1.0 }, // 5
		},
		{
				// 0     1     2     3     4     5
				{0.5, 0.0, 0.5, 0.0, 0.0, 0.0 }, // 7
				{0.0, 0.5, 0.5, 0.0, 0.0, 0.0 }, // 9
				{0.0, 0.0, 1.0, 0.0, 0.0, 0.0 }, // 2
				{0.25, 0.0, 0.25, 0.25, 0.0, 0.25}, // 15
				{0.0, 0.5, 0.0, 0.0, 0.0, 0.5}, // 17
				{0.0, 0.0, 0.5, 0.0, 0.0, 0.5 }, // 11
		}
};

//
const double AntiWedgeRight6RefinementPattern4AWR6_4Pr ::_refine_matrix_2[4][6][6] = { /* const */
		{
				//  0     1     2     3     4    5
				{0.25, 0.25, 0.0, 0.25, 0.25, 0.0}, // 16
				{0.0, 0.5, 0.0, 0.0, 0.0, 0.5}, // 17
				{0.25, 0.0, 0.25, 0.25, 0.0, 0.25}, // 15
				{0.0, 0.0, 0.0, 0.5, 0.5, 0.0 }, // 12
				{0.0, 0.0, 0.0, 0.0, 0.5, 0.5 }, // 14
				{0.0, 0.0, 0.0, 0.5, 0.0, 0.5 }, // 13
		},
		{
				// 0     1     2     3     4     5
				{0.5, 0.0, 0.5, 0.0, 0.0, 0.0 }, // 7
				{0.5, 0.5, 0.0, 0.0, 0.0, 0.0 }, // 6
				{0.0, 0.5, 0.5, 0.0, 0.0, 0.0 }, // 9
				{0.25, 0.0, 0.25, 0.25, 0.0, 0.25}, // 15
				{0.25, 0.25, 0.0, 0.25, 0.25, 0.0}, // 16
				{0.0, 0.5, 0.0, 0.0, 0.0, 0.5}, // 17
		},
		{
				// 0     1     2     3     4     5
				{1.0, 0.0, 0.0, 0.0, 0.0, 0.0 }, // 0
				{0.5, 0.5, 0.0, 0.0, 0.0, 0.0 }, // 6
				{0.5, 0.0, 0.5, 0.0, 0.0, 0.0 }, // 7
				{0.5, 0.0, 0.0, 0.5, 0.0, 0.0 }, // 8
				{0.25, 0.25, 0.0, 0.25, 0.25, 0.0}, // 16
				{0.25, 0.0, 0.25, 0.25, 0.0, 0.25}, // 15
		},
		{
				// 0     1     2     3     4     5
				{0.5, 0.0, 0.0, 0.5, 0.0, 0.0 }, // 8
				{0.25, 0.25, 0.0, 0.25, 0.25, 0.0}, // 16
				{0.25, 0.0, 0.25, 0.25, 0.0, 0.25}, // 15
				{0.0, 0.0, 0.0, 1.0, 0.0, 0.0 }, // 3
				{0.0, 0.0, 0.0, 0.5, 0.5, 0.0 }, // 12
				{0.0, 0.0, 0.0, 0.5, 0.0, 0.5 }, // 13

		}
};

/*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*/

const double AntiWedgeRight6RefinementPattern9AWR6_18Pr ::_refine_matrix_1[9][6][6] = {
		{
				//  0     1     2     3     4	5
				{0.333, 0.666, 0.0, 0.0, 0.0, 0.0 },     // 7
				{0.0,  1.0,  0.0,  0.0,  0.0,  0.0 }, // 1
				{0.0, 0.666, 0.333, 0.0, 0.0, 0.0 },     // 12
				{0.222, 0.444, 0.0, 0.111, 0.222, 0.0 }, // 27
				{0.0, 0.666, 0.0, 0.0, 0.333, 0.0 },     // 14
				{0.0, 0.666, 0.0, 0.0, 0.0, 0.333},       // 30
		},
		{
				// 0     1     2     3     4     5
				{0.333, 0.333, 0.333, 0.0,  0.0,  0.0 }, // 24
				{0.0, 0.666, 0.333, 0.0, 0.0, 0.0 },     // 12
				{0.0, 0.333, 0.666, 0.0, 0.0, 0.0 },     // 13
				{0.222, 0.222, 0.222, 0.111, 0.111, 0.111 }, // 38
				{0.0, 0.666, 0.0, 0.0, 0.0, 0.333},       // 30
				{0.0, 0.333, 0.333, 0.0, 0.0, 0.333},     // 31
		},
		{
				// 0     1     2     3     4     5
				{0.333, 0.0, 0.666, 0.0, 0.0, 0.0 },     // 9
				{0.0, 0.333, 0.666, 0.0, 0.0, 0.0 },     // 13
				{0.0,  0.0,  1.0,  0.0,  0.0,  0.0 }, // 2
				{0.222, 0.0, 0.444, 0.111, 0.0, 0.222 }, // 34
				{0.0, 0.333, 0.333, 0.0, 0.0, 0.333},     // 31
				{0.0, 0.0, 0.666, 0.0, 0.0, 0.333 },     // 16
		},
		{
				// 0     1     2     3     4     5
				{0.222, 0.444, 0.0, 0.111, 0.222, 0.0 }, // 27
				{0.0, 0.666, 0.0, 0.0, 0.333, 0.0 },     // 14
				{0.0, 0.666, 0.0, 0.0, 0.0, 0.333},       // 30
				{0.111, 0.222, 0.0, 0.222, 0.444, 0.0 }, // 29
				{0.0, 0.333, 0.0, 0.0, 0.666, 0.0 },     // 15
				{0.0, 0.333, 0.0, 0.0, 0.333, 0.333},     // 32
		},
		{
				// 0     1     2     3     4     5
				{0.222, 0.222, 0.222, 0.111, 0.111, 0.111 }, // 38
				{0.0, 0.666, 0.0, 0.0, 0.0, 0.333},       // 30
				{0.0, 0.333, 0.333, 0.0, 0.0, 0.333},     // 31
				{0.111, 0.111, 0.111, 0.222, 0.222, 0.222 }, // 39
				{0.0, 0.333, 0.0, 0.0, 0.333, 0.333},     // 32
				{0.0, 0.333, 0.0, 0.0, 0.0, 0.666},       // 33
		},
		{
				// 0     1     2     3     4     5
				{0.222, 0.0, 0.444, 0.111, 0.0, 0.222 }, // 34
				{0.0, 0.333, 0.333, 0.0, 0.0, 0.333},     // 31
				{0.0, 0.0, 0.666, 0.0, 0.0, 0.333 },     // 16
				{0.111, 0.0, 0.222, 0.222, 0.0, 0.444 }, // 36
				{0.0, 0.333, 0.0, 0.0, 0.0, 0.666},       // 33
				{0.0, 0.0, 0.333, 0.0, 0.0, 0.666 },     // 17
		},
		{
				// 0     1     2     3     4     5
				{0.111, 0.222, 0.0, 0.222, 0.444, 0.0 }, // 29
				{0.0, 0.333, 0.0, 0.0, 0.666, 0.0 },     // 15
				{0.0, 0.333, 0.0, 0.0, 0.333, 0.333},     // 32
				{0.0, 0.0, 0.0, 0.333, 0.666, 0.0 },     // 19
				{0.0,  0.0,  0.0,  0.0,  1.0,  0.0 }, // 4
				{0.0, 0.0, 0.0, 0.0, 0.666, 0.333 },     // 22
		},
		{
				// 0     1     2     3     4     5
				{0.111, 0.111, 0.111, 0.222, 0.222, 0.222 }, // 39
				{0.0, 0.333, 0.0, 0.0, 0.333, 0.333},     // 32
				{0.0, 0.333, 0.0, 0.0, 0.0, 0.666},       // 33
				{0.0,  0.0,  0.0, 0.333, 0.333, 0.333 }, // 25
				{0.0, 0.0, 0.0, 0.0, 0.666, 0.333 },     // 22
				{0.0, 0.0, 0.0, 0.0, 0.333, 0.666 },     // 23
		},
		{
				// 0     1     2     3     4     5
				{0.111, 0.0, 0.222, 0.222, 0.0, 0.444 }, // 36
				{0.0, 0.333, 0.0, 0.0, 0.0, 0.666},       // 33
				{0.0, 0.0, 0.333, 0.0, 0.0, 0.666 },     // 17
				{0.0, 0.0, 0.0, 0.333, 0.0, 0.666 },     // 21
				{0.0, 0.0, 0.0, 0.0, 0.333, 0.666 },     // 23
				{0.0,  0.0,  0.0,  0.0,  0.0,  1.0 },    // 5
		}
};

//
const double AntiWedgeRight6RefinementPattern9AWR6_18Pr ::_refine_matrix_2[18][6][6] = { /* const */
		{
				//  0     1     2     3     4    5
				{0.0, 0.666, 0.333, 0.0, 0.0, 0.0 },     // 12
				{0.333, 0.333, 0.333, 0.0,  0.0,  0.0 }, // 24
				{0.333, 0.666, 0.0, 0.0, 0.0, 0.0 },     // 7
				{0.0, 0.666, 0.0, 0.0, 0.0, 0.333},       // 30
				{0.222, 0.222, 0.222, 0.111, 0.111, 0.111 }, // 38
				{0.222, 0.444, 0.0, 0.111, 0.222, 0.0 }, // 27
		},
		{
				// 0     1     2     3     4     5
				{0.0, 0.666, 0.0, 0.0, 0.0, 0.333},       // 30
				{0.222, 0.222, 0.222, 0.111, 0.111, 0.111 }, // 38
				{0.222, 0.444, 0.0, 0.111, 0.222, 0.0 }, // 27
				{0.0, 0.333, 0.0, 0.0, 0.333, 0.333},     // 32
				{0.111, 0.111, 0.111, 0.222, 0.222, 0.222 }, // 39
				{0.111, 0.222, 0.0, 0.222, 0.444, 0.0 }, // 29
		},
		{
				// 0     1     2     3     4     5
				{0.0, 0.333, 0.0, 0.0, 0.333, 0.333},     // 32
				{0.111, 0.111, 0.111, 0.222, 0.222, 0.222 }, // 39
				{0.111, 0.222, 0.0, 0.222, 0.444, 0.0 }, // 29
				{0.0, 0.0, 0.0, 0.0, 0.666, 0.333 },     // 22
				{0.0,  0.0,  0.0, 0.333, 0.333, 0.333 }, // 25
				{0.0, 0.0, 0.0, 0.333, 0.666, 0.0 },     // 19
		},
		{
				// 0     1     2     3     4     5
				{0.0, 0.333, 0.666, 0.0, 0.0, 0.0 },     // 13
				{0.333, 0.0, 0.666, 0.0, 0.0, 0.0 },     // 9
				{0.333, 0.333, 0.333, 0.0,  0.0,  0.0 }, // 24
				{0.0, 0.333, 0.333, 0.0, 0.0, 0.333},     // 31
				{0.222, 0.0, 0.444, 0.111, 0.0, 0.222 }, // 34
				{0.222, 0.222, 0.222, 0.111, 0.111, 0.111 }, // 38
		},
		{
				// 0     1     2     3     4     5
				{0.0, 0.333, 0.333, 0.0, 0.0, 0.333},     // 31
				{0.222, 0.0, 0.444, 0.111, 0.0, 0.222 }, // 34
				{0.222, 0.222, 0.222, 0.111, 0.111, 0.111 }, // 38
				{0.0, 0.333, 0.0, 0.0, 0.0, 0.666},       // 33
				{0.111, 0.0, 0.222, 0.222, 0.0, 0.444 }, // 36
				{0.111, 0.111, 0.111, 0.222, 0.222, 0.222 }, // 39
		},
		{
				// 0     1     2     3     4     5
				{0.0, 0.333, 0.0, 0.0, 0.0, 0.666},       // 33
				{0.111, 0.0, 0.222, 0.222, 0.0, 0.444 }, // 36
				{0.111, 0.111, 0.111, 0.222, 0.222, 0.222 }, // 39
				{0.0, 0.0, 0.0, 0.0, 0.333, 0.666 },     // 23
				{0.0, 0.0, 0.0, 0.333, 0.0, 0.666 },     // 21
				{0.0,  0.0,  0.0, 0.333, 0.333, 0.333 }, // 25
		},
		{
				// 0     1     2     3     4     5
				{0.333, 0.666, 0.0, 0.0, 0.0, 0.0 },     // 7
				{0.333, 0.333, 0.333, 0.0,  0.0,  0.0 }, // 24
				{0.666, 0.333, 0.0, 0.0, 0.0, 0.0 },     // 6
				{0.222, 0.444, 0.0, 0.111, 0.222, 0.0 }, // 27
				{0.222, 0.222, 0.222, 0.111, 0.111, 0.111 }, // 38
				{0.444, 0.222, 0.0, 0.222, 0.111, 0.0 }, // 26
		},
		{
				// 0     1     2     3     4     5
				{0.222, 0.444, 0.0, 0.111, 0.222, 0.0 }, // 27
				{0.222, 0.222, 0.222, 0.111, 0.111, 0.111 }, // 38
				{0.444, 0.222, 0.0, 0.222, 0.111, 0.0 }, // 26
				{0.111, 0.222, 0.0, 0.222, 0.444, 0.0 }, // 29
				{0.111, 0.111, 0.111, 0.222, 0.222, 0.222 }, // 39
				{0.222, 0.111, 0.0, 0.444, 0.222, 0.0 }, // 28
		},
		{
				// 0     1     2     3     4     5
				{0.111, 0.222, 0.0, 0.222, 0.444, 0.0 }, // 29
				{0.111, 0.111, 0.111, 0.222, 0.222, 0.222 }, // 39
				{0.222, 0.111, 0.0, 0.444, 0.222, 0.0 }, // 28
				{0.0, 0.0, 0.0, 0.333, 0.666, 0.0 },     // 19
				{0.0,  0.0,  0.0, 0.333, 0.333, 0.333 }, // 25
				{0.0, 0.0, 0.0, 0.666, 0.333, 0.0 },     // 18
		},
		{
				// 0     1     2     3     4     5
				{0.333, 0.333, 0.333, 0.0,  0.0,  0.0 }, // 24
				{0.666, 0.0, 0.333, 0.0, 0.0, 0.0 },     // 8
				{0.666, 0.333, 0.0, 0.0, 0.0, 0.0 },     // 6
				{0.222, 0.222, 0.222, 0.111, 0.111, 0.111 }, // 38
				{0.444, 0.0, 0.222, 0.222, 0.0, 0.111 }, // 35
				{0.444, 0.222, 0.0, 0.222, 0.111, 0.0 }, // 26
		},
		{
				// 0     1     2     3     4     5
				{0.222, 0.222, 0.222, 0.111, 0.111, 0.111 }, // 38
				{0.444, 0.0, 0.222, 0.222, 0.0, 0.111 }, // 35
				{0.444, 0.222, 0.0, 0.222, 0.111, 0.0 }, // 26
				{0.111, 0.111, 0.111, 0.222, 0.222, 0.222 }, // 39
				{0.222, 0.0, 0.111, 0.444, 0.0, 0.222 }, // 37
				{0.222, 0.111, 0.0, 0.444, 0.222, 0.0 }, // 28
		},
		{
				// 0     1     2     3     4     5
				{0.111, 0.111, 0.111, 0.222, 0.222, 0.222 }, // 39
				{0.222, 0.0, 0.111, 0.444, 0.0, 0.222 }, // 37
				{0.222, 0.111, 0.0, 0.444, 0.222, 0.0 }, // 28
				{0.0,  0.0,  0.0, 0.333, 0.333, 0.333 }, // 25
				{0.0, 0.0, 0.0, 0.666, 0.0, 0.333 },     // 20
				{0.0, 0.0, 0.0, 0.666, 0.333, 0.0 },     // 18
		},
		{
				// 0     1     2     3     4     5
				{0.333, 0.333, 0.333, 0.0,  0.0,  0.0 }, // 24
				{0.333, 0.0, 0.666, 0.0, 0.0, 0.0 },     // 9
				{0.666, 0.0, 0.333, 0.0, 0.0, 0.0 },     // 8
				{0.222, 0.222, 0.222, 0.111, 0.111, 0.111 }, // 38
				{0.222, 0.0, 0.444, 0.111, 0.0, 0.222 }, // 34
				{0.444, 0.0, 0.222, 0.222, 0.0, 0.111 }, // 35
		},
		{
				// 0     1     2     3     4     5
				{0.222, 0.222, 0.222, 0.111, 0.111, 0.111 }, // 38
				{0.222, 0.0, 0.444, 0.111, 0.0, 0.222 }, // 34
				{0.444, 0.0, 0.222, 0.222, 0.0, 0.111 }, // 35
				{0.111, 0.111, 0.111, 0.222, 0.222, 0.222 }, // 39
				{0.111, 0.0, 0.222, 0.222, 0.0, 0.444 }, // 36
				{0.222, 0.0, 0.111, 0.444, 0.0, 0.222 }, // 37
		},
		{
				// 0     1     2     3     4     5
				{0.111, 0.111, 0.111, 0.222, 0.222, 0.222 }, // 39
				{0.111, 0.0, 0.222, 0.222, 0.0, 0.444 }, // 36
				{0.222, 0.0, 0.111, 0.444, 0.0, 0.222 }, // 37
				{0.0,  0.0,  0.0, 0.333, 0.333, 0.333 }, // 25
				{0.0, 0.0, 0.0, 0.333, 0.0, 0.666 },     // 21
				{0.0, 0.0, 0.0, 0.666, 0.0, 0.333 },     // 20
		},
		{
				// 0     1     2     3     4     5
				{0.666, 0.333, 0.0, 0.0, 0.0, 0.0 },     // 6
				{0.666, 0.0, 0.333, 0.0, 0.0, 0.0 },     // 8
				{1.0,  0.0,  0.0,  0.0,  0.0,  0.0 },    // 0
				{0.444, 0.222, 0.0, 0.222, 0.111, 0.0 }, // 26
				{0.444, 0.0, 0.222, 0.222, 0.0, 0.111 }, // 35
				{0.666, 0.0, 0.0, 0.333, 0.0, 0.0 },     // 10
		},
		{
				// 0     1     2     3     4     5
				{0.444, 0.222, 0.0, 0.222, 0.111, 0.0 }, // 26
				{0.444, 0.0, 0.222, 0.222, 0.0, 0.111 }, // 35
				{0.666, 0.0, 0.0, 0.333, 0.0, 0.0 },     // 10
				{0.222, 0.111, 0.0, 0.444, 0.222, 0.0 }, // 28
				{0.222, 0.0, 0.111, 0.444, 0.0, 0.222 }, // 37
				{0.333, 0.0, 0.0, 0.666, 0.0, 0.0 },     // 11
		},
		{
				// 0     1     2     3     4     5
				{0.222, 0.111, 0.0, 0.444, 0.222, 0.0 }, // 28
				{0.222, 0.0, 0.111, 0.444, 0.0, 0.222 }, // 37
				{0.333, 0.0, 0.0, 0.666, 0.0, 0.0 },     // 11
				{0.0, 0.0, 0.0, 0.666, 0.333, 0.0 },     // 18
				{0.0, 0.0, 0.0, 0.666, 0.0, 0.333 },     // 20
				{0.0,  0.0,  0.0,  1.0,  0.0,  0.0 },    // 3
		}
};

/*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*/

const double DiTetra5RefinementPattern2Hex_6HHex7 ::_refine_matrix_1[2][8][5] = {
    {
                    //  0    1     2    3    4
                    {0.5,  0.0,  0.0,  0.5, 0.0 }, // 7
                    {0.25,  0.5,  0.0,  0.25, 0.0 }, // 16
                    {0.25,  0.25,  0.25,  0.125, 0.125 }, // 20
                    {0.5,  0.0,  0.25,  0.25, 0.0 }, // 18
                    {0.0,  0.0,  0.0,  1.0, 0.0 }, // 3
                    {0.0,  0.5,  0.0,  0.5, 0.0 }, // 11
                    {0.0,  0.25,  0.5,  0.25, 0.0 }, // 15
                    {0.0,  0.0,  0.5,  0.5, 0.0 }, // 6
    },
    {
                    //  0    1     2    3    4
                    {0.5,  0.0,  0.0,  0.0, 0.5 }, // 9
                    {0.0,  0.0,  0.0,  0.0, 1.0 }, // 4
                    {0.0,  0.0,  0.5,  0.0, 0.5 }, // 12
                    {0.25,  0.0,  0.5,  0.0, 0.25 }, // 17
                    {0.5,  0.25,  0.0,  0.0, 0.25 }, // 14
                    {0.0,  0.5,  0.0,  0.0, 0.5 }, // 10
                    {0.0,  0.5,  0.25,  0.0, 0.25 }, // 19
                    {0.25,  0.25,  0.25,  0.125, 0.125 }, // 20
    },
};
const Integer DiTetra5RefinementPattern2Hex_6HHex7 ::_face_mapping_1[2][6] = {
                 //  0  1  2  3  4  5
                    {3, 2, 0, 1, 4, 5},
                    {5, 2, 3, 0, 4, 1},
};
const Integer DiTetra5RefinementPattern2Hex_6HHex7 ::_face_mapping_topo_1[2][6] = {
                 //  0  1  2  3  4  5
                    {0, 1, 1, 1, 0, 0},
                    {1, 0, 1, 0, 1, 0},
};
//
const double DiTetra5RefinementPattern2Hex_6HHex7 ::_refine_matrix_2[6][7][5] = {
    {
                    //  0    1     2    3    4
                    {0.0,  1.0,  0.0,  0.0, 0.0 }, // 1
                    {0.0,  0.5,  0.25,  0.0, 0.25 }, // 19
                    {0.0,  0.5,  0.5,  0.0, 0.0 }, // 5
                    {0.0,  0.25,  0.5,  0.25, 0.0 }, // 15
                    {0.0,  0.5,  0.0,  0.5, 0.0 }, // 11
                    {0.25,  0.5,  0.0,  0.25, 0.0 }, // 16
                    {0.25,  0.25,  0.25,  0.125, 0.125 }, // 20
    },
    {
                    //  0    1     2    3    4
                    {0.0,  1.0,  0.0,  0.0, 0.0 }, // 1
                    {0.0,  0.5,  0.0,  0.0, 0.5 }, // 10
                    {0.0,  0.5,  0.25,  0.0, 0.25 }, // 19
                    {0.25,  0.25,  0.25,  0.125, 0.125 }, // 20
                    {0.25,  0.5,  0.0,  0.25, 0.0 }, // 16
                    {0.5,  0.5,  0.0,  0.0, 0.0 }, // 8
                    {0.5,  0.25,  0.0,  0.0, 0.25 }, // 14
    },
    {
                    //  0    1     2    3    4
                    {1.0,  0.0,  0.0,  0.0, 0.0 }, // 0
                    {0.5,  0.25,  0.0,  0.0, 0.25 }, // 14
                    {0.5,  0.5,  0.0,  0.0, 0.0 }, // 8
                    {0.25,  0.5,  0.0,  0.25, 0.0 }, // 16
                    {0.5,  0.0,  0.0,  0.5, 0.0 }, // 7
                    {0.5,  0.0,  0.25,  0.25, 0.0 }, // 18
                    {0.25,  0.25,  0.25,  0.125, 0.125 }, // 20
    },
    {
                    //  0    1     2    3    4
                    {1.0,  0.0,  0.0,  0.0, 0.0 }, // 0
                    {0.5,  0.0,  0.0,  0.0, 0.5 }, // 9
                    {0.5,  0.25,  0.0,  0.0, 0.25 }, // 14
                    {0.25,  0.25,  0.25,  0.125, 0.125 }, // 20
                    {0.5,  0.0,  0.25,  0.25, 0.0 }, // 18
                    {0.5,  0.0,  0.5,  0.0, 0.0 }, // 13
                    {0.25,  0.0,  0.5,  0.0, 0.25 }, // 17
    },
    {
                    //  0    1     2    3    4
                    {0.0,  0.0,  1.0,  0.0, 0.0 }, // 2
                    {0.0,  0.25,  0.5,  0.25, 0.0 }, // 15
                    {0.0,  0.5,  0.5,  0.0, 0.0 }, // 5
                    {0.0,  0.5,  0.25,  0.0, 0.25 }, // 19
                    {0.0,  0.0,  0.5,  0.0, 0.5 }, // 12
                    {0.25,  0.0,  0.5,  0.0, 0.25 }, // 17
                    {0.25,  0.25,  0.25,  0.125, 0.125 }, // 20
    },
    {
                    //  0    1     2    3    4
                    {0.0,  0.0,  1.0,  0.0, 0.0 }, // 2
                    {0.0,  0.0,  0.5,  0.5, 0.0 }, // 6
                    {0.0,  0.25,  0.5,  0.25, 0.0 }, // 15
                    {0.25,  0.25,  0.25,  0.125, 0.125 }, // 20
                    {0.25,  0.0,  0.5,  0.0, 0.25 }, // 17
                    {0.5,  0.0,  0.5,  0.0, 0.0 }, // 13
                    {0.5,  0.0,  0.25,  0.25, 0.0 }, // 18
    }
};
const Integer DiTetra5RefinementPattern2Hex_6HHex7 ::_face_mapping_2[6][6] = {
                 //  0  1  2  3  4  5
                    {4, 1, 3, 0, 5, 2},
                    {4, 1, 3, 0, 5, 2},
                    {3, 5, 0, 2, 4, 1},
                    {3, 5, 0, 2, 4, 1},
                    {1, 4, 2, 5, 0, 3},
                    {1, 4, 2, 5, 0, 3},
};
const Integer DiTetra5RefinementPattern2Hex_6HHex7 ::_face_mapping_topo_2[6][6] = {
                 //  0  1  2  3  4  5
                    {1, 1, 0, 1, 0, 0},
                    {1, 0, 1, 1, 0, 0},
                    {1, 1, 0, 1, 0, 0},
                    {1, 0, 1, 1, 0, 0},
                    {1, 1, 0, 1, 0, 0},
                    {1, 0, 1, 1, 0, 0},
};
/*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*/

const double DiTetra5RefinementPattern3DT_4Py_2T ::_refine_matrix_1[3][5][5] = {
		{
				//  0    1     2    3    4
				{1.0,  0.0,  0.0,  0.0, 0.0 }, // 0
				{0.5,  0.5,  0.0,  0.0, 0.0 }, // 5
				{0.5,  0.0,  0.5,  0.0, 0.0 }, // 6
				{0.5,  0.0,  0.0,  0.5, 0.0 }, // 7
				{0.5,  0.0,  0.0,  0.0, 0.5 }, // 8
		},
		{
				// 0    1     2     3    4
				{0.5,  0.5,  0.0,  0.0, 0.0 }, // 5
				{0.0,  1.0,  0.0,  0.0, 0.0 }, // 1
				{0.0,  0.5,  0.5,  0.0, 0.0 }, // 9
				{0.0,  0.5,  0.0,  0.5, 0.0 }, // 10
				{0.0,  0.5,  0.0,  0.0, 0.5 }, // 11
		},
		{
				// 0    1     2     3    4
				{0.5,  0.0,  0.5,  0.0, 0.0 }, // 6
				{0.0,  0.5,  0.5,  0.0, 0.0 }, // 9
				{0.0,  0.0,  1.0,  0.0, 0.0 }, // 2
				{0.0,  0.0,  0.5,  0.5, 0.0 }, // 12
				{0.0,  0.0,  0.5,  0.0, 0.5 }, // 13
		}
};
const double DiTetra5RefinementPattern3DT_4Py_2T ::_refine_matrix_2[4][5][5] = {
		{
				//  0    1     2    3    4
				{0.5,  0.0,  0.0,  0.5, 0.0 }, // 7
				{0.0,  0.5,  0.0,  0.5, 0.0 }, // 10
				{0.0,  0.5,  0.5,  0.0, 0.0 }, // 9
				{0.5,  0.0,  0.5,  0.0, 0.0 }, // 6
				{0.0,  0.0,  0.5,  0.5, 0.0 }, // 12
		},
		{
				// 0    1     2     3    4
				{0.5,  0.0,  0.0,  0.5, 0.0 }, // 7
				{0.5,  0.0,  0.5,  0.0, 0.0 }, // 6
				{0.0,  0.5,  0.5,  0.0, 0.0 }, // 9
				{0.0,  0.5,  0.0,  0.5, 0.0 }, // 10
				{0.5,  0.5,  0.0,  0.0, 0.0 }, // 5
		},
		{
				// 0    1     2     3    4
				{0.5,  0.5,  0.0,  0.0, 0.0 }, // 5
				{0.0,  0.5,  0.0,  0.0, 0.5 }, // 11
				{0.0,  0.0,  0.5,  0.0, 0.5 }, // 13
				{0.5,  0.0,  0.5,  0.0, 0.0 }, // 6
				{0.0,  0.5,  0.5,  0.0, 0.0 }, // 9
		},
		{
				// 0    1     2     3    4
				{0.5,  0.5,  0.0,  0.0, 0.0 }, // 5
				{0.5,  0.0,  0.5,  0.0, 0.0 }, // 6
				{0.0,  0.0,  0.5,  0.0, 0.5 }, // 13
				{0.0,  0.5,  0.0,  0.0, 0.5 }, // 11
				{0.5,  0.0,  0.0,  0.0, 0.5 }, // 8
		}
};

//
const double DiTetra5RefinementPattern3DT_4Py_2T ::_refine_matrix_3[2][4][5] = { /* const */
		{
				//  0    1     2     3    4
				{0.5,  0.0,  0.0,  0.5, 0.0 }, // 7
				{0.0,  0.5,  0.0,  0.5, 0.0 }, // 10
				{0.0,  0.0,  0.5,  0.5, 0.0 }, // 12
				{0.0,  0.0,  0.0,  1.0, 0.0 }, // 3
		},
		{
				// 0    1     2     3    4
				{0.5,  0.0,  0.0,  0.0, 0.5 }, // 8
				{0.0,  0.0,  0.5,  0.0, 0.5 }, // 13
				{0.0,  0.5,  0.0,  0.0, 0.5 }, // 11
				{0.0,  0.0,  0.0,  0.0, 1.0 }, // 4
		}
};


/*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*/

const double DiTetra5RefinementPattern7DT_2T ::_refine_matrix_1[7][5][5] = { /* const */
		{
				//  0    1     2    3    4
				{1.0,  0.0,  0.0,  0.0, 0.0 }, // 0
				{0.5,  0.5,  0.0,  0.0, 0.0 }, // 5
				{0.5,  0.0,  0.5,  0.0, 0.0 }, // 6
				{0.5,  0.0,  0.0,  0.5, 0.0 }, // 7
				{0.5,  0.0,  0.0,  0.0, 0.5 }, // 8
		},
		{
				// 0    1     2     3    4
				{0.5,  0.5,  0.0,  0.0, 0.0 }, // 5
				{0.0,  1.0,  0.0,  0.0, 0.0 }, // 1
				{0.0,  0.5,  0.5,  0.0, 0.0 }, // 9
				{0.0,  0.5,  0.0,  0.5, 0.0 }, // 10
				{0.0,  0.5,  0.0,  0.0, 0.5 }, // 11
		},
		{
				// 0    1     2     3    4
				{0.5,  0.0,  0.5,  0.0, 0.0 }, // 6
				{0.0,  0.5,  0.5,  0.0, 0.0 }, // 9
				{0.0,  0.0,  1.0,  0.0, 0.0 }, // 2
				{0.0,  0.0,  0.5,  0.5, 0.0 }, // 12
				{0.0,  0.0,  0.5,  0.0, 0.5 }, // 13
		},
		{
				// 0    1     2     3    4
				{0.5,  0.0,  0.0,  0.5, 0.0 }, // 7
				{0.0,  0.5,  0.0,  0.5, 0.0 }, // 10
				{0.0,  0.5,  0.5,  0.0, 0.0 }, // 9
				{0.0,  0.0,  0.5,  0.5, 0.0 }, // 12
				{0.5,  0.5,  0.0,  0.0, 0.0 }, // 5
		},
		{
				// 0    1     2     3    4
				{0.5,  0.0,  0.0,  0.5, 0.0 }, // 7
				{0.0,  0.5,  0.5,  0.0, 0.0 }, // 9
				{0.5,  0.0,  0.5,  0.0, 0.0 }, // 6
				{0.0,  0.0,  0.5,  0.5, 0.0 }, // 12
				{0.5,  0.5,  0.0,  0.0, 0.0 }, // 5
		},
		{
				// 0    1     2     3    4
				{0.5,  0.5,  0.0,  0.0, 0.0 }, // 5
				{0.0,  0.5,  0.0,  0.0, 0.5 }, // 11
				{0.0,  0.0,  0.5,  0.0, 0.5 }, // 13
				{0.0,  0.5,  0.5,  0.0, 0.0 }, // 9
				{0.5,  0.0,  0.0,  0.0, 0.5 }, // 8
		},
		{
				// 0    1     2     3    4
				{0.5,  0.5,  0.0,  0.0, 0.0 }, // 5
				{0.0,  0.0,  0.5,  0.0, 0.5 }, // 13
				{0.5,  0.0,  0.5,  0.0, 0.0 }, // 6
				{0.0,  0.5,  0.5,  0.0, 0.0 }, // 9
				{0.5,  0.0,  0.0,  0.0, 0.5 }, // 8
		}

};

//
const double DiTetra5RefinementPattern7DT_2T ::_refine_matrix_2[2][4][5] = { /* const */
		{
				//  0    1     2     3    4
				{0.5,  0.0,  0.0,  0.5, 0.0 }, // 7
				{0.0,  0.5,  0.0,  0.5, 0.0 }, // 10
				{0.0,  0.0,  0.5,  0.5, 0.0 }, // 12
				{0.0,  0.0,  0.0,  1.0, 0.0 }, // 3
		},
		{
				// 0    1     2     3    4
				{0.5,  0.0,  0.0,  0.0, 0.5 }, // 8
				{0.0,  0.0,  0.5,  0.0, 0.5 }, // 13
				{0.0,  0.5,  0.0,  0.0, 0.5 }, // 11
				{0.0,  0.0,  0.0,  0.0, 1.0 }, // 4
		}
};

/*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*/

const double DiTetra5RefinementPattern64T ::_refine_matrix_1[64][4][5] = { /* const */
	    // sommets du tétraèdre supérieur
		// refine_matrix pour l'enfant 0
		{
				//  0   1    2    3   4
			    {1.0,  0.0,  0.0,  0.0, 0.0 }, // 0
				{0.75, 0.25, 0.0,  0.0, 0.0 }, // 9
				{0.75, 0.0, 0.25, 0.0, 0.0 }, // 13
				{0.75, 0.0, 0.0, 0.25, 0.0 }, // 15
		},
		// refine_matrix pour l'enfant 1
		{
				//  0   1    2    3   4
				{0.75, 0.0,  0.0,  0.25, 0.0 }, // 15
				{0.75, 0.25, 0.0,  0.0, 0.0 }, // 9
				{0.75, 0.0,  0.25, 0.0, 0.0 }, // 13
				{0.25, 0.25, 0.25, 0.25, 0.0 }, // 21
		},
		// refine_matrix pour l'enfant 2
		{
				//  0   1    2    3   4
				{0.25, 0.75, 0.0, 0.0, 0.0 }, // 10
				{0.0, 1.0, 0.0, 0.0, 0.0 }, // 1
				{0.0, 0.75, 0.25, 0.0, 0.0 }, // 11
				{0.0, 0.75, 0.0, 0.25, 0.0 }, // 17
		},
		// refine_matrix pour l'enfant 3
		{
				//  0   1    2    3   4
				{0.25, 0.75, 0.0,  0.0, 0.0 }, // 10
				{0.0,  0.75, 0.0,  0.25, 0.0 }, // 17
				{0.0,  0.75, 0.25, 0.0, 0.0 }, // 11
				{0.25, 0.25, 0.25, 0.25, 0.0 }, // 21
		},
		// refine_matrix pour l'enfant 4
		{
				//  0   1    2    3   4
				{0.25, 0.0, 0.75, 0.0, 0.0 }, // 14
				{0.0, 0.25, 0.75, 0.0, 0.0 }, // 12
				{0.0, 0.0, 1.0, 0.0, 0.0 }, // 2
				{0.0, 0.0, 0.75, 0.25, 0.0 }, // 19
		},
		// refine_matrix pour l'enfant 5
		{
				//  0   1    2    3   4
				{0.0,  0.25, 0.75, 0.0, 0.0 }, // 12
				{0.0,  0.0,  0.75, 0.25, 0.0 }, // 19
				{0.25, 0.0,  0.75, 0.0, 0.0  }, // 14
				{0.25, 0.25, 0.25, 0.25, 0.0 }, // 21
		},
		// refine_matrix pour l'enfant 6
		{
				//  0   1    2    3   4
				{0.25, 0.0, 0.0, 0.75, 0.0 }, // 16
				{0.0, 0.25, 0.0, 0.75, 0.0 }, // 18
				{0.0, 0.0, 0.25, 0.75, 0.0 }, // 20
				{0.0, 0.0, 0.0, 1.0, 0.0 }, // 3
		},
		// refine_matrix pour l'enfant 7
		{
				//  0   1    2    3   4
				{0.0,  0.0,  0.25, 0.75, 0.0 }, // 20
				{0.0,  0.25, 0.0,  0.75, 0.0 }, // 18
				{0.25, 0.0,  0.0,  0.75, 0.0 }, // 16
				{0.25, 0.25, 0.25, 0.25, 0.0 }, // 21
		},
		// hexagone 1
		// refine_matrix pour l'enfant 8
		{
				//  0   1    2    3   4
			    {0.75, 0.0, 0.0, 0.25, 0.0 }, // 15
				{0.75, 0.25, 0.0,  0.0, 0.0 }, // 9
				{0.33, 0.33, 0.0,  0.33, 0.0 }, // 6
				{0.25, 0.25, 0.25, 0.25, 0.0 }, // 21
		},
		// refine_matrix pour l'enfant 9
		{
				//  0   1    2    3   4
				{0.75, 0.25, 0.0,  0.0, 0.0 }, // 9
				{0.25, 0.75, 0.0, 0.0, 0.0 }, // 10
				{0.33, 0.33, 0.0,  0.33, 0.0 }, // 6
				{0.25, 0.25, 0.25, 0.25, 0.0 }, // 21
		},
		// refine_matrix pour l'enfant 10
		{
				//  0   1    2    3   4
				{0.25, 0.75, 0.0, 0.0, 0.0 }, // 10
				{0.0, 0.75, 0.0, 0.25, 0.0 }, // 17
				{0.33, 0.33, 0.0,  0.33, 0.0 }, // 6
				{0.25, 0.25, 0.25, 0.25, 0.0 }, // 21
		},
		// refine_matrix pour l'enfant 11
		{
				//  0   1    2    3   4
				{0.0, 0.75, 0.0, 0.25, 0.0 }, // 17
				{0.0, 0.25, 0.0, 0.75, 0.0 }, // 18
				{0.33, 0.33, 0.0,  0.33, 0.0 }, // 6
				{0.25, 0.25, 0.25, 0.25, 0.0 }, // 21
		},
		// refine_matrix pour l'enfant 12
		{
				//  0   1    2    3   4
				{0.0, 0.25, 0.0, 0.75, 0.0 }, // 18
				{0.25, 0.0, 0.0, 0.75, 0.0 }, // 16
				{0.33, 0.33, 0.0,  0.33, 0.0 }, // 6
				{0.25, 0.25, 0.25, 0.25, 0.0 }, // 21
		},
		// refine_matrix pour l'enfant 13
		{
				//  0   1    2    3   4
				{0.25, 0.0, 0.0, 0.75, 0.0 }, // 16
				{0.75, 0.0, 0.0, 0.25, 0.0 }, // 15
				{0.33, 0.33, 0.0,  0.33, 0.0 }, // 6
				{0.25, 0.25, 0.25, 0.25, 0.0 }, // 21
		},
		// hexagone 2
		// refine_matrix pour l'enfant 14
		{
				//  0   1    2    3   4
				{0.0, 0.75, 0.0, 0.25, 0.0 }, // 17
				{0.0, 0.75, 0.25, 0.0, 0.0 }, // 11
				{0.0,  0.33, 0.33, 0.33, 0.0 }, // 7
				{0.25, 0.25, 0.25, 0.25, 0.0 }, // 21
		},
		// refine_matrix pour l'enfant 15
		{
				//  0   1    2    3   4
				{0.0, 0.75, 0.25, 0.0, 0.0 }, // 11
				{0.0, 0.25, 0.75, 0.0, 0.0 }, // 12
				{0.0,  0.33, 0.33, 0.33, 0.0 }, // 7
				{0.25, 0.25, 0.25, 0.25, 0.0 }, // 21
		},
		// refine_matrix pour l'enfant 16
		{
				//  0   1    2    3   4
				{0.0, 0.25, 0.75, 0.0, 0.0 }, // 12
				{0.0, 0.0, 0.75, 0.25, 0.0 }, // 19
				{0.0,  0.33, 0.33, 0.33, 0.0 }, // 7
				{0.25, 0.25, 0.25, 0.25, 0.0 }, // 21
		},
		// refine_matrix pour l'enfant 17
		{
				//  0   1    2    3   4
				{0.0, 0.0, 0.75, 0.25, 0.0 }, // 19
				{0.0, 0.0, 0.25, 0.75, 0.0 }, // 20
				{0.0,  0.33, 0.33, 0.33, 0.0 }, // 7
				{0.25, 0.25, 0.25, 0.25, 0.0 }, // 21
		},
		// refine_matrix pour l'enfant 18
		{
				//  0   1    2    3   4
				{0.0, 0.0, 0.25, 0.75, 0.0 }, // 20
				{0.0, 0.25, 0.0, 0.75, 0.0 }, // 18
				{0.0,  0.33, 0.33, 0.33, 0.0 }, // 7
				{0.25, 0.25, 0.25, 0.25, 0.0 }, // 21
		},
		// refine_matrix pour l'enfant 19
		{
				//  0   1    2    3   4
				{0.0, 0.25, 0.0, 0.75, 0.0 }, // 18
				{0.0, 0.75, 0.0, 0.25, 0.0 }, // 17
				{0.0,  0.33, 0.33, 0.33, 0.0 }, // 7
				{0.25, 0.25, 0.25, 0.25, 0.0 }, // 21
		},
		// hexagone 3
		// refine_matrix pour l'enfant 20
		{
				//  0   1    2    3   4
				{0.75, 0.0, 0.0, 0.25, 0.0 }, // 15
				{0.75, 0.0, 0.25, 0.0, 0.0 }, // 13
				{0.33, 0.0,  0.33, 0.33, 0.0 }, // 8
				{0.25, 0.25, 0.25, 0.25, 0.0 }, // 21
		},
		// refine_matrix pour l'enfant 21
		{
				//  0   1    2    3   4
			    {0.75, 0.0, 0.25, 0.0, 0.0 }, // 13
				{0.25, 0.0, 0.75, 0.0, 0.0 }, // 14
				{0.33, 0.0,  0.33, 0.33, 0.0 }, // 8
				{0.25, 0.25, 0.25, 0.25, 0.0 }, // 21
		},
		// refine_matrix pour l'enfant 22
		{
				//  0   1    2    3   4
			    {0.25, 0.0, 0.75, 0.0, 0.0 }, // 14
				{0.0, 0.0, 0.75, 0.25, 0.0 }, // 19
				{0.33, 0.0,  0.33, 0.33, 0.0 }, // 8
				{0.25, 0.25, 0.25, 0.25, 0.0 }, // 21
		},
		// refine_matrix pour l'enfant 23
		{
				//  0   1    2    3   4
			    {0.0, 0.0, 0.75, 0.25, 0.0 }, // 19
				{0.0, 0.0, 0.25, 0.75, 0.0 }, // 20
				{0.33, 0.0, 0.33, 0.33, 0.0 }, // 8
				{0.25, 0.25, 0.25, 0.25, 0.0 }, // 21
		},
			// refine_matrix pour l'enfant 24
		{
				//  0   1    2    3   4
				{0.0, 0.0, 0.25, 0.75, 0.0 }, // 20
				{0.25, 0.0, 0.0, 0.75, 0.0 }, // 16
				{0.33, 0.0, 0.33, 0.33, 0.0 }, // 8
				{0.25, 0.25, 0.25, 0.25, 0.0 }, // 21
		},
		// refine_matrix pour l'enfant 25
		{
				//  0   1    2    3   4
			    {0.25, 0.0, 0.0, 0.75, 0.0 }, // 16
				{0.75, 0.0, 0.0, 0.25, 0.0 }, // 15
				{0.33, 0.0, 0.33, 0.33, 0.0 }, // 8
				{0.25, 0.25, 0.25, 0.25, 0.0 }, // 21
		},
		// hexagone 4 (interne)
		// refine_matrix pour l'enfant 26
		{
				//  0   1    2    3   4
				{0.75, 0.25, 0.0,  0.0, 0.0 }, // 9
				{0.25, 0.75, 0.0, 0.0, 0.0 }, // 10
				{0.33, 0.33, 0.33, 0.0, 0.0 }, // 5
				{0.25, 0.25, 0.25, 0.25, 0.0 }, // 21
		},
		// refine_matrix pour l'enfant 27
		{
				//  0   1    2    3   4
				{0.25, 0.75, 0.0, 0.0, 0.0 }, // 10
				{0.0, 0.75, 0.25, 0.0, 0.0 }, // 11
				{0.33, 0.33, 0.33, 0.0, 0.0 }, // 5
				{0.25, 0.25, 0.25, 0.25, 0.0 }, // 21
		},
		// refine_matrix pour l'enfant 28
		{
				//  0   1    2    3   4
			    {0.0, 0.75, 0.25, 0.0, 0.0 }, // 11
				{0.0, 0.25, 0.75, 0.0, 0.0 }, // 12
				{0.33, 0.33, 0.33, 0.0, 0.0 }, // 5
				{0.25, 0.25, 0.25, 0.25, 0.0 }, // 21
		},
		// refine_matrix pour l'enfant 29
		{
				//  0   1    2    3   4
				{0.0, 0.25, 0.75, 0.0, 0.0 }, // 12
				{0.25, 0.0, 0.75, 0.0, 0.0 }, // 14
				{0.33, 0.33, 0.33, 0.0, 0.0 }, // 5
				{0.25, 0.25, 0.25, 0.25, 0.0 }, // 21
		},
		// refine_matrix pour l'enfant 30
		{
				//  0   1    2    3   4
				{0.25, 0.0, 0.75, 0.0, 0.0 }, // 14
				{0.75, 0.0, 0.25, 0.0, 0.0 }, // 13
				{0.33, 0.33, 0.33, 0.0, 0.0 }, // 5
				{0.25, 0.25, 0.25, 0.25, 0.0 }, // 21
		},
		// refine_matrix pour l'enfant 31
		{
				//  0   1    2    3   4
				{0.75, 0.0, 0.25, 0.0, 0.0 }, // 13
				{0.75, 0.25, 0.0,  0.0, 0.0 }, // 9
				{0.33, 0.33, 0.33, 0.0, 0.0 }, // 5
				{0.25, 0.25, 0.25, 0.25, 0.0 }, // 21
		},
		// hexagone 5 (interne)
		// refine_matrix pour l'enfant 32
		{
				//  0   1    2    3   4
				{0.75, 0.25, 0.0,  0.0, 0.0 }, // 9
				{0.33, 0.33, 0.33, 0.0, 0.0 }, // 5
				{0.25, 0.75, 0.0, 0.0, 0.0 }, // 10
				{0.25, 0.25, 0.25, 0.0, 0.25 }, // 31
		},
		// refine_matrix pour l'enfant 33
		{
				//  0   1    2    3   4
				{0.25, 0.75, 0.0, 0.0, 0.0 }, // 10
				{0.33, 0.33, 0.33, 0.0, 0.0 }, // 5
				{0.0, 0.75, 0.25, 0.0, 0.0 }, // 11
				{0.25, 0.25, 0.25, 0.0, 0.25 }, // 31
		},
		// refine_matrix pour l'enfant 34
		{
				//  0   1    2    3   4
			    {0.0, 0.75, 0.25, 0.0, 0.0 }, // 11
				{0.33, 0.33, 0.33, 0.0, 0.0 }, // 5
				{0.0, 0.25, 0.75, 0.0, 0.0 }, // 12
				{0.25, 0.25, 0.25, 0.0, 0.25 }, // 31
		},
		// refine_matrix pour l'enfant 35
		{
				//  0   1    2    3   4
				{0.0, 0.25, 0.75, 0.0, 0.0 }, // 12
				{0.33, 0.33, 0.33, 0.0, 0.0 }, // 5
				{0.25, 0.0, 0.75, 0.0, 0.0 }, // 14
				{0.25, 0.25, 0.25, 0.0, 0.25 }, // 31
		},
		// refine_matrix pour l'enfant 36
		{
				//  0   1    2    3   4
				{0.25, 0.0, 0.75, 0.0, 0.0 }, // 14
				{0.33, 0.33, 0.33, 0.0, 0.0 }, // 5
				{0.75, 0.0, 0.25, 0.0, 0.0 }, // 13
				{0.25, 0.25, 0.25, 0.0, 0.25 }, // 31
		},
		// refine_matrix pour l'enfant 37
		{
				//  0   1    2    3   4
				{0.75, 0.0, 0.25, 0.0, 0.0 }, // 13
				{0.33, 0.33, 0.33, 0.0, 0.0 }, // 5
				{0.75, 0.25, 0.0,  0.0, 0.0 }, // 9
				{0.25, 0.25, 0.25, 0.0, 0.25 }, // 31
		},
		// hexagone 6
		// refine_matrix pour l'enfant 38
		{
				//  0   1    2    3   4
				{0.75, 0.25, 0.0,  0.0, 0.0  }, // 9
				{0.75, 0.0,  0.0, 0.0, 0.25  },  // 22
				{0.33, 0.33, 0.0, 0.0,  0.33  }, // 28
				{0.25, 0.25, 0.25, 0.0, 0.25  }, // 31
		},
		// refine_matrix pour l'enfant 39
		{
				//  0   1    2    3   4
				{0.75, 0.0,  0.0, 0.0, 0.25  },  // 22
				{0.25, 0.0,  0.0, 0.0, 0.75  },  // 23
				{0.33, 0.33, 0.0, 0.0,  0.33  }, // 28
				{0.25, 0.25, 0.25, 0.0, 0.25  }, // 31
		},
		// refine_matrix pour l'enfant 40
		{
				//  0   1    2    3   4
				{0.25, 0.0,  0.0, 0.0, 0.75  },  // 23
				{0.0, 0.25,  0.0, 0.0, 0.75  },  // 25
				{0.33, 0.33, 0.0, 0.0,  0.33  }, // 28
				{0.25, 0.25, 0.25, 0.0, 0.25  }, // 31
		},
		// refine_matrix pour l'enfant 41
		{
				//  0   1    2    3   4
				{0.0, 0.25,  0.0, 0.0, 0.75  },  // 25
				{0.0, 0.75,  0.0, 0.0, 0.25  },  // 24
				{0.33, 0.33, 0.0, 0.0,  0.33  }, // 28
				{0.25, 0.25, 0.25, 0.0, 0.25  }, // 31
		},
		// refine_matrix pour l'enfant 42
		{
				//  0   1    2    3   4
				{0.0, 0.75,  0.0, 0.0, 0.25  },  // 24
				{0.25, 0.75, 0.0,  0.0, 0.0  }, // 10
				{0.33, 0.33, 0.0, 0.0,  0.33  }, // 28
				{0.25, 0.25, 0.25, 0.0, 0.25  }, // 31
		},
		// refine_matrix pour l'enfant 43
		{
				//  0   1    2    3   4
				{0.25, 0.75, 0.0,  0.0, 0.0  }, // 10
				{0.75, 0.25, 0.0,  0.0, 0.0  }, // 9
				{0.33, 0.33, 0.0, 0.0,  0.33  }, // 28
				{0.25, 0.25, 0.25, 0.0, 0.25  }, // 31
		},
		// hexagone 7
		// refine_matrix pour l'enfant 44
		{
				//  0   1    2    3   4
				{0.0,  0.75, 0.25, 0.0, 0.0  }, // 11
				{0.0, 0.75,  0.0, 0.0, 0.25  },  // 24
				{0.0,  0.33, 0.33, 0.0, 0.33  }, // 29
				{0.25, 0.25, 0.25, 0.0, 0.25  }, // 31
		},
		// refine_matrix pour l'enfant 45
		{
				//  0   1    2    3   4
				{0.0, 0.75,  0.0, 0.0, 0.25  },  // 24
				{0.0, 0.25,  0.0, 0.0, 0.75  },  // 25
				{0.0,  0.33, 0.33, 0.0, 0.33  }, // 29
				{0.25, 0.25, 0.25, 0.0, 0.25  }, // 31
		},
		// refine_matrix pour l'enfant 46
		{
				//  0   1    2    3   4
				{0.0, 0.25,  0.0, 0.0, 0.75  },  // 25
				{0.0,  0.0, 0.25, 0.0, 0.75  },  // 27
				{0.0,  0.33, 0.33, 0.0, 0.33  }, // 29
				{0.25, 0.25, 0.25, 0.0, 0.25  }, // 31
		},
		// refine_matrix pour l'enfant 47
		{
				//  0   1    2    3   4
				{0.0,  0.0, 0.25, 0.0, 0.75  },  // 27
				{0.0,  0.0, 0.75, 0.0, 0.25  },  // 26
				{0.0,  0.33, 0.33, 0.0, 0.33  }, // 29
				{0.25, 0.25, 0.25, 0.0, 0.25  }, // 31
		},
		// refine_matrix pour l'enfant 48
		{
				//  0   1    2    3   4
				{0.0,  0.0, 0.75, 0.0, 0.25  },  // 26
				{0.0,  0.25, 0.75, 0.0, 0.0  }, // 12
				{0.0,  0.33, 0.33, 0.0, 0.33  }, // 29
				{0.25, 0.25, 0.25, 0.0, 0.25  }, // 31
		},
		// refine_matrix pour l'enfant 49
		{
				//  0   1    2    3   4
				{0.0,  0.25, 0.75, 0.0, 0.0  }, // 12
				{0.0,  0.75, 0.25, 0.0, 0.0  }, // 11
				{0.0,  0.33, 0.33, 0.0, 0.33  }, // 29
				{0.25, 0.25, 0.25, 0.0, 0.25  }, // 31
		},
		// hexagone 8
		// refine_matrix pour l'enfant 50
		{
				//  0   1    2    3   4
				{0.75, 0.0,  0.25, 0.0, 0.0  }, // 13
				{0.75, 0.0,  0.0, 0.0, 0.25  },  // 22
				{0.33, 0.0,  0.33, 0.0, 0.33  }, // 30
				{0.25, 0.25, 0.25, 0.0, 0.25  }, // 31
		},
		// refine_matrix pour l'enfant 51
		{
				//  0   1    2    3   4
				{0.75, 0.0,  0.0, 0.0, 0.25  },  // 22
				{0.25, 0.0,  0.0, 0.0, 0.75  },  // 23
				{0.33, 0.0,  0.33, 0.0, 0.33  }, // 30
				{0.25, 0.25, 0.25, 0.0, 0.25  }, // 31
		},
		// refine_matrix pour l'enfant 52
		{
				//  0   1    2    3   4
				{0.25, 0.0,  0.0, 0.0, 0.75  },  // 23
				{0.0,  0.0, 0.25, 0.0, 0.75  },  // 27
				{0.33, 0.0,  0.33, 0.0, 0.33  }, // 30
				{0.25, 0.25, 0.25, 0.0, 0.25  }, // 31
		},
		// refine_matrix pour l'enfant 53
		{
				//  0   1    2    3   4
				{0.0,  0.0, 0.25, 0.0, 0.75  },  // 27
				{0.0,  0.0, 0.75, 0.0, 0.25  },  // 26
				{0.33, 0.0,  0.33, 0.0, 0.33  }, // 30
				{0.25, 0.25, 0.25, 0.0, 0.25  }, // 31
		},
		// refine_matrix pour l'enfant 54
		{
				//  0   1    2    3   4
				{0.0,  0.0, 0.75, 0.0, 0.25  },  // 26
				{0.25, 0.0,  0.75, 0.0, 0.0  }, // 14
				{0.33, 0.0,  0.33, 0.0, 0.33  }, // 30
				{0.25, 0.25, 0.25, 0.0, 0.25  }, // 31
		},
		// refine_matrix pour l'enfant 55
		{
				//  0   1    2    3   4
				{0.25, 0.0,  0.75, 0.0, 0.0  }, // 14
				{0.75, 0.0,  0.25, 0.0, 0.0  }, // 13
				{0.33, 0.0,  0.33, 0.0, 0.33  }, // 30
				{0.25, 0.25, 0.25, 0.0, 0.25  }, // 31
		},
        // sommets du tétraèdre inférieur
        // refine_matrix pour l'enfant 56
		{
				//  0   1    2    3   4
				{1.0,  0.0,  0.0,  0.0, 0.0 }, // 0
				{0.75, 0.0,  0.25, 0.0, 0.0  }, // 13
				{0.75, 0.25, 0.0,  0.0, 0.0  }, // 9
				{0.75, 0.0,  0.0, 0.0, 0.25  },  // 22
		},
		// refine_matrix pour l'enfant 57
		{
				//  0   1    2    3   4
				{0.75, 0.25, 0.0,  0.0, 0.0  }, // 9
				{0.75, 0.0,  0.0, 0.0, 0.25  },  // 22
				{0.75, 0.0,  0.25, 0.0, 0.0  }, // 13
				{0.25, 0.25, 0.25, 0.0, 0.25  }, // 31
		},
		// refine_matrix pour l'enfant 58
		{
				//  0   1    2    3   4
				{0.0,  0.25, 0.75, 0.0, 0.0  }, // 12
				{0.0,  0.0,  1.0,  0.0, 0.0 }, // 2
				{0.25, 0.0,  0.75, 0.0, 0.0  }, // 14
				{0.0,  0.0, 0.75, 0.0, 0.25  },  // 26
		},
		// refine_matrix pour l'enfant 59
		{
				//  0   1    2    3   4
				{0.0,  0.25, 0.75, 0.0, 0.0  }, // 12
				{0.25, 0.0,  0.75, 0.0, 0.0  }, // 14
				{0.0,  0.0, 0.75, 0.0, 0.25  },  // 26
				{0.25, 0.25, 0.25, 0.0, 0.25  }, // 31
		},
		// refine_matrix pour l'enfant 60
		{
				//  0   1    2    3   4
				{0.25, 0.75, 0.0,  0.0, 0.0  }, // 10
				{0.0,  0.75, 0.25, 0.0, 0.0  }, // 11
				{0.0,  1.0,  0.0,  0.0, 0.0 }, // 1
				{0.0, 0.75,  0.0, 0.0, 0.25  },  // 24
		},
		// refine_matrix pour l'enfant 61
		{
				//  0   1    2    3   4
				{0.25, 0.75, 0.0,  0.0, 0.0  }, // 10
				{0.0, 0.75,  0.0, 0.0, 0.25  },  // 24
				{0.0,  0.75, 0.25, 0.0, 0.0  }, // 11
				{0.25, 0.25, 0.25, 0.0, 0.25  }, // 31
		},
		// refine_matrix pour l'enfant 62
		{
				//  0   1    2    3   4
				{0.0, 0.25,  0.0, 0.0, 0.75  },  // 25
				{0.25, 0.0,  0.0, 0.0, 0.75  },  // 23
				{0.0,  0.0, 0.25, 0.0, 0.75  },  // 27
				{0.0,  0.0,  0.0,  0.0, 1.0 }, // 4
		},
		// refine_matrix pour l'enfant 63
		{
				//  0   1    2    3   4
				{0.0, 0.25,  0.0, 0.0, 0.75  },  // 25
				{0.0,  0.0, 0.25, 0.0, 0.75  },  // 27
				{0.25, 0.0,  0.0, 0.0, 0.75  },  // 23
				{0.25, 0.25, 0.25, 0.0, 0.25  }, // 31
		}
};

/*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*/

const double DiTetra5RefinementPattern32DT ::_refine_matrix_1[32][5][5] = { /* const */
		// sommets du tétraèdre supérieur
		// refine_matrix pour l'enfant 0
		{
				// 0    1     2     3    4
				{0.75, 0.25, 0.0,  0.0, 0.0 }, // 9
				{0.75, 0.0, 0.0, 0.25, 0.0 }, // 15
				{0.75, 0.0, 0.25, 0.0, 0.0 }, // 13
				{1.0,  0.0,  0.0,  0.0, 0.0 }, // 0
				{0.25, 0.25, 0.25, 0.25, 0.0 }, // 21
		},
		// refine_matrix pour l'enfant 1
		{
				// 0     1     2     3     4
				{0.0,  0.75, 0.0,  0.25, 0.0 }, // 17
				{0.25, 0.75, 0.0, 0.0, 0.0 }, // 10
				{0.0, 0.75, 0.25, 0.0, 0.0 }, // 11
				{0.0, 1.0, 0.0, 0.0, 0.0 }, // 1
				{0.25, 0.25, 0.25, 0.25, 0.0 }, // 21
		},
		// refine_matrix pour l'enfant 1
		{
				// 0     1     2     3     4
				{0.0, 0.0, 0.75, 0.25, 0.0 }, // 19
				{0.0, 0.25, 0.75, 0.0, 0.0 }, // 12
				{0.25, 0.0, 0.75, 0.0, 0.0 }, // 14
				{0.0, 0.0, 1.0, 0.0, 0.0 }, // 2
				{0.25, 0.25, 0.25, 0.25, 0.0 }, // 21
		},
		// refine_matrix pour l'enfant 1
		{
				// 0     1     2     3     4
				{0.25, 0.0, 0.0, 0.75, 0.0 }, // 16
				{0.0, 0.25, 0.0, 0.75, 0.0 }, // 18
				{0.0, 0.0, 0.25, 0.75, 0.0 }, // 20
				{0.0, 0.0, 0.0, 1.0, 0.0 }, // 3
				{0.25, 0.25, 0.25, 0.25, 0.0 }, // 21
		},
		// hexagone 1
		// refine_matrix pour l'enfant 1
		{
				// 0     1     2     3     4
				{0.33, 0.33, 0.0,  0.33, 0.0 }, // 6
				{0.75, 0.25, 0.0,  0.0, 0.0 }, // 9
				{0.25, 0.25, 0.25, 0.25, 0.0 }, // 21
				{0.25, 0.75, 0.0, 0.0, 0.0 }, // 10
				{0.75, 0.0, 0.0, 0.25, 0.0 }, // 15
		},
		// refine_matrix pour l'enfant 1
		{
				// 0     1     2     3     4
				{0.33, 0.33, 0.0,  0.33, 0.0 }, // 6
				{0.0, 0.75, 0.0, 0.25, 0.0 }, // 17
				{0.25, 0.25, 0.25, 0.25, 0.0 }, // 21
				{0.0, 0.25, 0.0, 0.75, 0.0 }, // 18
				{0.25, 0.75, 0.0, 0.0, 0.0 }, // 10
		},
		// refine_matrix pour l'enfant 1
		{
				// 0     1     2     3     4
				{0.33, 0.33, 0.0,  0.33, 0.0 }, // 6
				{0.25, 0.0, 0.0, 0.75, 0.0 }, // 16
				{0.25, 0.25, 0.25, 0.25, 0.0 }, // 21
				{0.75, 0.0, 0.0, 0.25, 0.0 }, // 15
				{0.0, 0.25, 0.0, 0.75, 0.0 }, // 18
		},
		// hexagone 2
		// refine_matrix pour l'enfant 1
		{
				// 0     1     2     3     4
				{0.0,  0.33, 0.33, 0.33, 0.0 }, // 7
				{0.0, 0.75, 0.25, 0.0, 0.0 }, // 11
				{0.25, 0.25, 0.25, 0.25, 0.0 }, // 21
				{0.0, 0.25, 0.75, 0.0, 0.0 }, // 12
				{0.0, 0.75, 0.0, 0.25, 0.0 }, // 17
		},
		// refine_matrix pour l'enfant 1
		{
				// 0     1     2     3     4
				{0.0,  0.33, 0.33, 0.33, 0.0 }, // 7
				{0.0, 0.0, 0.75, 0.25, 0.0 }, // 19
				{0.25, 0.25, 0.25, 0.25, 0.0 }, // 21
				{0.0, 0.0, 0.25, 0.75, 0.0 }, // 20
				{0.0, 0.25, 0.75, 0.0, 0.0 }, // 12
		},
		// refine_matrix pour l'enfant 1
		{
				// 0     1     2     3     4
				{0.0,  0.33, 0.33, 0.33, 0.0 }, // 7
				{0.0, 0.25, 0.0, 0.75, 0.0 }, // 18
				{0.25, 0.25, 0.25, 0.25, 0.0 }, // 21
				{0.0, 0.75, 0.0, 0.25, 0.0 }, // 17
				{0.0, 0.0, 0.25, 0.75, 0.0 }, // 20
		},
		// hexagone 3
		// refine_matrix pour l'enfant 1
		{
				// 0     1     2     3     4
				{0.33, 0.0,  0.33, 0.33, 0.0 }, // 8
				{0.75, 0.0, 0.25, 0.0, 0.0 }, // 13
				{0.25, 0.25, 0.25, 0.25, 0.0 }, // 21
				{0.75, 0.0, 0.0, 0.25, 0.0 }, // 15
				{0.25, 0.0, 0.75, 0.0, 0.0 }, // 14
		},
		// refine_matrix pour l'enfant 1
		{
				// 0     1     2     3     4
				{0.33, 0.0,  0.33, 0.33, 0.0 }, // 8
				{0.25, 0.0, 0.0, 0.75, 0.0 }, // 16
				{0.25, 0.25, 0.25, 0.25, 0.0 }, // 21
				{0.0, 0.0, 0.25, 0.75, 0.0 }, // 20
				{0.75, 0.0, 0.0, 0.25, 0.0 }, // 15
		},
		// refine_matrix pour l'enfant 1
		{
				// 0     1     2     3     4
				{0.33, 0.0,  0.33, 0.33, 0.0 }, // 8
				{0.0, 0.0, 0.75, 0.25, 0.0 }, // 19
				{0.25, 0.25, 0.25, 0.25, 0.0 }, // 21
				{0.25, 0.0, 0.75, 0.0, 0.0 }, // 14
				{0.0, 0.0, 0.25, 0.75, 0.0 }, // 20
		},
		//hexagones 4 et 5
		// refine_matrix pour l'enfant 1
		{
				// 0     1     2     3     4
				{0.75, 0.25, 0.0,  0.0, 0.0 }, // 9
				{0.25, 0.75, 0.0, 0.0, 0.0 }, // 10
				{0.33, 0.33, 0.33, 0.0, 0.0 }, // 5
				{0.25, 0.25, 0.25, 0.25, 0.0 }, // 21
				{0.25, 0.25, 0.25, 0.0, 0.25 }, // 31
		},
		// refine_matrix pour l'enfant 1
		{
				// 0     1     2     3     4
				{0.25, 0.75, 0.0, 0.0, 0.0 }, // 10
				{0.0, 0.75, 0.25, 0.0, 0.0 }, // 11
				{0.33, 0.33, 0.33, 0.0, 0.0 }, // 5
				{0.25, 0.25, 0.25, 0.25, 0.0 }, // 21
				{0.25, 0.25, 0.25, 0.0, 0.25 }, // 31
		},
		// refine_matrix pour l'enfant 1
		{
				// 0     1     2     3     4
				{0.0, 0.75, 0.25, 0.0, 0.0 }, // 11
				{0.0, 0.25, 0.75, 0.0, 0.0 }, // 12
				{0.33, 0.33, 0.33, 0.0, 0.0 }, // 5
				{0.25, 0.25, 0.25, 0.25, 0.0 }, // 21
				{0.25, 0.25, 0.25, 0.0, 0.25 }, // 31
		},
		// refine_matrix pour l'enfant 1
		{
				// 0     1     2     3     4
				{0.0, 0.25, 0.75, 0.0, 0.0 }, // 12
				{0.25, 0.0, 0.75, 0.0, 0.0 }, // 14
				{0.33, 0.33, 0.33, 0.0, 0.0 }, // 5
				{0.25, 0.25, 0.25, 0.25, 0.0 }, // 21
				{0.25, 0.25, 0.25, 0.0, 0.25 }, // 31
		},
		// refine_matrix pour l'enfant 1
		{
				// 0     1     2     3     4
				{0.25, 0.0, 0.75, 0.0, 0.0 }, // 14
				{0.75, 0.0, 0.25, 0.0, 0.0 }, // 13
				{0.33, 0.33, 0.33, 0.0, 0.0 }, // 5
				{0.25, 0.25, 0.25, 0.25, 0.0 }, // 21
				{0.25, 0.25, 0.25, 0.0, 0.25 }, // 31
		},
		// refine_matrix pour l'enfant 1
		{
				// 0     1     2     3     4
				{0.75, 0.0, 0.25, 0.0, 0.0 }, // 13
				{0.75, 0.25, 0.0,  0.0, 0.0 }, // 9
				{0.33, 0.33, 0.33, 0.0, 0.0 }, // 5
				{0.25, 0.25, 0.25, 0.25, 0.0 }, // 21
				{0.25, 0.25, 0.25, 0.0, 0.25 }, // 31
		},
		// hexagone 6
		// refine_matrix pour l'enfant 1
		{
				// 0     1     2     3     4
				{0.33, 0.33, 0.0, 0.0,  0.33  }, // 28
				{0.75, 0.0,  0.0, 0.0, 0.25  },  // 22
				{0.25, 0.25, 0.25, 0.0, 0.25  }, // 31
				{0.25, 0.0,  0.0, 0.0, 0.75  },  // 23
				{0.75, 0.25, 0.0,  0.0, 0.0  }, // 9
		},
		// refine_matrix pour l'enfant 1
		{
				// 0     1     2     3     4
				{0.33, 0.33, 0.0, 0.0,  0.33  }, // 28
				{0.0, 0.25,  0.0, 0.0, 0.75  },  // 25
				{0.25, 0.25, 0.25, 0.0, 0.25  }, // 31
				{0.0, 0.75,  0.0, 0.0, 0.25  },  // 24
				{0.25, 0.0,  0.0, 0.0, 0.75  },  // 23
		},
		// refine_matrix pour l'enfant 1
		{
				// 0     1     2     3     4
				{0.33, 0.33, 0.0, 0.0,  0.33  }, // 28
				{0.25, 0.75, 0.0,  0.0, 0.0  }, // 10
				{0.25, 0.25, 0.25, 0.0, 0.25  }, // 31
				{0.75, 0.25, 0.0,  0.0, 0.0  }, // 9
				{0.0, 0.75,  0.0, 0.0, 0.25  },  // 24
		},
		// hexagone 7
		// refine_matrix pour l'enfant 1
		{
				// 0     1     2     3     4
				{0.0,  0.33, 0.33, 0.0, 0.33  }, // 29
				{0.0, 0.75,  0.0, 0.0, 0.25  },  // 24
				{0.25, 0.25, 0.25, 0.0, 0.25  }, // 31
				{0.0, 0.25,  0.0, 0.0, 0.75  },  // 25
				{0.0,  0.75, 0.25, 0.0, 0.0  }, // 11
		},
		// refine_matrix pour l'enfant 1
		{
				// 0     1     2     3     4
				{0.0,  0.33, 0.33, 0.0, 0.33  }, // 29
				{0.0,  0.0, 0.25, 0.0, 0.75  },  // 27
				{0.25, 0.25, 0.25, 0.0, 0.25  }, // 31
				{0.0,  0.0, 0.75, 0.0, 0.25  },  // 26
				{0.0, 0.25,  0.0, 0.0, 0.75  },  // 25
		},
		// refine_matrix pour l'enfant 1
		{
				// 0     1     2     3     4
				{0.0,  0.33, 0.33, 0.0, 0.33  }, // 29
				{0.0,  0.25, 0.75, 0.0, 0.0  }, // 12
				{0.25, 0.25, 0.25, 0.0, 0.25  }, // 31
				{0.0,  0.75, 0.25, 0.0, 0.0  }, // 11
				{0.0,  0.0, 0.75, 0.0, 0.25  },  // 26
		},
		// hexagone 8
		// refine_matrix pour l'enfant 1
		{
				// 0     1     2     3     4
				{0.33, 0.0,  0.33, 0.0, 0.33  }, // 30
				{0.75, 0.0,  0.0, 0.0, 0.25  },  // 22
				{0.25, 0.25, 0.25, 0.0, 0.25  }, // 31
				{0.75, 0.0,  0.25, 0.0, 0.0  }, // 13
				{0.25, 0.0,  0.0, 0.0, 0.75  },  // 23
		},
		// refine_matrix pour l'enfant 1
		{
				// 0     1     2     3     4
				{0.33, 0.0,  0.33, 0.0, 0.33  }, // 30
				{0.25, 0.0,  0.75, 0.0, 0.0  }, // 14
				{0.25, 0.25, 0.25, 0.0, 0.25  }, // 31
				{0.0,  0.0, 0.75, 0.0, 0.25  },  // 26
				{0.75, 0.0,  0.25, 0.0, 0.0  }, // 13
		},
		// refine_matrix pour l'enfant 1
		{
				// 0     1     2     3     4
				{0.33, 0.0,  0.33, 0.0, 0.33  }, // 30
				{0.0,  0.0, 0.25, 0.0, 0.75  },  // 27
				{0.25, 0.25, 0.25, 0.0, 0.25  }, // 31
				{0.25, 0.0,  0.0, 0.0, 0.75  },  // 23
				{0.0,  0.0, 0.75, 0.0, 0.25  },  // 26
		},
		// sommets du tétraèdre inférieur
		// refine_matrix pour l'enfant 1
		{
				// 0     1     2     3     4
				{0.75, 0.25, 0.0,  0.0, 0.0  }, // 9
				{0.75, 0.0,  0.25, 0.0, 0.0  }, // 13
				{0.75, 0.0,  0.0, 0.0, 0.25  },  // 22
				{1.0,  0.0,  0.0,  0.0, 0.0 }, // 0
				{0.25, 0.25, 0.25, 0.0, 0.25  }, // 31
		},
		// refine_matrix pour l'enfant 1
		{
				// 0     1     2     3     4
				{0.0,  0.25, 0.75, 0.0, 0.0  }, // 12
				{0.0,  0.0, 0.75, 0.0, 0.25  },  // 26
				{0.25, 0.0,  0.75, 0.0, 0.0  }, // 14
				{0.0,  0.0,  1.0,  0.0, 0.0 }, // 2
				{0.25, 0.25, 0.25, 0.0, 0.25  }, // 31
		},
		// refine_matrix pour l'enfant 1
		{
				// 0     1     2     3     4
				{0.25, 0.75, 0.0,  0.0, 0.0  }, // 10
				{0.0, 0.75,  0.0, 0.0, 0.25  },  // 24
				{0.0,  0.75, 0.25, 0.0, 0.0  }, // 11
				{0.0,  1.0,  0.0,  0.0, 0.0 }, // 1
				{0.25, 0.25, 0.25, 0.0, 0.25  }, // 31
		},
		// refine_matrix pour l'enfant 1
		{
				// 0     1     2     3     4
				{0.0, 0.25,  0.0, 0.0, 0.75  },  // 25
				{0.25, 0.0,  0.0, 0.0, 0.75  },  // 23
				{0.0,  0.0, 0.25, 0.0, 0.75  },  // 27
				{0.0,  0.0,  0.0,  0.0, 1.0 }, // 4
				{0.25, 0.25, 0.25, 0.0, 0.25  }, // 31
        }
};

/*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*/

} // End namespace Arcane

/*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*/

